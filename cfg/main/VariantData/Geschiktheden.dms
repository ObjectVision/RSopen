container src
{
	container Wonen
	{
		unit<uint8> OP := caseClassifications/Vastgoed/OP;
		
		container Impl
		{
			container CalcOpbrengsten_perOP  := for_each_nedv(OP/name, 'Woningwaarde_perOP/'+OP/name+'/Prijs_OP', AdminDomain, Eur);
			container WriteOpbrengsten_perOP := 
				for_each_neidvat(
					OP/name
					, 'CalcOpbrengsten_perOP/'+OP/name
					, 'not(all(IsNull(this)))'
					, AdminDomain
					, Eur
					, '%LocalDataProjDir%/VariantData/Vastgoed/Opbrengsten_perOP/'+Variant_name+'/'+OP/name+'_'+/ModelParameters/StudyArea+'.tif'
					, 'gdalwrite.grid'
				)
			{
				parameter<string> GenerateAll := 'Done', ExplicitSuppliers = "=AsList(OP/name,';')";
			}
			
			container ReadOpbrengsten_perOP_UNCHECKED := 
				for_each_ndvat(
					OP/name
					, AdminDomain
					, Eur
					, '%LocalDataProjDir%/VariantData/Vastgoed/Opbrengsten_perOP/'+Variant_name+'/'+OP/name+'_'+/ModelParameters/StudyArea+'.tif'
					, 'tif'
				), StorageReadOnly = "True", Descr = "This tif file could potentially contain only zeros or undefined values. To check for this eventuality, the container following this one checks for this.";
				
			container ReadOpbrengsten_perOP  := 
				for_each_neidv(
					OP/name
					, 'ReadOpbrengsten_perOP_UNCHECKED/'+OP/name
					, 'not(all(IsNull(this)))'
					, AdminDomain
					, Eur
				);
				
			container Woningwaarde_perOP := for_each_ne(OP/name, 'Templates/Suitabilities/Woningwaarde_OP_T('+string(id(OP))+'[OP])');
		}
		
		container Opbrengsten_perOP_src  := = ModelParameters/VariantDataOntkoppeld ? 'Impl/ReadOpbrengsten_perOP' : 'Impl/WriteOpbrengsten_perOP';
		container Opbrengsten_perOP      := 
			for_each_nedv(
				OP/name
				, 'collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, Opbrengsten_perOP_src/'+OP/name+')'
				, CompactedAdminDomain
				, Eur
			);
		
		#include<Bouwkosten.dms>
	}
}