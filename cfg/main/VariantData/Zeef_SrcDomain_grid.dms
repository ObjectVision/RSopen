////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Dit is RSOpen, de open source versie van het model RuimteScanner. Het scipt wordt uitgegeven onder GNU-GPL licentie.
//
// RSOpen is ontwikkeld door PBL Planbureau voor de Leefomgeving, i.s.m Object Vision B.V. en VU Vrije Universiteit Amsterdam.
// Opdrachtgever/ontwikkelaar PBL: Bart Rijken
// Contactpersoon/ontwikkelaar Object Vision B.V.: Jip Claassens (jclaassens@objectvision.nl)
// Contacpersoon PBL: Bas van Bemmel (Bas.vanBemmel@pbl.nl)
//
// Deze file bevat de zeefanalyse op AdminDomain. Gridcellen die bij voorbaat als ongeschikt worden beschouwd worden 'weggezeefd'. Deze gridcellen doen niet mee in de allocatie.
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

container Zeef_AdminDomain :=
	for_each_ne(
		CaseClassifications/Actor/VariantXSectorXSubsector/combi_name
		,'Templates/Beschikbaarheden/Zeef_AdminDomain_T(
			CaseClassifications/Actor/VariantXSectorXSubsector
			,'+string(id(CaseClassifications/Actor/VariantXSectorXSubsector))+'[CaseClassifications/Actor/VariantXSectorXSubsector]
			,VariantData
		)'
	)
{
	container BaseData := /BaseData, using = "Classifications" // generiek voor wonen en weken en voor varianten
	{
		attribute<bool>  IsZeehaven                               (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, StartState/Grondgebruik/Per_AdminDomain/IsZeehaven);
		attribute<float32> Bouwjaar                                 (CompactedAdminDomain) := max_elem(BouwjaarVBO, BouwjaarPand);
		attribute<float32> BouwjaarVBO                              (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, mean(BAG_Modeljaar/VBO/bouwjaar_trunc, BAG_Modeljaar/VBO/AdminDomain_rel));
		attribute<float32> BouwjaarPand                             (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, mean(BAG_Modeljaar/pand/Bouwjaar_trunc, BAG_Modeljaar/Pand/AdminDomain_rel)); 
		
		attribute<bool>  IsEigendomVanNatuurOrganisatie           (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, StartState/Eigendom/VanNatuurOrganisatie);
		attribute<bool>  IsEigendomVanWaterschap                  (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, StartState/Eigendom/VanWaterschap);
		attribute<bool>  IsWoonlocatieNietVanGemeenteOfCorporatie (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, StartState/Grondgebruik/Per_AdminDomain/IsWoonlocatie && !(StartState/Eigendom/VanGemeente || StartState/Eigendom/VanWoningcooperatie));
		
		attribute<bool>  ZeerNabijOV                              (CompactedAllocDomain) := collect_by_cond(CompactedAllocDomain, AllocDomain/IsCompactedDomain, Omgeving/OV_Reistijd/ZeerNabijOV);
		attribute<bool>  NabijOV                                  (CompactedAllocDomain) := collect_by_cond(CompactedAllocDomain, AllocDomain/IsCompactedDomain, Omgeving/OV_Reistijd/NabijOV);
		attribute<bool>  BeperktNabijOV                           (CompactedAllocDomain) := collect_by_cond(CompactedAllocDomain, AllocDomain/IsCompactedDomain, Omgeving/OV_Reistijd/BeperktNabijOV);
		attribute<bool>  NietNabijOV                              (CompactedAllocDomain) := collect_by_cond(CompactedAllocDomain, AllocDomain/IsCompactedDomain, Omgeving/OV_Reistijd/NietNabijOV);
		
		attribute<bool>  Slap                                     (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, SourceData/Water/TeSlap/Slap/IsSlap[AdminDomain/AllocDomain_rel]);
		attribute<bool>  Zettingsgevoelig                         (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, SourceData/Water/TeSlap/Zettingsgevoelig/IsZettingsgevoelig[AdminDomain/AllocDomain_rel]);
		attribute<bool>  BeheerKostenInfraHoog                    (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, SourceData/Bodem/Bodemdaling/Bodemdaling_2016_2050_cm_1_25mtr > /ModelParameters/MaxBodemdaling) && (Slap || Zettingsgevoelig);
		attribute<bool>  ReserverenVoorRivierAfvoer_Krap          (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, Omgeving/Gebiedsreservering || Omgeving/stroomvoerend_deel_rivierbed && !Omgeving/BBG/Per_AdminDomain);
		attribute<bool>  ReserverenVoorRivierAfvoer_Ruim          (CompactedAdminDomain) := ReserverenVoorRivierAfvoer_Krap || collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, (SourceData/Water/dijkringen/dijkring2020/ReserverenVoorRivierAfvoer_Ruim[/SourceData/Water/dijkringen/dijkring2020/per_rdc_25m] && !Omgeving/HogeGronden)) && collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, !Omgeving/BBG/Per_AdminDomain);
		
		attribute<Classifications/Grondgebruik/CBSKlasse> GrondgebruikBasisjaar (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, StartState/Grondgebruik/Per_AdminDomain/Basisjaar);
		attribute<Vastgoed/Energielabel> EnergieLabel (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, SourceData/Vastgoed/Energielabels/modus);
	}
}