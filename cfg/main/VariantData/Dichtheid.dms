container Density
{
	container Per_AllocDomain := 
		for_each_ne(Time/Zichtjaar/name
		, 'Templates/Densities/DichtheidZichtjaar_T('+string(id(Time/Zichtjaar))+'[Time/Zichtjaar])');
	
	container Per_CompactedAllocDomain := for_each_ne(Time/Zichtjaar/name, 'DichtheidZichtjaar_Compacted_T('+string(id(Time/Zichtjaar))+'[Time/Zichtjaar])');
	
	Template DichtheidZichtjaar_Compacted_T
	{
		//
		parameter<Time/Zichtjaar> id;
		//
		
		parameter<string> Zichtjaar_name := Time/Zichtjaar/name[id];
		
		container SectorXSubsectoren := for_each_ne(Sector/XSubsector/name, 'SectorXSubsector_Compacted_T('+string(id(Sector/XSubsector))+'[Sector/XSubsector])');
		
		container Src
		{
			container Werken
			{
				container Pandfootprint_perJob
				{
					container Subsectoren :=
						for_each_nedv(
							Actor/Jobs6/name
							,'collect_by_cond(CompactedAllocDomain, AllocDomain/IsCompactedDomain, per_AllocDomain/'+Zichtjaar_name+'/Src/Werken/PandFootprint_perJob/Subsectoren0/'+Actor/Jobs6/name+')'
							, CompactedAllocDomain
							, m2PandFootprint_job
						);
				}
			}
		}
		
		Template SectorXSubsector_Compacted_T
		{
			//
			parameter<Sector/XSubsector> id;
			//
			
			parameter<string> name           := Sector/XSubsector/name[id];
			parameter<string> SubSector_name := Sector/XSubsector/SubSector_name[id];
			parameter<string> Sector_name    := Sector/XSubsector/Sector_name[id];
			parameter<string> ValUnit_ref    := Sector/XSubsector/ValUnitDens_ref[id];
			
			unit<float32> ValUnit := = ValUnit_ref;
			
			attribute<ValUnit> Zichtjaar (CompactedAllocDomain) := ='collect_by_cond(CompactedAllocDomain, AllocDomain/IsCompactedDomain, per_AllocDomain/'+Zichtjaar_name+'/SectorXSubSectoren/'+Sector_name+'/'+SubSector_name+'/Zichtjaar)';
		}
	}
}