container BAG_nieuwbouw : using = "Classifications"
, Descr = "Aangezien het startjaar van de simulaties in het model vaak niet samenvalt met de meest actuele invoerdata die voorhanden is bij bronhouders, is er meer informatie over de meest recente ontwikkelingen nodig. 
			Voor de stand van wonen, werken en verblijfsrecreatie in het basisjaar wordt de BAG gebruikt, echter deze dataset wordt dagelijks ge√ºpdatet. Oftewel, recente ontwikkelingen tussen startjaar en de 
			datum van de meest recente BAG-versie in het model zijn al beschikbaar. Daarom worden tussen het startjaar en het eerste gemodelleerde zichtjaar deze recente bouwontwikkelingen meegenomen en 
			hoeven daarmee niet meer gealloceerd te worden in het model. Daarnaast zit er in BAG ook al status-informatie voor ontwikkelingen in de nabije toekomst, panden die waarvoor een bouwvergunning 
			verleend is, of de bouw al gestart is. Hiervan kan met grote zekerheid worden aangenomen dat deze gerealiseerd worden. Eveneens zijn er panden ofwel objecten die gesloopt zullen gaan worden. 
			Een pand waarvoor een sloopvergunning verleend is zal zeer waarschijnlijk in de nabije toekomst gesloopt gaan worden en deze ontwikkeling wordt dan ook meegenomen in het eerstvolgende zichtjaar. 
			Al deze informatie wordt toegepast in het eerste zichtjaar."
{
	container BAG               := SourceData/Vastgoed/BAG/PerJaar;
	container BAG_ModelJaar     := = 'BAG/Y'+string(ModelParameters/Model_StartYear);
	container BAG_RecentsteJaar := = 'BAG/Y'+string(ModelParameters/BAG_RecentYear);
	
	// model start jaar
	// unit<UInt32> BAG_ModelJaar_vbo           := BAG_ModelJaar/vbo_alle_statussen{parameter<Bool> Issubset := FALSE;}
	unit<UInt32> BAG_ModelJaar_vbo_voorraad  := BAG_ModelJaar/vbo{parameter<Bool> Issubset := FALSE;}
	// unit<UInt32> BAG_ModelJaar_pand          := BAG_ModelJaar/pand_alle_statussen{parameter<Bool> Issubset := FALSE;}
	unit<UInt32> BAG_ModelJaar_pand_voorraad := BAG_ModelJaar/pand{parameter<Bool> Issubset := FALSE;}
	
	// meest recente BAG
	unit<UInt32> BAG_RecentsteJaar_vbo           := BAG_RecentsteJaar/vbo_alle_statussen{parameter<Bool> Issubset := FALSE;}
	unit<UInt32> BAG_RecentsteJaar_vbo_voorraad  := BAG_RecentsteJaar/vbo{parameter<Bool> Issubset := FALSE;}
	unit<UInt32> BAG_RecentsteJaar_pand          := BAG_RecentsteJaar/pand_alle_statussen{parameter<Bool> Issubset := FALSE;}
	unit<UInt32> BAG_RecentsteJaar_pand_voorraad := BAG_RecentsteJaar/pand{parameter<Bool> Issubset := FALSE;}

	
	attribute<Bool> IsNieuwVBO_TussenModelenRecentJaar (BAG_RecentsteJaar_vbo_voorraad) := ='!IsDefined(rlookup(BAG_RecentsteJaar_vbo_voorraad/vbo_bag_nr, BAG_ModelJaar_vbo_voorraad/vbo_bag_nr))', Descr = "";
	attribute<Bool> IsWegVBO_TussenModelenRecentJaar   (BAG_ModelJaar_vbo_voorraad)     := ='!IsDefined(rlookup(BAG_ModelJaar_vbo_voorraad/vbo_bag_nr, BAG_RecentsteJaar_vbo_voorraad/vbo_bag_nr))', Descr = "";
	
	unit<UInt32> NieuweVBOsTussenModelenRecentJaar := select_with_org_rel(IsNieuwVBO_TussenModelenRecentJaar)
	, Descr = "alle vbo's die in BAG_RecentsteJaar (e.g. 2023) er wel zijn, maar nog niet in BAG_ModelJaar (e.g. 2021) aanwezig waren."
	{
		attribute<rdc_meter>                        geometry               := org_rel -> geometry;
		attribute<m2_vbo>                           oppervlakte_trunc      := org_rel -> oppervlakte_trunc;
		attribute<Vastgoed/WP2>                     WP2_rel                := org_rel -> WP2_rel;
		attribute<Vastgoed/WP4>                     WP4_rel                := org_rel -> WP4_rel;
		attribute<uint64>                           vbo_bag_nr             := org_rel -> vbo_bag_nr;
		attribute<uint64>                           pand_bag_nr            := org_rel -> pand_bag_nr;
		attribute<BAG_RecentsteJaar_pand_voorraad>  pand_voorraad_rel      := rlookup(pand_bag_nr, BAG_RecentsteJaar_pand_voorraad/pand_bag_nr);
		attribute<Pand_met_nieuw_vbo>               pand_met_nieuw_vbo_rel := rlookup(pand_bag_nr, Pand_met_nieuw_vbo/pand_bag_nr);
		
		container gebruiksdoelen :=
			for_each_nedv(
				Vastgoed/vbo_gebruiksdoel_plus/name
				, 'org_rel -> Impl/gebruiksdoelen_cbs/'+Vastgoed/vbo_gebruiksdoel_plus/name+''
				, NieuweVBOsTussenModelenRecentJaar
				, bool
			), Descr = "Ophalen gebruiksdoelen voor deze subset";
		
		container Avg_Footprint_VBOOpp_per_vbo_functie :=
			for_each_nedv(
				Vastgoed/vbo_gebruiksdoel_plus/name
				, 'Pand_met_nieuw_vbo/Avg_Footprint_perfunctie_inPand/'+Vastgoed/vbo_gebruiksdoel_plus/name+'[pand_met_nieuw_vbo_rel]'
				, NieuweVBOsTussenModelenRecentJaar
				, m2PandFootprint
			), Descr = "Ophalen avg footprint per functie uit pandenset naar deze vbo subset.";
	}
	
	unit<UInt32> VBOsWegTussenModelenRecentJaar := select_with_org_rel(IsWegVBO_TussenModelenRecentJaar)
	, Descr = "alle vbo's die in BAG_ModelJaar (e.g. 2021) aanwezig waren, maar niet meer in BAG_RecentsteJaar (e.g. 2023)."
	{
		attribute<rdc_meter>    geometry          := org_rel -> geometry;
		attribute<m2_vbo>       oppervlakte_trunc := org_rel -> oppervlakte_trunc;
		attribute<Vastgoed/WP2> WP2_rel           := org_rel -> WP2_rel; //deze komt oud modeljaar
		attribute<Vastgoed/WP4> WP4_rel           := org_rel -> WP4_rel;
		attribute<uint64>       vbo_bag_nr        := org_rel -> vbo_bag_nr;
		attribute<uint64>       pand_bag_nr       := org_rel -> pand_bag_nr;
		attribute<BAG_ModelJaar_pand_voorraad> Pand_rel := rlookup(pand_bag_nr, BAG_ModelJaar_pand_voorraad/pand_bag_nr);
		
		container gebruiksdoelen :=
			for_each_nedv(
				Vastgoed/vbo_gebruiksdoel_plus/name
				, 'org_rel -> Impl/gebruiksdoelen_cbs/'+Vastgoed/vbo_gebruiksdoel_plus/name+''
				, VBOsWegTussenModelenRecentJaar
				, bool
			), Descr = "Ophalen gebruiksdoelen voor deze subset";
			
		container Footprint_perGebruiksdoel :=
			for_each_nedv(
				Vastgoed/vbo_gebruiksdoel_plus/name
				, 'BAG_ModelJaar_pand_voorraad/Oppervlaktes/Footprint_perGebruiksdoel/'+Vastgoed/vbo_gebruiksdoel_plus/name+'[Pand_rel]'
				, VBOsWegTussenModelenRecentJaar
				, m2PandFootprint
			), Descr = "Ophalen footprint per functie uit pandenset naar deze vbo subset.";
			
		container Vbos_InPand_perGebruiksdoel:=  
			for_each_nedv(
				Vastgoed/vbo_gebruiksdoel_plus/name
				, 'sum_uint32(gebruiksdoelen/'+Vastgoed/vbo_gebruiksdoel_plus/name+', Pand_rel)[float32][(Pand_rel)]'
				, VBOsWegTussenModelenRecentJaar
				, float32
			), Descr = "Count aantal vbo's per gebruiksdoel in een pand vertaalt naar het vbo";
	}
	
	unit<UInt32> Pand_met_nieuw_vbo := select_with_org_rel(IsDefined(invert(NieuweVBOsTussenModelenRecentJaar/pand_voorraad_rel)))
	, Descr = "alle panden uit BAG_RecentsteJaar die een nieuw VBO bevatten."
	{
		attribute<rdc_meter>       geometry (poly) := org_rel -> geometry;
		attribute<uint64>          pand_bag_nr     := org_rel -> pand_bag_nr;
		attribute<m2PandFootprint> Footprint       := area(geometry, meter2_f64)[m2PandFootprint];
		attribute<m2_pand>         pand_vbo_opp    := (sum(Combine_VBOvoorraad_VBOnieuwbouw/oppervlakte_trunc, Combine_VBOvoorraad_VBOnieuwbouw/pand_met_nieuw_vbo_rel) * 1[verblijfsobject]) / 1[Units/PandUnit];
		
		container Footprint_perGebruiksdoel :=
			for_each_nedv(
				Vastgoed/vbo_gebruiksdoel_plus/name
				,'((sum(Combine_VBOvoorraad_VBOnieuwbouw/gebruiksdoelen/'+Vastgoed/vbo_gebruiksdoel_plus/name+' ? Combine_VBOvoorraad_VBOnieuwbouw/oppervlakte_trunc : 0[m2_vbo], Combine_VBOvoorraad_VBOnieuwbouw/pand_met_nieuw_vbo_rel) * 1[Units/verblijfsobject]) / (pand_vbo_opp * 1[Units/PandUnit])) * Footprint'
				, Pand_met_nieuw_vbo
				, m2PandFootprint
			), Descr = "per gebruiksdoel sommeer het vbo-oppervlak per pand, deel dat door het totale vbo-oppervlak in dat pand. Dit geeft de fractie van elke gebruiksdoel in een pand obv vbo-oppervlak. Dit wordt vermenigvuldigd met de pand-footprint om zo de pand-footprint per gebruiksdoel te krijgen.";
		
		container Vbos_InPand_perGebruiksdoel :=
			for_each_nedv(
				Vastgoed/vbo_gebruiksdoel_plus/name
				, 'sum(Combine_VBOvoorraad_VBOnieuwbouw/gebruiksdoelen/'+Vastgoed/vbo_gebruiksdoel_plus/name+'[uint32], Combine_VBOvoorraad_VBOnieuwbouw/pand_met_nieuw_vbo_rel)[float32]'
				, Pand_met_nieuw_vbo
				, float32
			), Descr = "Count gebruiksdoelen per pand";
		
		container Avg_Footprint_perfunctie_inPand :=
			for_each_nedv(
				Vastgoed/vbo_gebruiksdoel_plus/name
				,'Footprint_perGebruiksdoel/'+Vastgoed/vbo_gebruiksdoel_plus/name+'  / Vbos_InPand_perGebruiksdoel/'+Vastgoed/vbo_gebruiksdoel_plus/name
				, Pand_met_nieuw_vbo
				, m2PandFootprint
			), Descr = "Gemiddelde pandfootprint per gebruiksdoel door de footprint per gebruikdoel te delen door het aantal vbo's van dat gebruiksdoel.";
	}
	
	unit<UInt32> Combine_VBOvoorraad_VBOnieuwbouw := union_unit(BAG_RecentsteJaar_vbo_voorraad, Vbo_nieuwbouw)
	, Descr = "vbo voorraad uit recent Year + nieuwbouw vbo's, dit is nodig om de pandFootprint te bepalen voor de toekomstige situatie. "
	{
		attribute<rdc_meter>          geometry               := union_data(., BAG_RecentsteJaar_vbo_voorraad/geometry, Vbo_nieuwbouw/geometry);
		attribute<m2_vbo>             oppervlakte_trunc      := union_data(., BAG_RecentsteJaar_vbo_voorraad/oppervlakte_trunc, Vbo_nieuwbouw/oppervlakte_trunc);
		attribute<uint64>             pand_bag_nr            := union_data(., BAG_RecentsteJaar_vbo_voorraad/pand_bag_nr, Vbo_nieuwbouw/pand_bag_nr);
		attribute<Pand_met_nieuw_vbo> pand_met_nieuw_vbo_rel := rlookup(pand_bag_nr, Pand_met_nieuw_vbo/pand_bag_nr);
		
		container gebruiksdoelen :=
			for_each_nedv(
				Vastgoed/vbo_gebruiksdoel_plus/name
				, 'union_data(Combine_VBOvoorraad_VBOnieuwbouw, BAG_RecentsteJaar_vbo_voorraad/Impl/gebruiksdoelen_cbs/'+Vastgoed/vbo_gebruiksdoel_plus/name+', Vbo_nieuwbouw/gebruiksdoelen/'+Vastgoed/vbo_gebruiksdoel_plus/name+')'
				, Combine_VBOvoorraad_VBOnieuwbouw
				, bool
			), Descr = "append de gebruiksdoelen sets";
	}
	
	unit<UInt32> Vbo_nieuwbouw := select_with_org_rel(BAG_RecentsteJaar_vbo/status_rel == /Classifications/Vastgoed/vbo_status/V/Verblijfsobject_gevormd)
	, Descr = "alle VBO's, die op meest recente datum de status gevormd hebben, en dus binnenkort voorraad gaan worden."
	{
		attribute<rdc_meter>      geometry           := org_rel -> geometry;
		attribute<m2_vbo>         oppervlakte_trunc  := org_rel -> oppervlakte_trunc;
		attribute<uint64>         vbo_bag_nr         := org_rel -> vbo_bag_nr;
		attribute<uint64>         pand_bag_nr        := org_rel -> pand_bag_nr;
		attribute<Pand_nieuwbouw> pand_nieuwbouw_rel := rlookup(pand_bag_nr, Pand_nieuwbouw/pand_bag_nr);
		attribute<Vastgoed/WP2>   WP2_rel            := Pand_nieuwbouw/WP2_rel[pand_nieuwbouw_rel]; //deze en volgende moeten op basis zijn van wpTyperingen terwijl de bestaande/geloopte op nieuwe snapshots moeten gebeuren.
		attribute<Vastgoed/WP4>   WP4_rel            := Pand_nieuwbouw/WP4_rel[pand_nieuwbouw_rel];
		
		container gebruiksdoelen :=
			for_each_nedv(
				Vastgoed/vbo_gebruiksdoel_plus/name
				, 'org_rel -> Impl/gebruiksdoelen_cbs/'+Vastgoed/vbo_gebruiksdoel_plus/name
				, vbo_nieuwbouw
				, bool
			), Descr = "Ophalen gebruiksdoelen voor deze subset";
		
		container Footprint_perGebruiksdoel :=
			for_each_nedv(
				Vastgoed/vbo_gebruiksdoel_plus/name
				, 'Pand_nieuwbouw/Footprint_perGebruiksdoel/'+Vastgoed/vbo_gebruiksdoel_plus/name+'[pand_nieuwbouw_rel]'
				, vbo_nieuwbouw
				, m2PandFootprint
			), Descr = "Ophalen footprint per functie uit pandenset naar deze vbo subset.";
		
		container Vbos_InPand_perGebruiksdoel :=
			for_each_nedv(
				Vastgoed/vbo_gebruiksdoel_plus/name
				, 'sum(gebruiksdoelen/'+Vastgoed/vbo_gebruiksdoel_plus/name+'[uint32], pand_nieuwbouw_rel)[float32][(pand_nieuwbouw_rel)]'
				, vbo_nieuwbouw
				, float32
			), Descr = "Count aantal vbo's per gebruiksdoel in een pand vertaalt naar het vbo";
	}
	
	attribute<Bool> Pand_Nieuwbouw_Selection_condition (BAG_RecentsteJaar_pand) := BAG_RecentsteJaar_pand/status_rel == /Classifications/Vastgoed/pand_status/V/Bouw_gestart || BAG_RecentsteJaar_pand/status_rel == /Classifications/Vastgoed/pand_status/V/Bouwvergunning_verleend
	, Descr = "alle panden, die op meest recente datum de status bouw gestart of vergunning verleend hebben, en dus binnenkort voorraad gaan worden.";
	
	unit<UInt32> Pand_nieuwbouw := select_with_org_rel(Pand_Nieuwbouw_Selection_condition)
	{
		parameter<Bool>            Issubset        := TRUE;
		
		attribute<rdc_meter>       geometry (poly) := org_rel -> geometry;
		attribute<yr>              Bouwjaar        := org_rel -> Bouwjaar;
		attribute<uint64>          pand_bag_nr     := org_rel -> pand_bag_nr;
		attribute<m2PandFootprint> Footprint       := area(geometry, meter2_f64)[m2PandFootprint];
		attribute<m2_pand>         pand_vbo_opp    := (sum(Vbo_nieuwbouw/oppervlakte_trunc, Vbo_nieuwbouw/pand_nieuwbouw_rel) * 1[verblijfsobject]) / 1[Units/PandUnit];
		
		attribute<UInt32>          count_woon_VBOs := sum_uint32(Vbo_nieuwbouw/gebruiksdoelen/woon, Vbo_nieuwbouw/pand_nieuwbouw_rel);
		attribute<Vastgoed/WP2>    WP2_rel         := count_woon_VBOs == 0 ? (0/0)[Vastgoed/WP2] : count_woon_VBOs >  1 ? Vastgoed/WP2/V/meergezins : Vastgoed/WP2/V/eengezins;
		attribute<Vastgoed/WP4>    WP4_rel         := org_rel -> WP4_rel;
		
		container Footprint_perGebruiksdoel :=
			for_each_nedv(
				Vastgoed/vbo_gebruiksdoel_plus/name
				,'((sum(Vbo_nieuwbouw/gebruiksdoelen/'+Vastgoed/vbo_gebruiksdoel_plus/name+' ? Vbo_nieuwbouw/oppervlakte_trunc : 0[m2_vbo], Vbo_nieuwbouw/pand_nieuwbouw_rel) * 1[Units/verblijfsobject]) / (pand_vbo_opp * 1[Units/PandUnit])) * Footprint'
				, Pand_nieuwbouw
				, m2PandFootprint
			), Descr = "per gebruiksdoel sommeer het vbo-oppervlak per pand, deel dat door het totale vbo-oppervlak in dat pand. Dit geeft de fractie van elke gebruiksdoel in een pand obv vbo-oppervlak. Dit wordt vermenigvuldigd met de pand-footprint om zo de pand-footprint per gebruiksdoel te krijgen.";
			
		container PerGebruiksdoel :=
			for_each_nedv(
				Vastgoed/vbo_gebruiksdoel_plus/name
				, 	'sum(
						recollect_by_cond(Pand_Nieuwbouw_Selection_condition, Footprint_perGebruiksdoel/'+Vastgoed/vbo_gebruiksdoel_plus/name+', 0f)
							[BAG_RecentsteJaar_pand/ToedelingsMatrix/Pand_rel] * BAG_RecentsteJaar_pand/ToedelingsMatrix/ToedelingPand, BAG_RecentsteJaar_pand/ToedelingsMatrix/CompactedAdminDomain_rel
					)[m2PandFootprint]'
				, CompactedAdminDomain
				, m2PandFootprint
			), Descr = "per gebruiksdoel de hoeveelheid m2 pandfootpritn per CompactedAdminDomain";
		
		container PerJobs6 :=
			for_each_nedv(
				Actor/Jobs6/name
				, replace(Actor/Jobs6/vbo_gebruiksdoel_plus_ref, '@', 'PerGebruiksdoel/', '#', '')
				, CompactedAdminDomain
				, m2PandFootprint
			), Descr = "Vertaling/aggregatie van BAG gebruiksdoelen naar Jobs6";
	}
	
	#include<Wonen.dms>
	#include<Werken.dms>
	
	container Verblijfsrecreatie
	{
		attribute<verblijfsobject> Totaal (CompactedAdminDomain) := value(CalcNieuwbouw_perDoel/logies/Nieuwbouw_VBOs_PerDoel/Uitsmeren_Totaal/Aantal_Vbos_Per_CompactedAdminDomain 
			+ CalcNieuwbouw_perDoel/logies/NieuweVBOsTussenModelenRecentJaar_PerDoel/Uitsmeren_Totaal/Aantal_Vbos_Per_CompactedAdminDomain 
			- CalcNieuwbouw_perDoel/logies/VBOsWegTussenModelenRecentJaar_PerDoel/Uitsmeren_Totaal/Aantal_Vbos_Per_CompactedAdminDomain
			, verblijfsobject);
		
		// attribute<meter2> Gebruiksoppervlak_plus  (CompactedAdminDomain) := CalcNieuwbouw_perDoel/logies/Nieuwbouw_VBOs_PerDoel/Uitsmeren_Totaal/Gebruiksoppervlak_Per_CompactedAdminDomain
			// + CalcNieuwbouw_perDoel/logies/NieuweVBOsTussenModelenRecentJaar/Uitsmeren_Totaal/Gebruiksoppervlak_Per_AdminDomain;
			
		// attribute<meter2> Gebruiksoppervlak_min   (CompactedAdminDomain) := CalcNieuwbouw_perDoel/logies/VBOsWegTussenModelenRecentJaar_PerDoel/Uitsmeren_Totaal/Gebruiksoppervlak_Per_CompactedAdminDomain;
		// attribute<meter2> Gebruiksoppervlak_saldo (CompactedAdminDomain) := Gebruiksoppervlak_plus - Gebruiksoppervlak_min;   
	}
	
	container Wind
	{
		attribute<MW> Totaal                (CompactedAdminDomain) := const(0[MW], CompactedAdminDomain);
		attribute<Yr> jaartal_ingebruikname (CompactedAdminDomain) := Totaal > 0[MW] ? BAG_RecentYear[Yr] : (0/0)[Yr];
	}
	
	container Zon
	{
		attribute<MW> Totaal (CompactedAdminDomain) := const(0[MW], CompactedAdminDomain);
	}
	
	container CalcNieuwbouw_perDoel := for_each_ne(Classifications/Vastgoed/vbo_gebruiksdoel_plus/name, 'CalcNieuwbouw_perDoel_T('+quote(Classifications/Vastgoed/vbo_gebruiksdoel_plus/name)+')');
	
	#include<CalcNieuwbouw_perDoel_T.dms>
	#include<Uitsmeren_T.dms>
}