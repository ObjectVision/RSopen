container C
{
	unit<UInt32> GrondproductieVariabelen0 := = 'union_unit('+asItemList('ReadData/'+GrondproductieModelVarianten/name+'/ModelVariant')+')'
	{
		attribute<String> name := = 'union_data(.,'+asItemList('ReadData/'+GrondproductieModelVarianten/name+'/ModelVariant/variabele')+')';
	}
	
	unit<UInt32> GrondproductieVariabelen := unique(GrondproductieVariabelen0/name)
	{
		attribute<String> name := values;
		
		attribute<Bool> IsControleVar :=
			id(.) == V/BerekeningssystematiekOnbekend ||
			id(.) == V/BronFakton                     ||
			id(.) == V/BoekwaardeOpgevoerd            ||
			id(.) == V/BoekwaardeOpgevoerdOnbekend    ||
			id(.) == V/OnVoorzienVerdeeld             ||
			id(.) == V/Vermenging;
		
		//Dit betreft de variabelen waarvoor de waarden (referentiewaarde of niet) duidelijk (gegeven) zijn. Dit itt tot de onzekere controlevariabelen (zie attribuut hieronder)
		attribute<String> DefaultWaarde :=
			id(.) == V/Intercept            ? '1f' :
			id(.) == V/OmvangPlangebied     ? 'log('+string(AdminDomain/NrHaPerCell)+'f)':
			id(.) == V/Kaveldichtheid2018   ? 'Grondproductiekosten/ReadData/LocatieVariabelen/Kaveldichtheid' :
			id(.) == V/AndersBouwen         ? 'Grondproductiekosten/ReadData/LocatieVariabelen/AndersBouwen' :
			id(.) == V/Reistijd5kInw        ? 'Grondproductiekosten/ReadData/LocatieVariabelen/Reistijd5kInw' :
			id(.) == V/BoekwaardeOpgevoerd  ? '1f' :
			'0f';
		
		//Dit betreft de variabelen waarbij de te kiezen waarden niet evident zijn
		attribute<Bool> IsOnzekereControleVar := id(.) == V/BronFakton;
		
		attribute<String> Label := name;
		
		container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
	}
	
	unit<UInt32> GrondproductieModelVarianten := Classifications/Vastgoed/GrondproductieModelVarianten;
	
	// Omvat onzekerheid uitgedrukt ahv standaardfout: statistische onzekerheid
	unit<UInt8> Onzekerheid1: NrOfRows = 3
	{
		attribute<String> name: ['Low', 'Nominaal', 'High'];
		attribute<String> CalcStr := union_data(., 'CoefficientStr+'+quote('-')+'+StderrorStr', 'CoefficientStr', 'CoefficientStr+'+quote('+')+'+StderrorStr');
	}
	
	// Omvat onzekerheid o.b.v. keuzen tav de controlevariabelen (referentie of niet)
	unit<UInt8> Onzekerheid2: NrOfRows = 2
	{
		attribute<String> name: ['Low', 'High'];
	}
	
	unit<UInt32> Onzekerheid := combine(Onzekerheid1, Onzekerheid2)
	{
		attribute<String> Onzekerheid1_name := Onzekerheid1/name[first_rel];
		attribute<String> Onzekerheid2_name := Onzekerheid2/name[second_rel];
		attribute<String> name := Onzekerheid1_name+'_'+Onzekerheid2_name;
	}
	
	unit<UInt32> Combi := combine(GrondproductieModelVarianten, Onzekerheid)
	{
		attribute<String> GrondproductieModelVarianten_name := GrondproductieModelVarianten/name[first_rel];
		attribute<String> Onzekerheid_name := Onzekerheid/name[second_rel];
		attribute<String> name := GrondproductieModelVarianten_name+'/'+Onzekerheid_name;
		attribute<String> Label := GrondproductieModelVarianten_name+'_'+Onzekerheid_name;
	}
	
	unit<UInt32> Extent: NrOfRows = 3
	{
		attribute<String> name: ['BinnenBBG', 'BuitenBBG', 'Totaal'];
		attribute<String> CalcStr: ['BBG', '!BBG', 'BBG || !BBG'];
	}
	
	unit<UInt32> Indicator: NrOfRows = 7
	{
		attribute<String> name: ['mean', 'sd', 'min', 'rth_element_20', 'rth_element_50', 'rth_element_80', 'max'];
		attribute<String> Label := name, DialogType = "LabelText";
	}
	
	unit<UInt32> ExtentxIndicator := combine(Extent, Indicator)
	{
		attribute<String> Extent_name := Extent/name[first_rel];
		attribute<String> Indicator_name := Indicator/name[second_rel];
		attribute<String> name := Extent_name+'_'+Indicator_name;
	}
}