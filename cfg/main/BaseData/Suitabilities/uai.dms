container UrbanAttractivityIndex
: Descr = "Berekening van de Urban Attractivity Index (UAI) op basis van de potentie en afstand tot voorzieningen en monumenten"
{
	attribute<Float32> R_5000m_AbsWeight (AllocDomain) := C_5000m_AbsWeight/Resultaat;
	
	container C_5000m_AbsWeight := CalculateUAI(5000, 'AbsWeight');
	
	Template CalculateUAI
	: Descr = "Template voor het berekenen van de UAI op basis van een bepaalde potentiaal en afstandsvervalfunctie"
	{
		parameter<UInt32> potentiaal;
		parameter<String> distance_decay;
		///

		attribute<Float32> Resultaat    (AllocDomain)        := Detailhandel/norm + BijeenkomstLogies/norm + Monumentaal/norm, Descr = "De UAI is de som van de genormaliseerde potentiaal van detailhandel, bijeenkomst/logies en monumentaal vastgoed.";
		attribute<Float32> Resultaat_ln (AllocDomain)        := log(log(log(log(resultaat + 1f) + 1f) + 1f) +1f), Descr = "De UAI wordt vier keer gelogaritmeerd om de uitschieters te dempen.";
		parameter<Float32> max                               := max(resultaat_ln), Descr = "De maximale waarde van de UAI in het studiegebied.";
		attribute<Float32> Resultaat_ln_scaled (AllocDomain) := Resultaat_ln / max, Descr = "De UAI wordt geschaald op een maximum van 1.";
		
		container Detailhandel      := T(Count/Detailhandel, potentiaal, distance_decay), Descr = "De potentiaal van detailhandel op basis van een bepaalde potentiaal en afstandsvervalfunctie.";
		container BijeenkomstLogies := T(Count/BijeenkomstLogies, potentiaal, distance_decay), Descr = "De potentiaal van bijeenkomst- en logiesobjecten op basis van een bepaalde potentiaal en afstandsvervalfunctie.";
		container Monumentaal       := T(Count/Monumentaal, potentiaal, distance_decay), Descr = "De potentiaal van monumentale panden op basis van een bepaalde potentiaal en afstandsvervalfunctie.";
		
		container Count
		{
			attribute<Float32> Detailhandel      (AllocDomain) := ='SourceData/Vastgoed/BAG/PerJaar/Y'+string(BAG_RecentYear)+'/vbo/Per_Gebruiksdoel/winkel/select/counts/Per_AllocDomain[float32]', Descr = "Aantal detailhandelsobjecten per allocdomain.";
			attribute<Float32> BijeenkomstLogies (AllocDomain) := ='SourceData/Vastgoed/BAG/PerJaar/Y'+string(BAG_RecentYear)+'/vbo/Per_Gebruiksdoel/bijeenkomst/select/counts/Per_AllocDomain[float32] + SourceData/Vastgoed/BAG/PerJaar/Y'+string(BAG_RecentYear)+'/vbo/Per_Gebruiksdoel/logies/select/counts/Per_AllocDomain[float32]', Descr = "Aantal bijeenkomst- en logiesobjecten per allocdomain.";
			attribute<Float32> Monumentaal       (AllocDomain) := ='MakeDefined(SourceData/Vastgoed/BAG/PerJaar/Y'+string(BAG_RecentYear)+'/pand/met_vbo/Counts/Monumentaal_Per_AllocDomain[float32], 0f)', Descr = "Aantal monumentale panden per allocdomain.";
		}
		
		Template T
		: Descr = "Template voor het berekenen van de potentiaal op basis van een bepaalde potentiaal en afstandsvervalfunctie"
		{
			attribute<Float32> Count (AllocDomain);
			parameter<UInt32>  potentiaal;
			parameter<String>  distance_decay;
			//
			
			attribute<Float32> Potential (AllocDomain) := ='potential(Count, Distmatrices_100m/pot'+string(potentiaal)+'m/'+distance_decay+')', Descr = "Berekening van de potentiaal op basis van de afstandsvervalfunctie.";
			parameter<Float32> Max                     := max(Potential), Descr = "De maximale waarde van de potentiaal in het studiegebied.";
			attribute<Float32> Max_regio (AllocDomain) := max(Potential, SourceData/RegioIndelingen/CBS/Last/Gemeente/Per_AllocDomain)[SourceData/RegioIndelingen/CBS/Last/Gemeente/Per_AllocDomain], Descr = "De maximale waarde van de potentiaal per gemeente.";
			attribute<Float32> norm      (AllocDomain) := (Potential / Max) / 3f, Descr = "De genormaliseerde potentiaal, gedeeld door 3 om de drie componenten van de UAI gelijk te wegen.";
		}
	}
}