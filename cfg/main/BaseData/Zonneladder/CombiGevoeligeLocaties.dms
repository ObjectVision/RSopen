container CombiGevoeligeLocaties
{
	container AnderePlassen // waterberging zonder belangrijke natuurfunctie, recreatieplassen
	{
		parameter<LadderTreden> Laddertrede_rel := LadderTreden/V/AnderePlassen[LadderTreden];
		parameter<float32> fractie := LadderTreden/fractie[float32][LadderTreden/V/AnderePlassen];
		
		unit<uint32> UitBBG_watermetrecreatie := ='subset(SourceData/Grondgebruik/BBG/BBG_Reeks_1996_2017/CBSKlasse_rel_'+ModelParameters/BBG_Year+' == Classifications/Grondgebruik/CBSKlasse/V/water_met_een_recreatieve_functie)'
		{
			attribute<rdc_meter> geometry_rd (poly) := /SourceData/Grondgebruik/BBG/BBG_Reeks_1996_2017/Geometry[nr_OrgEntity];
			
			container Union := Templates/UnionT(., geometry_rd, Laddertrede_rel);
			
			attribute<meter2> Nrmeter2_max (union/unioned_domain) := area(Union/unioned_geometry, meter2);
			attribute<meter2> Nrmeter2 (union/unioned_domain) := Nrmeter2_max * fractie;
		}
		
		parameter<meter2> UitBBG_watermetrecreatie_opp := sum(UitBBG_watermetrecreatie/Nrmeter2);
		parameter<meter2> Totaal_opp := UitBBG_watermetrecreatie_opp;
		
		parameter<GW> Potentieel_gegenereerd_vermogen_laag := (Totaal_opp / 10000[meter2 / ha]) * Vermogen_ha_laag / 1000[MW / GW];
		parameter<GW> Potentieel_gegenereerd_vermogen_hoog := (Totaal_opp / 10000[meter2 / ha]) * Vermogen_ha_hoog / 1000[MW / GW];
	}
	
	// container Bufferntr // buffer rond natuur
	// {
		// parameter<LadderTreden> Laddertrede_rel := LadderTreden/V/Bufferntr[LadderTreden];
		// parameter<float32> fractie := LadderTreden/fractie[float32][LadderTreden/V/Bufferntr];
		
		// unit<uint32>  Src := /BaseData/Zonneladder/Impl/Natura2000/split_geometry
		// {
			// container Union := Templates/UnionT(., cut, Laddertrede_rel);
			
			// attribute<meter2> Nrmeter2_max (union/unioned_domain) := area(Union/unioned_geometry, meter2);
			// attribute<meter2> Nrmeter2 (union/unioned_domain) := Nrmeter2_max * fractie;
		// }
		
		// parameter<meter2> Opp := sum(Src/Nrmeter2);
		// parameter<meter2> Totaal_opp := Opp;
		
		// parameter<GW> Potentieel_gegenereerd_vermogen_laag := (Totaal_opp / 10000[meter2 / ha]) * Vermogen_ha_laag / 1000[MW / GW];
		// parameter<GW> Potentieel_gegenereerd_vermogen_hoog := (Totaal_opp / 10000[meter2 / ha]) * Vermogen_ha_hoog / 1000[MW / GW];
	// }
	
	// parameter<GW> Potentieel_gegenereerd_vermogen_laag := AnderePlassen/Potentieel_gegenereerd_vermogen_laag + Bufferntr/Potentieel_gegenereerd_vermogen_laag;
	// parameter<GW> Potentieel_gegenereerd_vermogen_hoog := AnderePlassen/Potentieel_gegenereerd_vermogen_hoog + Bufferntr/Potentieel_gegenereerd_vermogen_hoog;
	parameter<GW> Potentieel_gegenereerd_vermogen_laag := AnderePlassen/Potentieel_gegenereerd_vermogen_laag;
	parameter<GW> Potentieel_gegenereerd_vermogen_hoog := AnderePlassen/Potentieel_gegenereerd_vermogen_hoog;
}

