container Verblijfsrecreatie_Trends
: Descr = "tbv berekening Verblijfsrecreatie claims"
{
	parameter<String> BAG_RecentYear       := string(/ModelParameters/BAG_RecentYear); //Vanaf recentYear ipv basisjaar omdat we tussen basisjaar en recentYear uitgaan van de bag nieuwbouw en sloop
	parameter<UInt32> BAG_RecentYear_value := right(BAG_RecentYear,4)[uint32];
	parameter<String> BBG_Year             := /ModelParameters/BBG_Year;
	parameter<UInt32> BBG_Year_value       := BBG_Year[uint32];
	
	unit<UInt32> jaren96_11 := range(uint32, 1996, 2012)
	, Descr = "BBG jaren pre-bag"
	{
		attribute<String> Label := name , DialogType = "LabelText";
		attribute<String> name  := 'Y' + string(id(.));
		attribute<UInt32> value := id(.);
		container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
	}
	
	unit<UInt8> Jaren := union_unit_uint8(jaren96_11, SourceData/Vastgoed/BAG/BAG_jaren)
	, Descr = "totale set jaren relevant in deze trend analyse"
	{
		attribute<String>  name  := union_data(., jaren96_11/name, SourceData/Vastgoed/BAG/BAG_jaren/name);
		attribute<String>  Label := name, DialogType = "LabelText";
		attribute<Float32> value := union_data(., jaren96_11/value[float32], SourceData/Vastgoed/BAG/BAG_jaren/Jaar[float32]);
		
		container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
	}
	
	parameter<String> RegioUnit_str := /VariantParameters/Recreatie_AllocRegio_name;
	unit<UInt32>      RegioUnit     := ='SourceData/RegioIndelingen/CBS/Last/'+RegioUnit_str;
	
	container DataPrep
	{
		container ReadData_BAG := for_each_ne(SourceData/Vastgoed/BAG/BAG_jaren/name, 'ReadData_BAG_T('+string(SourceData/Vastgoed/BAG/BAG_jaren/jaar)+', RegioUnit)');
		container ReadData_BBG := for_each_ne(Classifications/Grondgebruik/ReeksJaren/naam, 'ReadData_BBG_T('+string(Classifications/Grondgebruik/ReeksJaren/jaar)+', RegioUnit)');
		container PreBAG       := for_each_ne(jaren96_11/name,'PreBAG_PerJaar_T('+string(jaren96_11/value)+', RegioUnit)');
	}
	
	container Data
	{
		container perRegio_Objecten := 
			for_each_nedv(
				Jaren/name
				, Jaren/value < 2012f ? 'DataPrep/PreBAG/'+Jaren/name+'/preBAG_VBO_inCBS/totale_count_per_functie_perRegio/logies[float32]' : 'DataPrep/ReadData_BAG/'+Jaren/name+'/PerRegio/objecten[float32]'
				, RegioUnit
				, float32
			);
		
		container perRegio_BrutoOpp := 
			for_each_nedv(
				Classifications/Grondgebruik/ReeksJaren/naam
				, 'DataPrep/ReadData_BBG/'+Classifications/Grondgebruik/ReeksJaren/naam+'/BrutoOpp_perRegio / 1[ha]'
				, RegioUnit
				, float32
			);
	}
	
	container Trends
	{
		container Objecten_β := 
			for_each_nedv(
				RegioUnit/name
				, 'max_elem(0f, OLS/Calc_OLS_Objecten_Regio/'+RegioUnit/name+'/β) > ModelParameters/Verblijfsrecreatie/Max_Objecten_β_Size ? avg : max_elem(0f, OLS/Calc_OLS_Objecten_Regio/'+RegioUnit/name+'/β)'
				, void
				, float32
			), Descr = "Aanname is groei, dus groter dan 0. Als deze groei te groot is, valt het terug op het landelijk gemiddelde."
		{
			parameter<Float32> avg := ='Add('+asItemList('OLS/Calc_OLS_Objecten_Regio/'+RegioUnit/name+'/β')+') / float32(#RegioUnit)';
		}
		
		container BrutoOpp_β :=
			for_each_nedv(
				RegioUnit/name
				, 'max_elem(0f, OLS/Calc_OLS_BrutoOpp_Regio/'+RegioUnit/name+'/β) > ModelParameters/Verblijfsrecreatie/Max_BrutoOpp_β_Size ? avg : max_elem(0f, OLS/Calc_OLS_BrutoOpp_Regio/'+RegioUnit/name+'/β)'
				, void
				, float32
			), Descr = "Aanname is groei, dus groter dan 0. En als de BBG ReeksJaren onvolledig zijn, kan deze null worden. Als deze groei te groot is, valt het terug op het landelijk gemiddelde."
		{
			parameter<Float32> avg := ='Add('+asItemList('OLS/Calc_OLS_BrutoOpp_Regio/'+RegioUnit/name+'/β')+') / float32(#RegioUnit)';
		}
		
		unit<UInt32> Write_Betas_Objecten := RegioUnit
		, StorageName = "='%LocalDataProjDir%/BaseData/Vastgoed/Verblijfsrecreatie/'+RegioUnit_str+'/Betas_Objecten_'+/ModelParameters/StudyArea+'.fss'"
		{
			attribute<Float32> Objecten_β := ='union_data(., '+asItemList('Trends/Objecten_β/'+RegioUnit/name)+')';
			attribute<Float32> Objecten   := ='DataPrep/ReadData_BAG/Y'+string(/ModelParameters/BAG_RecentYear)+'/PerRegio/Objecten';
			attribute<Float32> BrutoOpp_β := ='union_data(., '+asItemList('Trends/BrutoOpp_β/'+RegioUnit/name)+')';
			attribute<Float32> BrutoOpp   := ='DataPrep/ReadData_BBG/Y'+string(/ModelParameters/BBG_Verblijfsrecreatie_Year)+'/BrutoOpp_perRegio';
		}
		
		unit<UInt32> Read_Betas_Objecten := RegioUnit
		, StorageName = "='%LocalDataProjDir%/BaseData/Vastgoed/Verblijfsrecreatie/'+RegioUnit_str+'/Betas_Objecten_'+/ModelParameters/StudyArea+'.fss'", StorageReadOnly = "TRUE"
		{
			attribute<Float32> Objecten_β;
			attribute<Verblijfsobject> Objecten;
			attribute<Float32> BrutoOpp_β;
			attribute<ha> BrutoOpp;
		}
		
		
		container OLS
		{
			unit<UInt8> k_set := range(uint8, 0b, 2b)
			{
				attribute<String> name : [ 'const', 'opp'];
			}
			
			container Calc_OLS_Objecten_Regio := for_each_ne(RegioUnit/name, 'OLS_Regio_T('+string(id(RegioUnit))+', Data/perRegio_Objecten, Jaren)');
			container Calc_OLS_BrutoOpp_Regio := for_each_ne(RegioUnit/name, 'OLS_Regio_T('+string(id(RegioUnit))+', Data/perRegio_BrutoOpp, Classifications/Grondgebruik/ReeksJaren)');
			
			container Betas_regio
			{
				container Objecten := for_each_nedv(RegioUnit/name, 'OLS/Calc_OLS_Objecten_Regio/'+RegioUnit/name+'/β', void, float32);
				container BrutoOpp := for_each_nedv(RegioUnit/name, 'OLS/Calc_OLS_BrutoOpp_Regio/'+RegioUnit/name+'/β', void, float32);
			}
			
			Template OLS_Regio_T
			{
				parameter<UInt32> regio_id;
				
				container y_src;
				
				unit<UInt8> Periods;
				
				attribute<Float32> x (Periods) := Periods/value[float32];
				attribute<Float32> y (Periods) := ='union_data(Periods, '+asItemList('y_src/'+Periods/name+'['+string(regio_id)+'[RegioUnit]]')+')';
				
				parameter<Float32> σ_xy := cov(x, y);
				parameter<Float32> σ_x  := var(x);
				parameter<Float32> σ_y  := var(y);
				
				parameter<Float32> β := σ_xy / σ_x;
				parameter<Float32> α := ȳ - β * x_bar; 
				
				attribute<Float32> ŷ (Periods) := α + β*x; //predicted value of y (dependent var in regression)
				
				parameter<Float32> x_bar := mean(x); //sample mean
				parameter<Float32> ȳ     := mean(y); //sample mean
				
				parameter<Float32> SSR := sum((y - ŷ)^2f); // Sum of Squared Residuals
				parameter<Float32> SSE := sum((ŷ - ȳ)^2f); // Sum of Squared Explained
				parameter<Float32> SST := sum((y - ȳ)^2f); // Sum of Squares Total
				parameter<Float32> R2  := 1f - (SSR / SST);
			}
		}
	}

	#include<ReadData_BAG_T.dms>
	#include<PreBAG_PerJaar_T.dms>
	
	Template ReadData_BBG_T
	{
		//
		parameter<UInt32> Year;
		unit<UInt32> RegioUnit;
		//
		
		attribute<Ha> BrutoOpp          (AdminDomain):= ='SourceData/Grondgebruik/BBG/Dominant/Per_AdminDomain_perKlasse/Y'+string(Year)+'/PerKlasse/Verblijfsrecreatie && AdminDomain/IsStudyArea ? AdminDomain/NrHaPerCell : 0[ha]';
		attribute<Ha> BrutoOpp_perRegio (RegioUnit)  := sum(BrutoOpp, RegioUnit/Per_AdminDomain);
		
		parameter<Ha> Sum_BrutoOpp := sum(BrutoOpp);
	}
}