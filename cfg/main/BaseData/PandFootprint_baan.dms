container PandFootprint_baan
{
	parameter<String> Year                := ModelParameters/werken/PandFootprint_per_job_calc_yr, Descr = "Jaar van de BAG data die gebruikt wordt voor de berekening van de pandfootprint per baan. Standaard is dit het jaar dat ook gebruikt wordt voor de startstaat (ModelParameters/Werken/StartYear). In geval van een analyse waarbij de dichtheid van pandfootprint per baan in een ander jaar bepaald moet worden, kan dit hier aangepast worden.";
	parameter<String> distance_decay_Type := 'rev_dist_scaled', Descr = "Type afstandsverval functie die gebruikt wordt in de potentiaal berekening. Standaard is dit rev_dist_scaled, wat een negatieve exponentiele functie is met schaal 1 op 5000m.";
	
	container LISA            := SourceData/Actoren/Banen/Per_TXLJobs7_AdminDomain;
	unit<UInt32> Pand         := ='BaseData/StartState/PandFootprint/PerYear_AdminDomain/'+string(Year)+'/pand_met_vbo';
	container PandFootprint   := Pand/Footprint_perJobs6_AdminDomain;
	container Opp_inPand      := Pand/Opp_perJobs6;
	container PerGebruiksdoel := Pand/PerGebruiksdoel_corr;
	
	unit<UInt32> RegioUnit := SourceData/RegioIndelingen/NVM;
	
	container Banen_perJobs6_per_grid :=
		for_each_nedv(
			Actor/Jobs6/name
			, 'sum(LISA/'+Actor/Jobs6/name+', AdminDomain/AllocDomain_rel)'
			, AllocDomain
			, Job
		), Descr = "Agregeer banen per jobs6 subsector naar allocdomain";
	
	container Smoothed
	{
		container Potential_Banen :=
			for_each_nedv(
				Actor/Jobs6/name,
				'IsDefined(SourceData/RegioIndelingen/CBS/Last/Buurt/Per_AllocDomain) ? max_elem(potential(Banen_perJobs6_per_grid/'+Actor/Jobs6/name+', Distmatrices/Impl_100m/pot5000m/PotRange/'+distance_decay_Type+'), ModelParameters/Werken/Job_Ondergrens) : (0f/0f)[Job]',
				AllocDomain, Job
			), Descr = "Bepaal de potentiaal van banen per jobs6 subsector op basis van een afstandsverval functie. Dit is nodig om te voorkomen dat in dunbevolkte gebieden met weinig banen, de pandfootprint per baan te hoog wordt.";
		
		container Potential_m2PandFootprint :=
			for_each_nedv(
				Actor/Jobs6/name
				, 'IsDefined(SourceData/RegioIndelingen/CBS/Last/Buurt/Per_AllocDomain) ? max_elem(potential(sum(PandFootprint/'+Actor/Jobs6/name+',AdminDomain/AllocDomain_rel), Distmatrices/Impl_100m/pot5000m/PotRange/'+distance_decay_Type+'), ModelParameters/Werken/PandFootprint_Ondergrens) : (0f/0f)[m2PandFootprint]'
				, AllocDomain
				, m2PandFootprint
			), Descr = "Bepaal de potentiaal van pandfootprint per jobs6 subsector op basis van een afstandsverval functie. Dit is nodig om te voorkomen dat in dunbevolkte gebieden met weinig banen, de pandfootprint per baan te hoog wordt.";
		
		container Result :=
			for_each_nedv(
				Actor/Jobs6/name
				, 'Potential_m2PandFootprint/'+Actor/Jobs6/name+' / Potential_Banen/'+Actor/Jobs6/name
				, AllocDomain
				, m2PandFootprint_job
			), Descr = "Bepaal de pandfootprint per baan op basis van de gesmoothede potentiaal waarden.";
	}
	
	container PerRegio : using = "Classifications"
	{
		container Banen_perRegio :=
			for_each_nedv(
				Actor/Jobs6/name
				, 'sum(Banen_perJobs6_per_grid/'+Actor/Jobs6/name+', RegioUnit/Per_AllocDomain)'
				, RegioUnit
				, Job
			), Descr = "Agregeer banen per jobs6 subsector naar regio niveau";
		
		container m2PandFootprint_perRegio :=
			for_each_nedv(
				Actor/Jobs6/name
				, 'sum(PandFootprint/'+Actor/Jobs6/name+', RegioUnit/Per_AdminDomain)'
				, RegioUnit
				, m2PandFootprint
			), Descr = "Agregeer pandfootprint per jobs6 subsector naar regio niveau";
		
		container Opp_perRegio :=
			for_each_nedv(
				Actor/Jobs6/name
				, 'sum(Opp_inPand/'+Actor/Jobs6/name+', RegioUnit/Per_AdminDomain)'
				, RegioUnit
				, meter2
			), Descr = "Agregeer vbo opp in pand per jobs6 subsector naar regio niveau";
		
		container Fractie_Opp_inJobs6_perVBOfuctie :=
			for_each_nedv(
				Vastgoed/vbo_gebruiksdoel_plus/name
				, 'sum(PerGebruiksdoel/'+Vastgoed/vbo_gebruiksdoel_plus/name+'/Opp, pand/nvm_rel)  / sum(Pand/Opp_perJobs6_perPand/'+Actor/Jobs6/name[Vastgoed/vbo_gebruiksdoel_plus/Jobs6_rel]+', pand/nvm_rel)'
				, RegioUnit
				, float32
			), Descr = "Bepaal per vbo gebruiksdoel het aandeel van de vbo opp dat toe te schrijven is aan een bepaalde jobs6 subsector, op basis van de nvm relatie.";
		
		container Ratio_Footprint_Opp_perAdminDomain :=
			for_each_nedv(
				Actor/Jobs6/name
				, '(Opp_perRegio/'+Actor/Jobs6/name+' / m2PandFootprint_perRegio/'+Actor/Jobs6/name+')[RegioUnit/Per_AdminDomain]'
				, AdminDomain
				, float32
			), Descr = "Bepaal per admin domain de ratio tussen vbo opp en pandfootprint, op basis van de regio waarden.";
		
		container Result_PerRegio :=
			for_each_nedv(
				Actor/Jobs6/name
				, 'm2PandFootprint_perRegio/'+Actor/Jobs6/name+' / Banen_perRegio/'+Actor/Jobs6/name
				, RegioUnit
				, m2PandFootprint_job
			), Descr = "Bepaal de pandfootprint per baan op basis van de regio waarden.";
		
		container Result :=
			for_each_nedv(
				Actor/Jobs6/name
				, 'Result_PerRegio/'+Actor/Jobs6/name+'[RegioUnit/Per_AllocDomain]'
				, AllocDomain
				, m2PandFootprint_job
			), Descr = "Breng de regio waarden terug naar allocdomain niveau.";
	}

	container Result := = ModelParameters/Werken/Type_m2perBaan+'/Result', Descr = "Kies hier welk resultaat gebruikt moet worden. Standaard is dit de smoothed versie, maar in sommige gevallen kan het wenselijk zijn om de op regio gebaseerde versie te gebruiken. used in VariantData/dichtheid; baseData/bag_nieuwbouw; templates/indicatoren; templates/Overstromingschades";
}