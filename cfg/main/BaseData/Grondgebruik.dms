container Grondgebruik : using = "classifications/actor;Classifications/Grondgebruik"
{
	container Src := SourceData/Grondgebruik/BBG/dominant;
	
	container Per_AdminDomain
	{
		attribute<CBSKlasse> gg_CBS (AdminDomain) := ='Src/per_AdminDomain/Y'+ModelParameters/BBG_Year
		{
			attribute<CBSKlasse/Aggr> per_Aggr (AdminDomain) := CBSKlasse/Aggr_rel[.];
		}
		
		attribute<bool> IsWerklocatie (AdminDomain) := CBSKlasse/IsWerklocatie[gg_CBS];
		attribute<bool> IsWoonlocatie (AdminDomain) := CBSKlasse/IsWoonlocatie[gg_CBS];
		attribute<bool> IsZeehaven    (AdminDomain) := SourceData/Grondgebruik/IBIS/IsZeehaven_AdminDomain;
		attribute<bool> IsGrootWater  (AdminDomain) := CBSKlasse/IsGrootWater[gg_CBS];
		attribute<bool> IsGroen       (AdminDomain) := CBSKlasse/IsGroen[gg_CBS];
		attribute<bool> IsBouwterrein (AdminDomain) := gg_CBS == CBSKlasse/V/bouwterrein;
		
		// attribute<LU_ModelType> gg_Landbouw_Voedergewas (AdminDomain) := invert(LU_ModelType/Voedergewas_rel)[SourceData/Landbouw/Voedergewas_categorie_2014];
		// attribute<LU_ModelType> gg_Landbouw_LGN         (AdminDomain) := LGNKlasse/LU_ModelType_rel[SourceData/Grondgebruik/LGN/m25];
		// attribute<LU_ModelType> gg_Landbouw             (AdminDomain) := MakeDefined(gg_Landbouw_Voedergewas, gg_Landbouw_LGN);
		
		attribute<LU_ModelType>      gg_CBS_MT                     (AdminDomain) := CBSKlasse/LU_ModelType_rel[gg_CBS];
		// attribute<LU_ModelType>      gg_basis0                     (AdminDomain) := MakeDefined(gg_CBS_MT, gg_Landbouw);
		// attribute<LU_ModelType>      gg_basis1                     (AdminDomain) := IsNull(gg_basis0) && gg_CBS == CBSKlasse/v/overige_agrarisch_gebruik ? LU_ModelType/v/landbouw_gg_vee : gg_basis0;
		attribute<LU_ModelType>      gg_basis                      (AdminDomain) := MakeDefined(gg_basis1, LU_ModelType/v/overig_totaal);
		
		// container gg_basis_perK :=
			// for_each_nedv(
				// LU_ModelType/Label
				// , 'gg_basis == LU_ModelType/v/'+LU_ModelType/Label
				// , AdminDomain
				// , bool
			// )
		// {
			// container TotaleHa :=
				// for_each_nedv(
					// LU_ModelType/Label
					// , 'sum(float32(gg_basis_perK/'+LU_ModelType/Label+') * AdminDomain/NrHaPerCell)'
					// , void
					// , ha
				// )
			// {
				// parameter<ha> Totaal := = 'add('+AsItemList(LU_ModelType/Label)+')';
				// parameter<ha> TotaalMinWaterEnOverig := Totaal - Water_Totaal - Overig_Totaal;
			// }
			
			// container Aandeel :=
				// for_each_nedv(
					// LU_ModelType/Label
					// , 'TotaleHa/'+LU_ModelType/Label+' / TotaleHa/TotaalMinWaterEnOverig'
					// , void
					// , float32
				// );
		// }
	}
	
	container Per_AllocDomain
	{
		attribute<CBSKlasse> Basisjaar (AllocDomain) := ='Src/per_AllocDomain/Y'+ModelParameters/BBG_Year;
		
		attribute<bool> IsWerklocatie (AllocDomain) := CBSKlasse/IsWerklocatie[Basisjaar];
		attribute<bool> IsWoonlocatie (AllocDomain) := CBSKlasse/IsWoonlocatie[Basisjaar];
		attribute<bool> IsZeehaven    (AllocDomain) := SourceData/Grondgebruik/IBIS/IsZeehaven_AllocDomain;
		attribute<bool> IsGrootWater  (AllocDomain) := CBSKlasse/IsGrootWater[Basisjaar];
		attribute<bool> IsGroen       (AllocDomain) := CBSKlasse/IsGroen[Basisjaar];
		attribute<bool> IsBouwterrein (AllocDomain) := Basisjaar == CBSKlasse/V/bouwterrein;
		
		// attribute<LU_ModelType> gg_Landbouw_Voedergewas (AllocDomain) := invert(LU_ModelType/Voedergewas_rel)[modus(SourceData/Landbouw/Voedergewas_categorie_2014, rdc_25m/rdc_100m_rel)];
		// attribute<LU_ModelType> gg_Landbouw_LGN         (AllocDomain) := LGNKlasse/LU_ModelType_rel[modus(SourceData/Grondgebruik/LGN/m25, rdc_25m/rdc_100m_rel)];
		// attribute<LU_ModelType> gg_Landbouw             (AllocDomain) := MakeDefined(gg_Landbouw_Voedergewas, gg_Landbouw_LGN);
	}
	
	container NabijGrootWaterInBBG
	{
		attribute<bool>    IsGrootWater    (AllocDomain) := Per_AllocDomain/IsGrootWater;
		attribute<float32> Smoothed_srcsrc (AllocDomain) := potential(IsGrootWater[float32], Distmatrices/impl_100m/pot500m/potrange/rev_dist_scaled );
		attribute<float32> Smoothed0       (AllocDomain) := Smoothed_srcsrc * BaseData/Omgeving/OV_Reistijd/TotRailHalte/Smoothed;
		attribute<float32> Smoothed        (AllocDomain) := Smoothed0  / max(Smoothed0);
	}
}