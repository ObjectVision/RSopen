container StateBasisjaar : using = "Classifications/modellering"
, Descr = "Hier wordt de stand per subsector in het basisjaar bepaald, weggeschreven en ingeladen"
{
	container State := =ModelParameters/BaseDataOntkoppeld ? 'Read' : 'Write';
	
	container Read_UNCHECKED :=
		for_each_ndvna(
			StandVar_Prep/path
			, AdminDomain
			, StandVar_Prep
			, StandVar_Prep/unit_name
			, '%LocalDataProjDir%/BaseData/StandBasisjaar/'+StandVar_Prep/path+'_'+/ModelParameters/StudyArea+'.tif'
		), StorageReadOnly = "TRUE", Descr = "This tif file could potentially contain only zeros or undefined values. To check for this eventuality, the container following this one checks for this."
	{
		container Wonen
		{
			attribute<meter2> Footprint (AdminDomain) : StorageName = "='%LocalDataProjDir%/BaseData/StandBasisjaar/Wonen/Footprint_'+/ModelParameters/StudyArea+'.tif'";
		}
		container Verblijfsrecreatie
		{
			attribute<meter2> Footprint (AdminDomain) : StorageName = "='%LocalDataProjDir%/BaseData/StandBasisjaar/Verblijfsrecreatie/Footprint_'+/ModelParameters/StudyArea+'.tif'";
		}
	}
	
	container Read :=
		for_each_neidvn(
			StandVar_Prep/path
			, 'Read_UNCHECKED/'+StandVar_Prep/path
			, StandVar_Prep/IsLandbouw ? '' : 'not(all(IsNull(this))) && not(all(IsZero(this)))'
			, AdminDomain
			, StandVar_Prep
			, StandVar_Prep/unit_name
		), Descr = "Check om ervoor te zorgen dat niet de hele kaart undefined is. Is dit wel het geval, ga dan terug naar Write van dit item, check of die ook undefined is, of dat er iets in het opslaan van de tif fout gaat."
	{
		container Wonen
		{
			attribute<Woning> Aantal_Woningen_Totaal (AdminDomain) := = 'add('+asItemList(Classifications/Vastgoed/WP2xVSSH/name)+')';
			attribute<meter2> Footprint              (AdminDomain) := Read_UNCHECKED/Wonen/Footprint, IntegrityCheck = "not(all(IsNull(this)))", Descr = "Check om ervoor te zorgen dat niet de hele kaart undefined is. Is dit wel het geval, ga dan terug naar Write van dit item, check of die ook undefined is, of dat er iets in het opslaan van de tif fout gaat.";
		}
		
		container Verblijfsrecreatie
		{
			attribute<meter2> Footprint              (AdminDomain) := Read_UNCHECKED/Verblijfsrecreatie/Footprint, IntegrityCheck = "not(all(IsNull(this)))", Descr = "Check om ervoor te zorgen dat niet de hele kaart undefined is. Is dit wel het geval, ga dan terug naar Write van dit item, check of die ook undefined is, of dat er iets in het opslaan van de tif fout gaat.";
		}
		
		container PandFootprint
		{
			attribute<meter2> Totaal                 (AdminDomain) := ='add('+asItemList(Actor/Jobs6/name)+')';
		}
	}
	
	container Write :=
		for_each_neidvnat(
			StandVar_Prep/path
			, 'Src/'+StandVar_Prep/path+'' 
			, StandVar_Prep/IsLandbouw ? '' : 'not(all(IsNull(this))) && not(all(IsZero(this)))'
			, AdminDomain
			, StandVar_Prep
			, StandVar_Prep/unit_name
			, '%LocalDataProjDir%/BaseData/StandBasisjaar/'+StandVar_Prep/path+'_'+/ModelParameters/StudyArea+'.tif'
			, 'gdalwrite.grid'
		), Descr = "Check om ervoor te zorgen dat niet de hele kaart undefined of zero is. Is dit wel zo, ga dan terug tracen naar waar het probleem zit."
	{
		parameter<String> Generate := 'Ready', ExplicitSuppliers = "=asList(StandVar_Prep/path, ';')+';Wonen/Footprint;Verblijfsrecreatie/Footprint'";
		
		container Wonen
		{
			attribute<meter2>     Footprint (AdminDomain) := Src/Wonen/Footprint, StorageName = "='%LocalDataProjDir%/BaseData/StandBasisjaar/Wonen/Footprint_'+/ModelParameters/StudyArea+'.tif'", StorageType = "gdalwrite.grid";
		}
		container Verblijfsrecreatie
		{
			attribute<meter2>     Footprint (AdminDomain) := Src/Verblijfsrecreatie/Footprint, StorageName = "='%LocalDataProjDir%/BaseData/StandBasisjaar/Verblijfsrecreatie/Footprint_'+/ModelParameters/StudyArea+'.tif'", StorageType = "gdalwrite.grid";
		}
	}
	
	container Src
	{
		container Wonen := 
			for_each_nedv(
				Vastgoed/WP2xVSSH/name
				, 'recollect_by_cond(AdminDomain/IsCompactedDomain, Src0/Wonen/WP2xVSSHs/'+Vastgoed/WP2xVSSH/name+')'
				, AdminDomain
				, Woning
			), Descr = "Vertaling van compacted naar uncompacted domain."
		{
			attribute<Woning> Totaal    (AdminDomain) := = 'add('+asItemList(Vastgoed/WP2xVSSH/name)+')';
			attribute<meter2> Footprint (AdminDomain) := recollect_by_cond(AdminDomain/IsCompactedDomain, Src0/Wonen/Footprint);
		}
		
		container Werken := 
			for_each_nedv(
				Actor/Jobs6/name
				, 'Src0/Werken/'+Actor/Jobs6/name
				, AdminDomain
				, job
			), Descr = "Ophalen banen per subsector in basisjaar";
		
		container Wind
		{
			attribute<MW>    Totaal                         (AdminDomain) := Src0/Wind/Totaal;
			attribute<MW>    Totaal_Compacted      (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, Src0/Wind/Totaal);
			attribute<Yr>    jaartal_ingebruikname          (AdminDomain) := Src0/Wind/jaartal_ingebruikname;
			attribute<Meter> Ashoogte                       (AdminDomain) := Src0/Wind/Ashoogte;
			attribute<Meter> Rotordiameter                  (AdminDomain) := Src0/Wind/Rotordiameter;
			attribute<Meter> MaxWerpafstandNom              (AdminDomain) := Src0/Wind/MaxWerpafstandNom;
		}
		
		container Zon
		{
			attribute<MW> Totaal (AdminDomain) := Src0/Zon/Totaal;
		}
		
		container Verblijfsrecreatie
		{
			attribute<Verblijfsobject> Totaal    (AdminDomain) := Src0/Verblijfsrecreatie/Totaal;
			attribute<meter2>          Footprint (AdminDomain) := Src0/Verblijfsrecreatie/Footprint;
		}
		
		container PandFootprint := 
			for_each_nedv(
				Actor/Jobs6/name
				,'BaseData/StartState/PandFootprint/PerYear_AdminDomain/Y'+string(ModelParameters/Model_StartYear)+'/pand_met_vbo/Footprint_perJobs6_AdminDomain/'+Actor/Jobs6/name
				, AdminDomain
				, m2PandFootprint
			), Descr = "Ophalen pandfootprint per werk-subsect uit relevant BAG-jaar";
			
		container Landbouw := 
			for_each_nedv(
				Actor/LandbouwKlasses/name
				,'BaseData/StartState/Grondgebruik/Per_AdminDomain/gg_basis == rlookup(Actor/LandbouwKlasses/V/'+Actor/LandbouwKlasses/name+', Actor/LU_ModelType/LandbouwK_rel) ? AdminDomain/NrHaPerCell : 0[Ha]'
				, AdminDomain
				, Ha
			), Descr = "Ophalen landbouw klasse in basisjaar uit landgebruikskaart";
	}
	
	container Src0
	{
		#include<Wonen.dms>
		
		container Werken := 
			for_each_nedv(
				Actor/Jobs6/name
				, ModelParameters/Werken/Use_AltLISA 
						? 'AlternatieveLISA/PerVariant/'+Actor/Jobs6/name+'_'+ModelParameters/Werken/AltLISA_cluster_Variant+'_'+ModelParameters/Werken/AltLISA_potential_Variant+'/Estimate_potential'
						: 'WritePrivData/LISA/fss/Per_TXLJobs7_AdminDomain/'+Actor/Jobs6/name
				, AdminDomain
				, job
			), Descr = "Ophalen werk-banen uit LISA of Alt-LISA afhankelijk van modelparameter instelling.";
		
		container Wind
		{
			attribute<MW>    Totaal                (AdminDomain) := SourceData/Energie/Wind/Veldsituatie/AdminDomain/Vermogen_enkelecellen / float32(rdc_meter/IsStudyArea_AdminDomain); 
			attribute<Yr>    jaartal_ingebruikname (AdminDomain) := SourceData/Energie/Wind/Veldsituatie/AdminDomain/jaartal_ingebruikname / UInt16(rdc_meter/IsStudyArea_AdminDomain); 
			attribute<Meter> Ashoogte              (AdminDomain) := SourceData/Energie/Wind/Veldsituatie/AdminDomain/Ashoogte / float32(rdc_meter/IsStudyArea_AdminDomain);
			attribute<Meter> Rotordiameter         (AdminDomain) := SourceData/Energie/Wind/Veldsituatie/AdminDomain/Rotordiameter / float32(rdc_meter/IsStudyArea_AdminDomain);
			attribute<Meter> MaxWerpafstandNom     (AdminDomain) := SourceData/Energie/Wind/Veldsituatie/AdminDomain/MaxWerpafstandNom / float32(rdc_meter/IsStudyArea_AdminDomain);
		}
		
		container Zon
		{
			attribute<MW> Totaal (AdminDomain) := SourceData/Energie/Zon/Zonnevelden_polygonen/AdminDomain/Vermogen / float32(rdc_meter/IsStudyArea_AdminDomain), Descr = "Truck om cellen buiten StudyArea op 0 te zetten.";
		}
		
		container Verblijfsrecreatie
		{
			attribute<verblijfsobject> Totaal    (AdminDomain) := ='PandFootprint/PerYear_AdminDomain/Y'+string(ModelParameters/Model_StartYear)+'/pand_met_vbo/PerGebruiksdoel_corr/logies/count_Per_AdminDomain[verblijfsobject]';  
			attribute<meter2>          Footprint (AdminDomain) := ='PandFootprint/PerYear_AdminDomain/Y'+string(ModelParameters/Model_StartYear)+'/pand_met_vbo/PerGebruiksdoel_corr/logies/Footprint_Per_AdminDomain';  
		}
	}
}