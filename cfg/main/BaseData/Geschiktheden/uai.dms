container UrbanAttractivityIndex
{
	attribute<float32> R_5000m_AbsWeight (AllocDomain) := C_5000m_AbsWeight/Resultaat;
	
	container C_5000m_AbsWeight := CalculateUAI(5000, 'AbsWeight');
	
	Template CalculateUAI
	{
		parameter<uint32> potentiaal;
		parameter<string> distance_decay;
		
		attribute<float32> Resultaat    (AllocDomain)        := Detailhandel/norm + BijeenkomstLogies/norm + Monumentaal/norm;
		attribute<float32> Resultaat_ln (AllocDomain)        := log(log(log(log(resultaat + 1f) + 1f) + 1f) +1f);
		parameter<float32> max                               := max(resultaat_ln);
		attribute<float32> Resultaat_ln_scaled (AllocDomain) := Resultaat_ln / max;
		
		container Detailhandel      := T(Count/Detailhandel, potentiaal, distance_decay);
		container BijeenkomstLogies := T(Count/BijeenkomstLogies, potentiaal, distance_decay);
		container Monumentaal       := T(Count/Monumentaal, potentiaal, distance_decay);
		
		container Count
		{
			attribute<float32> Detailhandel      (AllocDomain) := ='BAG/'+BAG_RecentYear +'/VBOs/GebruiksdoelSets/winkel/GebruiksdoelSet/count_per_AllocDomain[float32]';
			attribute<float32> BijeenkomstLogies (AllocDomain) := ='BAG/'+BAG_RecentYear +'/VBOs/GebruiksdoelSets/bijeenkomst/GebruiksdoelSet/count_per_AllocDomain[float32] + BAG/'+BAG_RecentYear +'/VBOs/GebruiksdoelSets/logies/GebruiksdoelSet/count_per_AllocDomain[float32]';
			attribute<float32> Monumentaal       (AllocDomain) := ='MakeDefined(BAG/'+BAG_RecentYear +'/panden/pand/pand_met_vbo/monumentale_per_AllocDomain[float32], 0f)';
		}
		
		Template T
		{
			//
			attribute<float32> Count (AllocDomain);
			parameter<uint32> potentiaal;
			parameter<string> distance_decay;
			//
			
			attribute<float32> Potential (AllocDomain) := ='potential(Count, Distmatrices_100m/pot'+string(potentiaal)+'m/'+distance_decay+')'; 
			
			parameter<float32> Max := max(Potential);
			attribute<float32> Max_regio (AllocDomain) := max(Potential, RegioIndelingen/Gemeente2019_single/per_AllocDomain)[RegioIndelingen/Gemeente2019_single/per_AllocDomain];
			
			attribute<float32> norm (AllocDomain) := (Potential / Max) / 3f;
		}
	}
}