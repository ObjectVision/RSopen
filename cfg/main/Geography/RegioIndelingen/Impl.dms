container Impl
{
	parameter<string> Generate_Run1 := 
		Make_Gemeente2018/Generate 
	+	Make_Gemeente2019/Generate
	+	Make_Gemeente2021/Generate
	+	Make_Gemeente2022/Generate;
	
	parameter<string> Generate_Run2 := 
		MakeMRA/Generate 
	+	Make_Provincie/Generate 
	+	Make_Corop/Generate
	+	Make_NVM_2011/Generate
	+	Make_NVM/Generate
	+	Wijk/Generate
	+	Buurt/Generate
	+	Make_LMSSubzone/Generate
	+	Make_Grootstedelijke_agglomeraties/Generate
	+	Make_Bevolkingskern_2011/Generate
	;
	
	container Gebiedsindelingen_2022
	:	StorageName     = "%RSLDataDir%/RegioIndelingen/cbsgebiedsindelingen2022.gpkg"
	, 	StorageType     = "gdal.vect"
	,	StorageReadOnly = "True"
	,	SyncMode        = "alltables"
	,	DialogData      = "rdc_meter";
	
	unit<uint32>  Make_Gemeente2022 := Gebiedsindelingen_2022/cbs_gemeente_2022_gegeneraliseerd 
	,	StorageName = "%LocalDataDir%/RSopen/Basedata/RegioIndelingen/gem_2022.fss"
	{
		attribute<rdc_meter> geometry (poly) := Gebiedsindelingen_2022/cbs_gemeente_2022_gegeneraliseerd/geometry;
		attribute<string>    statcode        := Gebiedsindelingen_2022/cbs_gemeente_2022_gegeneraliseerd/statcode;
		attribute<string>    statnaam        := Gebiedsindelingen_2022/cbs_gemeente_2022_gegeneraliseerd/statnaam;
		attribute<string>    GM_NAAM         := Gebiedsindelingen_2022/cbs_gemeente_2022_gegeneraliseerd/statnaam;
		attribute<string>    name            := AsItemName(statnaam);
		
		parameter<string> Generate := 'Ready', ExplicitSuppliers = "Geometry;statcode;statnaam;GM_NAAM;name", DisableStorage = "True";
	}
	
	unit<uint32> GemMRA8
	: StorageName = "%RSLDataDir%/RegioIndelingen/RegioindelingMRA.csv"
	, StorageType = "gdal.vect"
	, StorageReadOnly = "True"
	{
		attribute<string>   gemeente;
		attribute<string>   Regio;
		attribute<string>   gem_name  := replace(gemeente, '/', '_', '-', '_', ' ', '_');
		attribute<string>   MRA8_name := replace(regio, '/', '_', '-', '_', ' ', '_');
		attribute<MRA8>     MRA8_rel  := rlookup(MRA8_name, MRA8/name);
		attribute<RegioIndelingen/gemeente/Gemeente2018> gem_rel := rlookup(gemeente, RegioIndelingen/gemeente/Gemeente2018/GEMNAAM);
		attribute<bool> Officieel := !(gem_name == 'Lelystad' || gem_name == 'Zeewolde');
		
		unit<uint32> MRA8 := unique(MRA8_name)
		{
			attribute<string> name := replace(values, '/', '_', '-', '_', ' ', '_');
			attribute<ipoint> geometry0 (polygon) : = partitioned_union_polygon(ipolygon(MakeMRA/geometry), MakeMRA/MRA8_rel);
			attribute<rdc_meter> geometry (polygon)  : = geometry0[rdc_meter];
		}
		
		unit<uint32> Excl := subset(GemMRA8/Officieel)
		{
			attribute<string> gemeente := GemMRA8/gemeente[Nr_OrgEntity];
			attribute<string> regio := GemMRA8/regio[Nr_OrgEntity];
			attribute<string>   gem_name  := GemMRA8/gem_name[Nr_OrgEntity];
			attribute<string>   MRA8_name  := GemMRA8/MRA8_name[Nr_OrgEntity];
			attribute<MRA8>   MRA8_rel  := GemMRA8/MRA8_rel[Nr_OrgEntity];
			attribute<RegioIndelingen/gemeente/Gemeente2018> gem_rel := GemMRA8/gem_rel[Nr_OrgEntity];
		}
	}
	
	unit<uint32> MakeMRA := subset(IsDefined(Gemeente/Gemeente2018/MRA_rel))
	,	StorageName = "%LocalDataDir%/RSopen/Basedata/RegioIndelingen/MRA.fss"
	{
		attribute<rdc_meter>    geometry (poly) := Gemeente/Gemeente2018/Geometry[nr_OrgEntity];
		attribute<GemMRA8/MRA8> MRA8_rel        := Gemeente/Gemeente2018/MRA8_rel[nr_OrgEntity];
		attribute<string>       Label           := Gemeente/Gemeente2018/MRA8_naam[nr_OrgEntity];
		
		unit<uint32> Excl := subset(IsDefined(Gemeente/Gemeente2018/MRA_Excl_rel))
		,	StorageName = "%LocalDataDir%/RSopen/Basedata/RegioIndelingen/MRA_Excl.fss"
		{
			attribute<rdc_meter>    geometry (poly) := Gemeente/Gemeente2018/Geometry[nr_OrgEntity];
			attribute<GemMRA8/MRA8> MRA8_rel        := Gemeente/Gemeente2018/MRA8_rel[nr_OrgEntity];
			attribute<string>       Label           := Gemeente/Gemeente2018/MRA8_naam[nr_OrgEntity];
			
			parameter<string> Generate := 'Ready', ExplicitSuppliers = "geometry;MRA8_rel;Label", DisableStorage = "True";
		}
		
		parameter<string> Generate := 'Ready'+Excl/Generate, ExplicitSuppliers = "geometry;MRA8_rel;Label", DisableStorage = "True";
	
	}
	
	unit<uint32> Read_Gemeente2018_gdb
	:	StorageName     = "%RSLDataDir%/RegioIndelingen/Gemeentegrenzen_2018_A1_PBL_RES.gdb"
	,	StorageType     = "gdal.vect"
	,	StorageReadOnly = "True"
	{
		attribute<rdc_meter>    Geometry (poly);
		attribute<string>       GEMNAAM;
		attribute<string>       RESNAAM;
	}
	
	unit<uint32>  Make_Gemeente2018 := Read_Gemeente2018_gdb
	, StorageName = "%LocalDataDir%/RSopen/Basedata/RegioIndelingen/gem_2018.fss"
	{
		attribute<rdc_meter> Geometry (poly) := Read_Gemeente2018_gdb/Geometry;
		attribute<string>    GEMNAAM         := Read_Gemeente2018_gdb/GEMNAAM;
		attribute<string>    RESNAAM         := Read_Gemeente2018_gdb/RESNAAM;
		attribute<float64>   Gemcode         := Read_Gemeente2018_gdb/Gemcode;
		
		parameter<string> Generate := 'Ready', ExplicitSuppliers = "Geometry;GEMNAAM;RESNAAM;Gemcode", DisableStorage = "True";
	}
	
	unit<uint32> Read_Gemeente2019_shp
	:	StorageName     = "%RSLDataDir%/RegioIndelingen/gemeente_2019.shp"
	,	StorageType     = "gdal.vect"
	,	StorageReadOnly = "True"
	{
		attribute<rdc_meter>    Geometry (poly);
	}
	
	unit<uint32>  Make_Gemeente2019 := Read_Gemeente2019_shp
	, StorageName = "%LocalDataDir%/RSopen/Basedata/RegioIndelingen/gem_2019.fss"
	{
		attribute<rdc_meter> Geometry (poly) := Read_Gemeente2019_shp/Geometry;
		attribute<string>    GM_CODE         := Read_Gemeente2019_shp/GM_CODE;
		attribute<string>    GM_NAAM         := Read_Gemeente2019_shp/GM_NAAM;
		
		parameter<string> Generate := 'Ready', ExplicitSuppliers = "Geometry;GM_CODE;GM_NAAM", DisableStorage = "True";
	}
	
	unit<uint32> Read_Gemeente2021_shp
	:	StorageName     = "%RSLDataDir%/RegioIndelingen/gemeente_2021_v1.shp"
	,	StorageType     = "gdal.vect"
	,	StorageReadOnly = "True"
	{
		attribute<rdc_meter>    Geometry (poly);
	}
	
	unit<uint32>  Make_Gemeente2021 := Read_Gemeente2021_shp
	, StorageName = "%LocalDataDir%/RSopen/Basedata/RegioIndelingen/gem_2021.fss"
	{
		attribute<rdc_meter> Geometry (poly) := Read_Gemeente2021_shp/Geometry;
		attribute<string>    GM_CODE         := Read_Gemeente2021_shp/GM_CODE;
		attribute<string>    GM_NAAM         := Read_Gemeente2021_shp/GM_NAAM;
		attribute<string>    Water           := Read_Gemeente2021_shp/H2O;
		parameter<string>    Generate        := 'Ready', ExplicitSuppliers = "Geometry;GM_CODE;GM_NAAM;Water", DisableStorage = "True";
	}
	
	unit<uint32> Nl_src : nrofrows = 2
	{
		attribute<rdc_meter>  Geometry (poly)               := union_data(.,NL_BoundingBox/BoudingBox_minus_NL[rdc_meter], NL_BoundingBox/union_gemeente[rdc_meter]);
		attribute<.>          per_grid        (rdc_100m)    := poly2grid(Geometry, rdc_100m);
		attribute<bool>       IsNederland     (rdc_100m)    := per_grid == 1;
		attribute<.>          Ontwikkeld      (rdc_100m)    := per_grid;
		attribute<string>     name                          : ['BuitenlandZee', 'Nederland'];
		attribute<.>          NL_src_rel                    := id(.);
		
		container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
	}
	
	unit<uint32> NL_BoundingBox : nrofrows = 1
	{
		parameter<ipoint>  union_gemeente      (poly) := union_polygon(ipolygon(Gemeente/Gemeente2019/geometry));
		parameter<ipoint>  BoudingBox_minus_NL (poly) := union_polygon - union_gemeente;
		
		unit<uint32> OutsideNL : nrofrows = 1
		{
			attribute<rdc_meter> geometry (poly) := union_data(.,BoudingBox_minus_NL[rdc_meter]);
		}
		
		parameter<meter> x_min  := 0[meter];
		parameter<meter> x_max  := 280000[meter]; 
		parameter<meter> y_min  := 300000[meter];
		parameter<meter> y_max  := 625000[meter];
		
		parameter<rdc_meter> top_left     := point(y_max, x_min, rdc_meter);
		parameter<rdc_meter> top_right    := point(y_max, x_max, rdc_meter);
		parameter<rdc_meter> bottom_left  := point(y_min, x_min, rdc_meter);
		parameter<rdc_meter> bottom_right := point(y_min, x_max, rdc_meter);
		
		unit<uint32>              point_set    : nrofrows = 5
		{
			attribute<rdc_meter>      point        := union_data(., top_left, top_right, bottom_right, bottom_left, top_left);
			attribute<NL_BoundingBox> sequence_rel := const(0, .);
			attribute<.>              ordinal      := id(.);
		}
		
		attribute<rdc_meter> polygon (poly)      := points2sequence(point_set/point, point_set/sequence_rel, point_set/ordinal);
		parameter<ipoint>    union_polygon (poly) := union_polygon(ipolygon(polygon));
	}
	
	unit<uint32> Read_Provincie_GML
	:	StorageName     = "%RSLDataDir%/RegioIndelingen/Provincie_2019.gml"
	,	StorageType     = "gdal.vect"
	,	StorageReadOnly = "True"
	{
		attribute<rdc_meter> geometry (poly);
		attribute<string>    ProvincieNaam;
		attribute<string>    label           := ProvincieNaam;
		attribute<string>    name            := replace(Label, '-', '_');
		attribute<string>    afko            : ['FR', 'NH', 'GE', 'DR', 'UT', 'LI', 'FL', 'ZE', 'NB', 'ZH', 'OV', 'GR'];
	}
	
	unit<uint32> Make_Provincie := union_unit(impl/NL_BoundingBox/OutsideNL, Read_Provincie_GML)
	, StorageName = "%LocalDataDir%/RSOpen/Basedata/RegioIndelingen/provincie_2019.fss"
	{
		attribute<rdc_meter> Geometry (poly) := union_data(., impl/NL_BoundingBox/OutsideNL/geometry, Read_Provincie_GML/geometry);
		attribute<String>    Label           := union_data(., const('Buitengebied', impl/NL_BoundingBox/OutsideNL), Read_Provincie_GML/Label);
		attribute<string>    name            := union_data(., const('Buitengebied', impl/NL_BoundingBox/OutsideNL), Read_Provincie_GML/name);
		attribute<string>    afko            := union_data(., const('', impl/NL_BoundingBox/OutsideNL), Read_Provincie_GML/afko);
		
		parameter<string> Generate := 'Ready', ExplicitSuppliers = "Geometry;Label;name;afko", DisableStorage = "True";
	}
	
	unit<uint32>  Read_Corop_SHP
	: StorageName = "%RSLDataDir%/RegioIndelingen/COROP_2020.shp"
	, StorageReadOnly = "True"
	, StorageType = "gdal.vect"
	, DialogData  = "Geometry_rd"
	, DialogType  = "Map"
	{
		attribute<rdc_meter> Geometry    (poly);
		attribute<rdc_meter> Geometry_rd (poly) := LatLongWgs842RD(Geometry, rdc_meter);
		attribute<string>    label              := omschrijvi;
		attribute<string>    name               := replace(omschrijvi, ' ', '_', '-', '_', '''', '', '/', '_', 'Zeeuws', 'Zeeuwsch','.','');
		attribute<string>    numbered_name      := 'corop' + string(id(.));
	}
	
	unit<uint32>  Make_Corop := Read_Corop_SHP
	, StorageName = "%LocalDataDir%/RSopen/Basedata/RegioIndelingen/COROP_2020.fss"
	{
		attribute<rdc_meter> Geometry (poly) := Read_Corop_SHP/Geometry_rd;
		
		attribute<String>    Label           := Read_Corop_SHP/Label;
		attribute<string>    name            := Read_Corop_SHP/name;
		attribute<string>    numbered_name   := Read_Corop_SHP/numbered_name;
		
		parameter<string> Generate := 'Ready', ExplicitSuppliers = "Geometry;Label;name;numbered_name", DisableStorage = "True";		
	}
	
	unit<uint32>  Read_Randstad_SHP
	: StorageName = "%RSLDataDir%/RegioIndelingen/Randstad.shp"
	, StorageReadOnly = "True"
	, StorageType = "gdal.vect"
	, DialogData  = "Geometry_rd"
	, DialogType  = "Map"
	{
		attribute<rdc_meter> Geometry    (poly);
		attribute<int32>     NL_Randsta;
	}
	
	unit<uint32>  Make_Randstad := Read_Randstad_SHP
	, StorageName = "%LocalDataDir%/RSopen/Basedata/RegioIndelingen/Randstad.fss"
	{
		attribute<rdc_meter> Geometry (poly) := Read_Randstad_SHP/Geometry;
		attribute<int32>     IsRandstad      := Read_Randstad_SHP/NL_Randsta;
		
		parameter<string> Generate := 'Ready', ExplicitSuppliers = "Geometry;IsRandstad", DisableStorage = "True";		
	}
	
	unit<uint32> Read_NVM_2015_shp
	:	StorageName     = "%RSLDataDir%/RegioIndelingen/nvmafdelingen_2015.shp"
	,	StorageType     = "gdal.vect"
	,	StorageReadOnly = "True"
	{
		attribute<rdc_meter> geometry (poly);
	}
	
	unit<uint32>  Make_NVM := Read_NVM_2015_shp
	, StorageName = "%LocalDataDir%/RSopen/Basedata/RegioIndelingen/NVMregios.fss"
	{
		attribute<rdc_meter> geometry (poly) := Read_NVM_2015_shp/geometry;
		attribute<String>    Label           := Read_NVM_2015_shp/afdeling;
		
		parameter<string> Generate := 'Ready' + Make_NVM_2011/Generate + Make_NVM_2011_2/Generate
		, ExplicitSuppliers = "geometry;Label", DisableStorage = "True";		
	}
	
	unit<uint32> Read_NVM_2011_shp
	:	StorageName     = "%RSLDataDir%/RegioIndelingen/NVM_2011.shp"
	,	StorageType     = "gdal.vect"
	,	StorageReadOnly = "True"
	, 	SyncMode = "None"
	{
		attribute<rdc_meter>    Geometry (poly);
		attribute<string>       nvmnaam;
		attribute<String>       name  := replace(nvmnaam, '/', '_', '-', '_', ' ', '_','.','');
		
		unit<uint32> ZonderBuitengebied := subset(id(.) > 0[.])
		{
			attribute<rdc_meter>    Geometry (poly)               := ../Geometry[nr_OrgEntity];
			attribute<String>       name                          := ../name[nr_OrgEntity];
			attribute<string>       label                         := name;
			attribute<.>            per_domain_grid (domain_grid) := poly2grid(Geometry, domain_grid);
			attribute<.>            per_rdc_100m (rdc_100m)       := poly2grid(Geometry, rdc_100m);
			attribute<.>            per_rdc_25m   (rdc_25m)       := poly2grid(Geometry, rdc_25m);
			attribute<string>       NVM_2011_2_name               := name == 'Almere' ? 'Amsterdam' : name;
			attribute<NVM_2011_2>   NVM_2011_2_rel                := rlookup(NVM_2011_2_name, NVM_2011_2/name);
			
			unit<uint32> NVM_2011_2 := unique(NVM_2011_2_name)
			{
				attribute<string>    name := values;
				attribute<string>    label := name, DialogType = "LabelText";
				attribute<ipoint>    geometry0 (polygon) : = partitioned_union_polygon(ipolygon(../Geometry), ../NVM_2011_2_rel);
				attribute<rdc_meter> geometry  (polygon)  : = geometry0[rdc_meter];
			}
		}
	}
	
	unit<uint32>  Make_NVM_2011 := Read_NVM_2011_shp/ZonderBuitengebied
	, StorageName = "%LocalDataDir%/RSopen/Basedata/RegioIndelingen/NVMregios_2011.fss"
	{
		attribute<rdc_meter> Geometry (poly) := Read_NVM_2011_shp/ZonderBuitengebied/Geometry;
		attribute<string>    name            := Read_NVM_2011_shp/ZonderBuitengebied/name;
		attribute<string>    label           := Read_NVM_2011_shp/ZonderBuitengebied/label, DialogType = "LabelText";
		
		parameter<string> Generate := 'Ready', ExplicitSuppliers = "geometry;name;Label", DisableStorage = "True";		
	}
	
	unit<uint32>  Make_NVM_2011_2 := Read_NVM_2011_shp/ZonderBuitengebied/NVM_2011_2
	, StorageName = "%LocalDataDir%/RSopen/Basedata/RegioIndelingen/NVMregios_2011_2.fss"
	{
		attribute<rdc_meter> Geometry (poly) := Read_NVM_2011_shp/ZonderBuitengebied/NVM_2011_2/Geometry;
		attribute<string>    name            := Read_NVM_2011_shp/ZonderBuitengebied/NVM_2011_2/name;
		attribute<string>    label           := Read_NVM_2011_shp/ZonderBuitengebied/NVM_2011_2/label, DialogType = "LabelText";
		
		parameter<string> Generate := 'Ready', ExplicitSuppliers = "geometry;name;Label", DisableStorage = "True";		
	}
	
	container Wijk
	{
		parameter<string> Generate := Make_2015/Generate + Make_2019/Generate;
		
		unit<uint32> Read_2015
		:	StorageName     = "%RSLDataDir%/RegioIndelingen/wijk_2015.shp"
		,	StorageType     = "gdal.vect"
		,	StorageReadOnly = "True"
		{
			attribute<rdc_meter>    geometry (polygon);
		}
		
		unit<uint32>  Make_2015 := Read_2015
		, StorageName = "%LocalDataDir%/RSopen/Basedata/RegioIndelingen/wijk_2015.fss"
		{
			attribute<rdc_meter> geometry (poly) := Read_2015/geometry;
			attribute<string>    WK_NAAM         := Read_2015/WK_NAAM;
			attribute<string>    WK_CODE         := Read_2015/WK_CODE;
			attribute<string>    GM_NAAM         := Read_2015/GM_NAAM;
			
			parameter<string> Generate := 'Ready', ExplicitSuppliers = "geometry;WK_NAAM;WK_CODE;GM_NAAM", DisableStorage = "True";		
		}
		
		unit<uint32> Read_2019
		:	StorageName     = "%RSLDataDir%/RegioIndelingen/wijk_2019.shp"
		,	StorageType     = "gdal.vect"
		,	StorageReadOnly = "True"
		{
			attribute<rdc_meter>    geometry (polygon);
		}
		
		unit<uint32>  Make_2019 := Read_2019
		, StorageName = "%LocalDataDir%/RSopen/Basedata/RegioIndelingen/wijk_2019.fss"
		{
			attribute<rdc_meter> geometry (poly) := Read_2019/geometry;
			attribute<string>    WK_NAAM         := Read_2019/WK_NAAM;
			attribute<string>    WK_CODE         := Read_2019/WK_CODE;
			attribute<string>    GM_NAAM         := Read_2019/GM_NAAM;
			attribute<string>    Water           := Read_2019/Water;
			
			parameter<string> Generate := 'Ready', ExplicitSuppliers = "geometry;WK_NAAM;WK_CODE;GM_NAAM;Water", DisableStorage = "True";		
		}
	}
	
	container Buurt
	{
		parameter<string> Generate := Make_2015/Generate + Make_2019/Generate + Make_2021/Generate;
		
		unit<uint32> Read_2015
		:	StorageName     = "%RSLDataDir%/RegioIndelingen/buurt_2015.shp"
		,	StorageType     = "gdal.vect"
		,	StorageReadOnly = "True"
		{
			attribute<rdc_meter> geometry (polygon);
		}
		
		unit<uint32>  Make_2015 := Read_2015
		, StorageName = "%LocalDataDir%/RSopen/Basedata/RegioIndelingen/buurt_2015.fss"
		{
			attribute<rdc_meter> geometry (poly) := Read_2015/geometry;
			attribute<string>    BU_NAAM         := Read_2015/BU_NAAM;
			attribute<string>    BU_CODE         := Read_2015/BU_CODE;
			
			parameter<string> Generate := 'Ready', ExplicitSuppliers = "geometry;BU_NAAM;BU_CODE", DisableStorage = "True";		
		}
		
		unit<uint32> Read_2019
		:	StorageName     = "%RSLDataDir%/RegioIndelingen/buurt_2019.shp"
		,	StorageType     = "gdal.vect"
		,	StorageReadOnly = "True"
		{
			attribute<rdc_meter>    geometry (polygon);
		}
		
		unit<uint32>  Make_2019 := Read_2019
		, StorageName = "%LocalDataDir%/RSopen/Basedata/RegioIndelingen/buurt_2019.fss"
		{
			attribute<rdc_meter> geometry (poly) := Read_2019/geometry;
			attribute<string>    BU_NAAM         := Read_2019/BU_NAAM;
			attribute<string>    BU_CODE         := Read_2019/BU_CODE;
			attribute<string>    Water           := Read_2019/Water;
			
			parameter<string> Generate := 'Ready', ExplicitSuppliers = "geometry;BU_NAAM;BU_CODE;Water", DisableStorage = "True";		
		}
		
		unit<uint32> Read_2021
		:	StorageName     = "%RSLDataDir%/RegioIndelingen/buurt_2021_v1.shp"
		,	StorageType     = "gdal.vect"
		,	StorageReadOnly = "True"
		{
			attribute<rdc_meter>    geometry (polygon);
		}
		
		unit<uint32>  Make_2021 := Read_2021
		, StorageName = "%LocalDataDir%/RSopen/Basedata/RegioIndelingen/buurt_2021.fss"
		{
			attribute<rdc_meter> geometry (poly) := Read_2021/geometry;
			attribute<string>    BU_NAAM         := Read_2021/BU_NAAM;
			attribute<string>    BU_CODE         := Read_2021/BU_CODE;
			attribute<string>    Water           := Read_2021/H2O;
			
			parameter<string> Generate := 'Ready', ExplicitSuppliers = "geometry;BU_NAAM;BU_CODE;Water", DisableStorage = "True";		
		}
	}
	
	unit<uint32> Read_LMSSubzone_shp
	:	StorageName     = "%RSLDataDir%/RegioIndelingen/LMS_2011_versie_2012_12_13.shp"
	,	StorageType     = "gdal.vect"
	,	StorageReadOnly = "True"
	{
		attribute<rdc_meter> Geometry(poly);
	}
	
	unit<uint32>  Make_LMSSubzone := Read_LMSSubzone_shp
	, StorageName = "%LocalDataDir%/RSopen/Basedata/RegioIndelingen/LMS_2011.fss"
	{
		attribute<rdc_meter> Geometry (poly) := Read_LMSSubzone_shp/Geometry;
		attribute<int32>    ZONE_ID          := int32(Read_LMSSubzone_shp/ZONE_ID);
		attribute<int32>    GEM2011          := int32(Read_LMSSubzone_shp/GEM2011);
		attribute<string>   GEM_NAAM         := Read_LMSSubzone_shp/GEM_NAAM;
		attribute<uint32>   LMSSUB           := uint32(Read_LMSSubzone_shp/LMSSUB);
		attribute<uint32>   LMSSUB2004       := uint32(Read_LMSSubzone_shp/LMSSUB2004);
		attribute<uint8>    LAND             := uint8 (Read_LMSSubzone_shp/LAND);
		
		parameter<string> Generate := 'Ready', ExplicitSuppliers = "geometry;ZONE_ID;GEM2011;GEM_NAAM;LMSSUB;LMSSUB2004;LAND", DisableStorage = "True";		
	}
	
	unit<uint32> Read_Grootstedelijke_agglomeraties_shp
	:	StorageName     = "%RSLDataDir%/RegioIndelingen/CBS_grootstedelijke_agglomeratie_2012.shp"
	,	StorageType     = "gdal.vect"
	,	StorageReadOnly = "True"
	{
		attribute<rdc_meter>  geometry  (polygon);
		attribute<string>     label := statnaam;
	}
	
	unit<uint32>  Make_Grootstedelijke_agglomeraties := Read_Grootstedelijke_agglomeraties_shp
	, StorageName = "%LocalDataDir%/RSopen/Basedata/RegioIndelingen/CBS_grootstedelijke_agglomeratie_2012.fss"
	{
		attribute<rdc_meter> geometry (poly) := Read_Grootstedelijke_agglomeraties_shp/geometry;
		attribute<string>    statnaam        := Read_Grootstedelijke_agglomeraties_shp/statnaam;
		
		parameter<string> Generate := 'Ready', ExplicitSuppliers = "geometry;statnaam", DisableStorage = "True";		
	}
	
	unit<uint32> Read_Bevolkingskern_2011_shp
	:	StorageName     = "%RSLDataDir%/RegioIndelingen/bevolkingskern_2011.shp"
	,	StorageType     = "gdal.vect"
	,	StorageReadOnly = "True"
	{
		attribute<rdc_meter> geometry (polygon);
	}
	
	unit<uint32>  Make_Bevolkingskern_2011 := Read_Bevolkingskern_2011_shp
	, StorageName = "%LocalDataDir%/RSopen/Basedata/RegioIndelingen/bevolkingskern_2011.fss"
	{
		attribute<rdc_meter> geometry (poly) := Read_Bevolkingskern_2011_shp/geometry;
		attribute<float64>   BEV11TOT        := float64(Read_Bevolkingskern_2011_shp/BEV11TOT);
		
		parameter<string> Generate := 'Ready', ExplicitSuppliers = "geometry;BEV11TOT", DisableStorage = "True";		
	}
}