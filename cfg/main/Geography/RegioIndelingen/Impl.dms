container Impl
{
	
	// unit<uint32> NL_BoundingBox : nrofrows = 1
	// {
		// parameter<ipoint>  union_gemeente      (poly) := union_polygon(ipolygon(CBS/y2022/Gemeente/geometry));
		// parameter<ipoint>  BoudingBox_minus_NL (poly) := union_polygon - union_gemeente;
		
		// parameter<meter> x_min  := 0[meter];
		// parameter<meter> x_max  := 280000[meter]; 
		// parameter<meter> y_min  := 300000[meter];
		// parameter<meter> y_max  := 625000[meter];
		
		// parameter<rdc_meter> top_left     := point(y_max, x_min, rdc_meter);
		// parameter<rdc_meter> top_right    := point(y_max, x_max, rdc_meter);
		// parameter<rdc_meter> bottom_left  := point(y_min, x_min, rdc_meter);
		// parameter<rdc_meter> bottom_right := point(y_min, x_max, rdc_meter);
		
		// unit<uint32>              point_set    : nrofrows = 5
		// {
			// attribute<rdc_meter>      point        := union_data(., top_left, top_right, bottom_right, bottom_left, top_left);
			// attribute<NL_BoundingBox> sequence_rel := const(0, .);
			// attribute<.>              ordinal      := id(.);
		// }
		
		// attribute<rdc_meter> polygon (poly)      := points2sequence(point_set/point, point_set/sequence_rel, point_set/ordinal);
		// parameter<ipoint>    union_polygon (poly) := union_polygon(ipolygon(polygon));
	// }
	
	unit<uint32> Read_GemeenteRES_2018_gdb
	:	StorageName     = "%RSLDataDir%/RegioIndelingen/Gemeentegrenzen_2018_A1_PBL_RES.gdb"
	,	StorageType     = "gdal.vect"
	,	StorageReadOnly = "True"
	{
		attribute<rdc_meter>          Geometry (poly);
		attribute<CBS/y2018/gemeente> gemeente_rel := rlookup(uint32(gemcode), CBS/y2018/gemeente/gem_nr);
		attribute<RESRegio>           RESregio_rel := rlookup(RESnaam, RESRegio/name);
	}
	
	// unit<uint32> Read_Provincie_GML
	// :	StorageName     = "%RSLDataDir%/RegioIndelingen/Provincie_2019.gml"
	// ,	StorageType     = "gdal.vect"
	// ,	StorageReadOnly = "True"
	// {
		// attribute<rdc_meter> geometry (poly);
		// attribute<string>    ProvincieNaam;
		// attribute<string>    label           := ProvincieNaam;
		// attribute<string>    name            := replace(Label, '-', '_');
		// attribute<string>    afko            : ['FR', 'NH', 'GE', 'DR', 'UT', 'LI', 'FL', 'ZE', 'NB', 'ZH', 'OV', 'GR'];
	// }
	
	// unit<uint32> Make_Provincie := union_unit(impl/NL_BoundingBox/OutsideNL, Read_Provincie_GML)
	// , StorageName = "%LocalDataDir%/RSOpen/Basedata/RegioIndelingen/provincie_2019.fss"
	// {
		// attribute<rdc_meter> Geometry (poly) := union_data(., impl/NL_BoundingBox/OutsideNL/geometry, Read_Provincie_GML/geometry);
		// attribute<String>    Label           := union_data(., const('Buitengebied', impl/NL_BoundingBox/OutsideNL), Read_Provincie_GML/Label);
		// attribute<string>    name            := union_data(., const('Buitengebied', impl/NL_BoundingBox/OutsideNL), Read_Provincie_GML/name);
		// attribute<string>    afko            := union_data(., const('', impl/NL_BoundingBox/OutsideNL), Read_Provincie_GML/afko);
		
		// parameter<string> Generate := 'Ready', ExplicitSuppliers = "Geometry;Label;name;afko", DisableStorage = "True";
	// }
	
	// unit<uint32>  Read_Corop_SHP
	// : StorageName = "%RSLDataDir%/RegioIndelingen/COROP_2020.shp"
	// , StorageReadOnly = "True"
	// , StorageType = "gdal.vect"
	// , DialogData  = "Geometry_rd"
	// , DialogType  = "Map"
	// {
		// attribute<rdc_meter> Geometry    (poly);
		// attribute<rdc_meter> Geometry_rd (poly) := LatLongWgs842RD(Geometry, rdc_meter);
		// attribute<string>    label              := omschrijvi;
		// attribute<string>    name               := replace(omschrijvi, ' ', '_', '-', '_', '''', '', '/', '_', 'Zeeuws', 'Zeeuwsch','.','');
		// attribute<string>    numbered_name      := 'corop' + string(id(.));
	// }
	
	// unit<uint32>  Make_Corop := Read_Corop_SHP
	// , StorageName = "%LocalDataDir%/RSopen/Basedata/RegioIndelingen/COROP_2020.fss"
	// {
		// attribute<rdc_meter> Geometry (poly) := Read_Corop_SHP/Geometry_rd;
		
		// attribute<String>    Label           := Read_Corop_SHP/Label;
		// attribute<string>    name            := Read_Corop_SHP/name;
		// attribute<string>    numbered_name   := Read_Corop_SHP/numbered_name;
		
		// parameter<string> Generate := 'Ready', ExplicitSuppliers = "Geometry;Label;name;numbered_name", DisableStorage = "True";		
	// }
	
	// unit<uint32>  Read_Randstad_SHP
	// : StorageName = "%RSLDataDir%/RegioIndelingen/Randstad.shp"
	// , StorageReadOnly = "True"
	// , StorageType = "gdal.vect"
	// , DialogType  = "Map"
	// {
		// attribute<rdc_meter> Geometry    (poly);
		// attribute<int32>     NL_Randsta;
		// attribute<int32>     IsRandstad      := Read_Randstad_SHP/NL_Randsta;
	// }
	
	// unit<uint32> Read_NVM_2015_shp
	// :	StorageName     = "%RSLDataDir%/RegioIndelingen/nvmafdelingen_2015.shp"
	// ,	StorageType     = "gdal.vect"
	// ,	StorageReadOnly = "True"
	// {
		// attribute<rdc_meter> geometry (poly);
		// attribute<String>    Label           := afdeling;
	// }
	
	unit<uint32> Read_NVM_2011_shp
	:	StorageName     = "%RSLDataDir%/RegioIndelingen/NVM_2011.shp"
	,	StorageType     = "gdal.vect"
	,	StorageReadOnly = "True"
	, 	SyncMode = "None"
	{
		attribute<rdc_meter>    Geometry (poly);
		attribute<string>       nvmnaam;
		// attribute<String>       name  := replace(nvmnaam, '/', '_', '-', '_', ' ', '_','.','');
		attribute<String>       name  := AsItemName(nvmnaam);
		
		unit<uint32> ZonderBuitengebied := select_with_attr_by_cond(., id(.) > 0[.])
		{
			attribute<string>       label    := name;
			attribute<string>       uq_name  := name == 'Almere' ? 'Amsterdam' : name;
			attribute<uq>           uq_rel   := rlookup(uq_name, uq/name);
			attribute<rdc_meter>    centroid := centroid_or_mid(geometry);
			unit<uint32> uq := unique(uq_name)
			{
				attribute<string>    name := values;
				attribute<string>    label := name;
				attribute<ipoint>    geometry0 (polygon) := partitioned_union_polygon(ipolygon(../Geometry), ../uq_rel);
				attribute<rdc_meter> geometry  (polygon) := geometry0[rdc_meter];
			}
		}
	}

	unit<uint32> Read_LMSSubzone_shp
	:	StorageName     = "%RSLDataDir%/RegioIndelingen/LMS_2011_versie_2012_12_13.shp"
	,	StorageType     = "gdal.vect"
	,	StorageReadOnly = "True"
	{
		attribute<rdc_meter> Geometry(poly);
		attribute<int32>     ZONE_ID;
		attribute<int32>     GEM2011;
		attribute<uint32>    LMSSUB;
		attribute<uint32>    LMSSUB2004;
		attribute<uint8>     LAND;
	}
	
	unit<uint32> Read_Grootstedelijke_agglomeraties_shp
	:	StorageName     = "%RSLDataDir%/RegioIndelingen/CBS_grootstedelijke_agglomeratie_2012.shp"
	,	StorageType     = "gdal.vect"
	,	StorageReadOnly = "True"
	{
		attribute<rdc_meter>  geometry  (poly);
		attribute<string>     label := statnaam;
	}
	
	unit<uint32> Read_Bevolkingskern_2011_shp
	:	StorageName     = "%RSLDataDir%/RegioIndelingen/bevolkingskern_2011.shp"
	,	StorageType     = "gdal.vect"
	,	StorageReadOnly = "True"
	{
		attribute<rdc_meter> geometry (poly);
		attribute<float64>   Populatie        := float64(Read_Bevolkingskern_2011_shp/BEV11TOT);
	}
}