Template Create_GridDomain_T
{
	parameter<Float64> gridsize;
	parameter<Int32>   nr_cols := int32((x_max - x_min) / gridsize);
	parameter<Int32>   nr_rows := int32((y_max - y_min) / gridsize);
	
	unit<IPoint> domain :=
		range(
			 gridset(
				 rdc_meter
				,point_yx(-gridsize, gridsize, rdc_meter)
				,point_yx(y_max, x_min, rdc_meter)
				,ipoint
			)
			,point_yx(0i, 0i)
			,point_yx(nr_rows, nr_cols)
		),	DialogData = "rdc_meter"
	{
		parameter<Float64>              gridsize        := ../gridsize;
		parameter<Int32>                nr_cols         := ../nr_cols;
		attribute<rdc_meter>            point           := mapping(., rdc_meter) + point_yx(-0.5d * gridsize, 0.5d * gridsize, rdc_meter);
		unit<UInt32>                    id_key          := range(uint32, 0, uint32(#domain));
		attribute<UInt32>               id_rel          := value(uint32(PointRow(id(.))) * uint32(nr_cols) + uint32(PointCol(id(.))), id_key);
		
		attribute<rdc_meter> locatie := id(.)[rdc_meter];
		
		attribute<rdc_5m>               rdc_5m_rel      := mapping(., rdc_5m);
		attribute<rdc_10m>              rdc_10m_rel     := mapping(., rdc_10m);
		attribute<rdc_25m>              rdc_25m_rel     := mapping(., rdc_25m);
		attribute<rdc_100m>             rdc_100m_rel    := mapping(., rdc_100m);
		attribute<rdc_250m>             rdc_250m_rel    := mapping(., rdc_250m);
		attribute<rdc_500m>             rdc_500m_rel    := mapping(., rdc_500m);
		attribute<AdminDomain>          AdminDomain_rel := mapping(., AdminDomain);
		attribute<AllocDomain>          AllocDomain_rel := mapping(., AllocDomain);
		
		parameter<meter2>               NrMeter2PerCell := gridsize[meter] * gridsize[meter];
		parameter<ha>                   NrHaPerCell     := convert(NrMeter2PerCell, ha), IntegrityCheck = "This <= 25f", Descr = "Deze convert is nog wel eens fout gegaan. Dus zorg ervoor dat dit niet opeens 625 ipv 0.0625 ha per cell is.";
		parameter<km2>                  NrKm2PerCell    := NrMeter2PerCell[km2];
		attribute<Bool>                 IsStudyArea     := poly2grid(rdc_meter/geometry_base, .);
	}
	
	unit<uint64> points := select_with_org_rel(isDefined(domain/point) && domain/IsStudyArea)
	{
		attribute<rdc_meter>            geometry  := org_rel -> point;
		attribute<Float64>              x         := PointCol(geometry);
		attribute<Float64>              y         := PointRow(geometry);
		attribute<domain>               grid_rel  := geometry[domain];	
	}
}