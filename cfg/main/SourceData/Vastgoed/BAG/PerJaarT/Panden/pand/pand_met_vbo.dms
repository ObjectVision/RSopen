unit<uint32> pand_met_vbo := select_with_org_rel(pand_met_vbo_selection_condition)
{
	attribute<rdc_mm> geometry_mm (polygon) := org_rel -> pand/geometry_mm;
	attribute<rdc_meter>  geometry    (polygon) := geometry_mm[rdc_meter];
	attribute<string>     identificatie         := org_rel -> identificatie;
	attribute<string>     pand_id               := identificatie;
	attribute<int16>      bouwjaar              := org_rel -> bouwjaar;
	attribute<cm>         pand_hoogte           := org_rel -> pand_hoogte;
	attribute<uint32>     count_vbo_pand_woon   := org_rel -> count_vbo_pand_woon;
	attribute<WP>         WP_rel                := org_rel -> WP_rel;
	attribute<WP4>        WP4_rel               := org_rel -> WP4_rel;
	
	attribute<.> pand_vbo_rel           (vbo_domein) := rlookup(vbo_domein/pand_id, identificatie);
	attribute<.> pand_vbo_woon_rel (vbo_woon_domein) := rlookup(vbo_woon_domein/pand_id, identificatie);

	attribute<rdc_meter> pand_centroid                                 := centroid_or_mid(geometry);
	attribute<int16>     bouwjaar_trunc                                := bouwjaar < 1000s || bouwjaar > BAG_jaar[int16] ? (0/0)[int16] : bouwjaar < 1600s ? 1600s : bouwjaar;
	attribute<uint32>    monumentale_per_AllocDomain     (AllocDomain) := count(bouwjaar_trunc <= 1900s ? bouwjaar_trunc : (0/0)[int16], AllocDomain_rel);
	attribute<uint32>    count_pand_woon_per_AllocDomain (AllocDomain) := sum(Fractie_VBOOpp_per_vbo_functie/ArgMax == /Classifications/Vastgoed/vbo_gebruiksdoel_plus/V/woon
		? 1 : 0, AllocDomain_rel);
	
	attribute<uint32>          count_pand_woon_AllocDomain_perPand := count_pand_woon_per_AllocDomain[AllocDomain_rel];
	attribute<m2PandFootprint> footprint                           := org_rel -> footprint;
	attribute<m2PandFootprint> footprint_perHa (AllocDomain)       := sum(footprint, AllocDomain_rel);
	parameter<m2PandFootprint> total_footprint                     := sum(footprint);
	attribute<m2PandFootprint> Avg_footprint_perWoonvbo            := footprint / float32(count_vbo_pand_woon);
	attribute<float32>         vbo_in_pand_div_opp                 := count_vbo_pand_woon[float32] / footprint[float32];
	attribute<bool>            IsLogistiekFunctie                  := IsDefined(rlookup(identificatie, /SourceData/Vastgoed/Logistiek_panden/Logistics/BAG_id));
	attribute<m2_pand>         pand_vbo_opp                        := (sum(vbo_domein/oppervlakte_trunc, pand_vbo_rel) * 1[verblijfsobject]) / 1[units/PandUnit];
	attribute<m2_pand>         pand_vbo_opp_woon                   := (sum(vbo_woon_domein/oppervlakte_trunc, pand_vbo_woon_rel) * 1[verblijfsobject]) / 1[units/PandUnit];
	attribute<AllocDomain>     AllocDomain_rel                     := pand_centroid[AllocDomain];
	
	container CountFuncties := for_each_nedv(vbo_gebruiksdoel/name, 'sum(vbo_domein/gebruiksdoelen/'+vbo_gebruiksdoel/name+' ? 1 : 0, pand_vbo_rel)', ., uint32)
	{
		attribute<uint32> total (..) := ='add('+AsItemList(vbo_gebruiksdoel/name)+')';
	}
	
	attribute</CaseParameters/Claims/WonenEnWerken/SrcRegio> SrcRegio_rel := point_in_polygon(pand_centroid, /CaseParameters/Claims/WonenEnWerken/SrcRegio/geometry);
	
	attribute<Buurt>     buurt_rel     := point_in_polygon(pand_centroid, Buurt/geometry);
	attribute<NVM>       nvm_rel       := point_in_polygon(pand_centroid, nvm/geometry);
	attribute<Corop>     Corop_rel     := point_in_polygon(pand_centroid, Corop/geometry);
	attribute<Provincie> Provincie_rel := point_in_polygon(pand_centroid, Provincie/geometry);
	attribute<NL>        NL_rel        := point_in_polygon(pand_centroid, NL/geometry);
	
	container Sum_VboOpp_inPand_per_vbo_functie :=
		for_each_nedv(
			vbo_gebruiksdoel_plus/name
			, 'sum(vbo_domein/gebruiksdoelen_cbs/'+vbo_gebruiksdoel_plus/name+' ? vbo_domein/oppervlakte_trunc : (0/0)[m2_Vbo], pand_vbo_rel) * 1[verblijfsobject]'
			, pand_met_vbo
			, meter2
		)
	{
		attribute<meter2> Totaal (pand_met_vbo) := ='add('+AsList(vbo_gebruiksdoel_plus/name,',')+')';
	}
	
	container Count_vbos_inPand_per_vbo_functie :=
		for_each_nedv(
			vbo_gebruiksdoel_plus/name
			, 'sum(vbo_domein/gebruiksdoelen_cbs/'+vbo_gebruiksdoel_plus/name+' ? 1 : 0, pand_vbo_rel)'
			, pand_met_vbo
			, uint32
		)
	{
		attribute<uint32> Totaal (pand_met_vbo) := ='add('+AsList(vbo_gebruiksdoel_plus/name,',')+')';
	}
	
	container Fractie_VBOOpp_per_vbo_functie :=
		for_each_nedv(
			vbo_gebruiksdoel_plus/name
			,'(sum(vbo_domein/gebruiksdoelen_cbs/'+vbo_gebruiksdoel_plus/name+' ? vbo_domein/oppervlakte_trunc : (0/0)[m2_Vbo], pand_vbo_rel) * 1[verblijfsobject]) / (pand_vbo_opp * 1[units/pandUnit])'
			, pand_met_vbo
			, float32
		)
	{
		attribute<vbo_gebruiksdoel_plus> ArgMax (..) := ='argmax_alldefined('+AsItemList(vbo_gebruiksdoel_plus/name)+')[vbo_gebruiksdoel_plus]';
	}
	
	container Footprint_VBOOpp_per_vbo_functie0 :=
		for_each_nedv(
			vbo_gebruiksdoel_plus/name
			,'((sum(vbo_domein/gebruiksdoelen_cbs/'+vbo_gebruiksdoel_plus/name+' ? vbo_domein/oppervlakte_trunc : (0/0)[m2_vbo], pand_vbo_rel) * 1[units/verblijfsobject]) / (pand_vbo_opp * 1[units/pandUnit])) * footprint'
			, pand_met_vbo
			, m2PandFootprint
		)
	{
		attribute<m2PandFootprint> Logistiek       (pand_met_vbo) := IsLogistiekFunctie ? footprint : 0[m2PandFootprint];
		attribute<m2PandFootprint> Utiliteit_Combi (pand_met_vbo) := ((sum(vbo_domein/gebruiksdoelen_cbs/Utiliteit_Combi ? vbo_domein/oppervlakte_trunc : (0/0)[m2_vbo], pand_vbo_rel) * 1[units/verblijfsobject]) / (pand_vbo_opp * 1[units/pandUnit])) * footprint;
	}
	
	container Footprint_VBOOpp_per_vbo_functie :=
		for_each_nedv(
			vbo_gebruiksdoel/name
			, 'Footprint_VBOOpp_per_vbo_functie0/logistiek > 0[m2PandFootprint] ? 0[m2PandFootprint] : Footprint_VBOOpp_per_vbo_functie0/'+vbo_gebruiksdoel/name
			, pand_met_vbo
			, m2PandFootprint
		)
	{
		attribute<m2PandFootprint> Logistiek       (pand_met_vbo) := Footprint_VBOOpp_per_vbo_functie0/Logistiek;
		attribute<m2PandFootprint> Utiliteit_Combi (pand_met_vbo) := Footprint_VBOOpp_per_vbo_functie0/Utiliteit_Combi;
		attribute<vbo_gebruiksdoel_plus> ArgMax    (pand_met_vbo) := ='!IsDefined(bijeenkomst) ? (0/0)[vbo_gebruiksdoel_plus] : ArgMax('+AsItemList(vbo_gebruiksdoel_plus/name)+')[vbo_gebruiksdoel_plus]';
	}
	
	container Footprint_VBOOpp_per_vbo_functie_ha :=
		for_each_nedv(
			vbo_gebruiksdoel_plus/name
			,'sum(Footprint_VBOOpp_per_vbo_functie/'+vbo_gebruiksdoel_plus/name+', AllocDomain_rel)'
			, AllocDomain
			, m2PandFootprint
		);
	
	container Totaal_Footprint_VBOOpp_per_vbo_functie_perCorop :=
		for_each_nedv(
			vbo_gebruiksdoel/name
			,'sum(Footprint_VBOOpp_per_vbo_functie/'+vbo_gebruiksdoel/name+', corop_rel)'
			, Corop
			, m2PandFootprint
		);
	
	container Totaal_Footprint_VBOOpp_per_vbo_functie :=
		for_each_nedv(
			vbo_gebruiksdoel/name
			,'sum(Footprint_VBOOpp_per_vbo_functie/'+vbo_gebruiksdoel/name+')'
			, void
			, m2PandFootprint
		);
	
	container Totaal_Footprint_VBOOpp_per_vbo_functie_plus :=
		for_each_nedv(
			vbo_gebruiksdoel_plus/name
			,'sum(Footprint_VBOOpp_per_vbo_functie/'+vbo_gebruiksdoel_plus/name+')'
			, void
			, m2PandFootprint
		)
	{
		parameter<m2PandFootprint> Totaal := ='add('+AsList(vbo_gebruiksdoel_plus/name,',')+')';
	}
	
	unit<uint32> Verblijfsrecreatie := /SourceData/Grondgebruik/VerblijfsrecreatieBuffer;
	
	attribute<bool> LigtInCBSVerblijfsrecreatie := IsDefined(point_in_polygon(pand_centroid, Verblijfsrecreatie/geometry_rd));
}