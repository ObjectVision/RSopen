container Y2017 // Bron: CBS. Peildatum 1 jan 2016 (bestand is 1 jan 2017)
{
	container Gemeente := T('Gem'  , 'GM', RegioIndelingen/CBS/y2016/Gemeente);
	container Wijk     := T('Wijk' , 'WK', RegioIndelingen/CBS/y2016/wijk);
	container Buurt    := T('Buurt', 'BU', RegioIndelingen/CBS/y2016/buurt);
	
	container per_WOZBb :=
		for_each_nedv(
			WOZBbg/name,
			'MakeDefined(MakeDefined(Buurt/domain/Nul2Undefined/'+WOZBbg/name+', Wijk/domain/Nul2Undefined/'+WOZBbg/name+'), Gemeente/domain/Nul2Undefined/'+WOZBbg/name+')',
			AdminDomain, Eur_m2
		)
	{
		attribute<Eur_m2> max_elem (AdminDomain) := = 'max_elem('+AsItemList(WOZBbg/name)+')';
	}
	
	attribute<Eur_m2> Gegeven_BBG (AdminDomain) := =
		'merge('
			'value(CBS2010Klasse/WOZbbg_rel[SourceData/Grondgebruik/BBG/dominant/per_AdminDomain/Y2017], uint16),'
			'Eur_m2,'+
			AsItemList('per_WOZBb/'+WOZBbg/name)+
		')';
	
	container BAG := SourceData/Vastgoed/BAG/PerJaar/Y2018;
	
	attribute<Eur> Make_Per_vob (BAG/VBO) := Gegeven_BBG[BAG/VBO/AdminDomain_rel] * (BAG/VBO/oppervlakte_trunc * 1[verblijfsobject]), StorageName = '%RSo_DataDir%/Vastgoed/WOZ/WOZ2017.fss';
	attribute<Eur> Per_vob (BAG/VBO) : StorageName = '%RSo_DataDir%/Vastgoed/WOZ/WOZ2017.fss';
	attribute<Eur> Mean_AdminDomain (AdminDomain) := mean(Per_vob, BAG/VBO/AdminDomain_rel);
	attribute<Classifications/Vastgoed/WOZ> PerWOZKlasse (AdminDomain) := classify(Mean_AdminDomain, Classifications/Vastgoed/WOZ/ClassBreaks);
	
	container Niet_woningen
	{
		attribute<Eur> Per_vob        (BAG/VBO/Per_Gebruiksdoel/niet_woon/select) := Gegeven_BBG[BAG/VBO/Per_Gebruiksdoel/niet_woon/select/AdminDomain_rel] * (BAG/VBO/Per_Gebruiksdoel/niet_woon/select/oppervlakte_trunc * 1[verblijfsobject]);
		attribute<Eur> per_AdminDomain (AdminDomain) := sum(Per_vob, BAG/VBO/Per_Gebruiksdoel/niet_woon/select/AdminDomain_rel);
		attribute<Eur> per_AllocDomain (AllocDomain) := sum(Per_vob, BAG/VBO/Per_Gebruiksdoel/niet_woon/select/AllocDomain_rel);
	}
	
	Template T
	{
		//
		parameter<string> SrcRef;
		parameter<string> CodeRef;
		unit<uint32> RegionK;
		//
		
		unit<uint32> Domain
		:  StorageName = "= '%RSo_DataDir%/Vastgoed/WOZ/190215_'+ SrcRef +'_woz.csv'"
		,  StorageType = "gdal.vect"
		,  StorageReadOnly = "True"
		{
			attribute<string> r2017;
			attribute<string> bg2015_groep;
			attribute<string> wozm2_mean;
			attribute<string> wozm2_sd;
			attribute<string> aantalobjecten;
			
			attribute<string> R_CODE := CodeRef+r2017;
			
			// attribute<RegionK> Region_rel := = 'rjoin(R_CODE, RegionK/'+CodeRef+'_CODE, id(RegionK))';
			attribute<RegionK> Region_rel := = 'rjoin(R_CODE, RegionK/statcode, id(RegionK))';
			attribute<WOZBbg> WOZbbg_rel := rjoin(uint8(bg2015_groep), WOZBbg/EK_rel, id(WOZBbg));
			
			attribute<Eur_m2> mean := wozm2_mean[Eur_m2];
			attribute<Eur_m2> sd := wozm2_sd[Eur_m2];
			attribute<int32> n := aantalobjecten[int32];
			
			container per_WOZBb :=
				for_each_nedv(
					WOZBbg/name,
					'sum('
						'(Domain/mean + Domain/sd) * '+string(WOZBbg/growth_factor)+'[float32] * float32(Domain/WOZBbg_rel == '+string(id(WOZBbg))+'[WOZBbg]),'
						'Domain/Region_rel'
					')[RegionK/Per_AdminDomain]',
					Geography/AdminDomain, Eur_m2
				)
			{
				attribute<Eur_m2> max_elem (AdminDomain) := = 'max_elem('+AsItemList(WOZBbg/name)+')';
			}
			
			container Nul2Undefined :=
				for_each_nedv(
					WOZBbg/name,
					'per_WOZBb/'+WOZBbg/name+' == 0[Eur_m2] ? (0/0)[Eur_m2] : per_WOZBb/'+WOZBbg/name,
					Geography/AdminDomain, Eur_m2
				);
		}
	}
}