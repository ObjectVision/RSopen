// code van: https://github.com/RuudvandenWijngaart/VestaDV/blob/SAWEC-WP5/model/RuimtelijkeData/EigendomStaat.dms  (Hestia) 15 oktober 2021 a1ef8a9cbd37bc189e5302ba129b020f3313e223
// aanpassingen aan units en verwijzing naar BAG, opnemen metadata en met gdal2.vec inlezen
// wegsterren niet relevante code maar nog wel laten staan

container EigendomStaat: url= "%RSLDataDir%/Vastgoed/EigendomStaat/20210915_documentatie_eigendom.pdf"
{
	// inlezen puntenbestand woningcorporaties
	unit<uint32> Corporatiebezit_data
	:   StorageName     = "%RSLDataDir%/Vastgoed/EigendomStaat/CorporatieBezit.shp"
	,   StorageType     = "gdal2.vect"
	,	DialogType      = "Map"
	,	StorageReadOnly = "True"
	,	Source          = "https://pbl.sliksvn.com/vesta/SD51/EigendomStaat revision 640"
	{
		attribute<string> Label := 'C_'+string(OBJECTID), DialogType = "LabelText";
		attribute<rdc_meter> geometry;
		attribute<Classifications/Vastgoed/Eigendom> Eigendom_rel := const(Classifications/Vastgoed/Eigendom/V/WoonCorp,.); //eigendomstatus als attribuut
	}
	
	// inlezen puntenbestand particuliere huur
	unit<uint32> Particulierehuur_data
	:   StorageName     = "%RSLDataDir%/Vastgoed/EigendomStaat/ParticuliereHuur.shp"
	,   StorageType     = "gdal2.vect"
	,	DialogType      = "Map"
	,	StorageReadOnly = "True"
	,	Source          = "https://pbl.sliksvn.com/vesta/SD51/EigendomStaat revision 640"
	{
		attribute<string> Label := 'H_'+string(OBJECTID);
		attribute<rdc_meter> geometry;
		attribute<Classifications/vastgoed/Eigendom> Eigendom_rel := const(Classifications/vastgoed/Eigendom/V/PartHuur,.); //eigendomstatus als attribuut
	}
	
	//samenvoegen bovenstaande puntenbestanden tot gezamenlijke entiteit
	unit<uint32> EigendomStaat_data := union_unit(Corporatiebezit_data, Particulierehuur_data)
	{
		attribute<string> Label := union_data(., Corporatiebezit_data/Label, Particulierehuur_data/Label);
		attribute<rdc_meter> geometry := union_data(., Corporatiebezit_data/geometry, Particulierehuur_data/geometry);
		attribute<Classifications/Vastgoed/Eigendom> Eigendom_rel := union_data(., Corporatiebezit_data/Eigendom_rel, Particulierehuur_data/Eigendom_rel);
		
		// ruimtelijke matching om bijbehorend BAG pand per punt te bepalen
		attribute<pand> Pand_rel := point_in_polygon(geometry, pand/Geometry);
	}
	
	//afgeleide attributen vastgesteld per BAG pand
	unit<uint32> pand := ='SourceData/Vastgoed/BAG/PerJaar/Y'+string(ModelParameters/Model_Startyear)+'/panden/pand'
	{
		attribute<rdc_meter> Geometry (poly) := ='SourceData/Vastgoed/BAG/PerJaar/Y'+string(ModelParameters/Model_Startyear)+'/panden/pand/Geometry';
		attribute<uint32> count_vbo_pand_woon := ='SourceData/Vastgoed/BAG/PerJaar/Y'+string(ModelParameters/Model_Startyear)+'/panden/pand/count_vbo_pand_woon';
		attribute<meter2> VBOopp_inPand_Eengezins := ='SourceData/Vastgoed/BAG/PerJaar/Y'+string(ModelParameters/Model_Startyear)+'/panden/pand/VBOopp_inPand_perWP2/Eengezins';
		attribute<meter2> VBOopp_inPand_Meergezins := ='SourceData/Vastgoed/BAG/PerJaar/Y'+string(ModelParameters/Model_Startyear)+'/panden/pand/VBOopp_inPand_perWP2/Meergezins';
		attribute<meter2> VBOopp_inPand_Vrijstaand := ='SourceData/Vastgoed/BAG/PerJaar/Y'+string(ModelParameters/Model_Startyear)+'/panden/pand/VBOopp_inPand_perWP4/Vrijstaand';
		attribute<meter2> VBOopp_inPand_Twee_onder_1_kap := ='SourceData/Vastgoed/BAG/PerJaar/Y'+string(ModelParameters/Model_Startyear)+'/panden/pand/VBOopp_inPand_perWP4/Twee_onder_1_kap';
		attribute<meter2> VBOopp_inPand_Rijtjeswoning := ='SourceData/Vastgoed/BAG/PerJaar/Y'+string(ModelParameters/Model_Startyear)+'/panden/pand/VBOopp_inPand_perWP4/Rijtjeswoning';
		attribute<meter2> VBOopp_inPand_Appartement := ='SourceData/Vastgoed/BAG/PerJaar/Y'+string(ModelParameters/Model_Startyear)+'/panden/pand/VBOopp_inPand_perWP4/Appartement';
		attribute<WP2> WP2_rel := ='SourceData/Vastgoed/BAG/PerJaar/Y'+string(ModelParameters/Model_Startyear)+'/panden/pand/WP2_rel';
		attribute<WP4> WP4_rel := ='SourceData/Vastgoed/BAG/PerJaar/Y'+string(ModelParameters/Model_Startyear)+'/panden/pand/WP4_rel';
		attribute<string> identificatie := ='SourceData/Vastgoed/BAG/PerJaar/Y'+string(ModelParameters/Model_Startyear)+'/panden/pand/identificatie';
		
		//eigendomstatus wordt afgeleid van gekoppelde puntattributen, uitgaande van meest voorkomende status. Indien onbekend wordt koop verondersteld.
		attribute<Classifications/Vastgoed/Eigendom> Eigendom_rel := makedefined(modus(EigendomStaat_data/Eigendom_rel, EigendomStaat_data/Pand_rel), Classifications/Vastgoed/Eigendom/V/Koop);
		
		attribute<bool> Is_VS_pand := Eigendom_rel != /Classifications/vastgoed/Eigendom/V/WoonCorp;
		
		unit<uint32> ToedelingsMatrix := ='SourceData/Vastgoed/BAG/PerJaar/Y'+string(ModelParameters/Model_Startyear)+'/panden/src/ToedelingsMatrix ';
	}
}