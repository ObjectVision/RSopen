container MateriaalStromen
{
	unit<uint8> MaterialIntensity_Historical
	: StorageName = "%RSo_DataDir%/Vastgoed/MateriaalStromen/Metabolic_MI_Data_20230720_Historical.csv"
	, StorageType = "gdal.vect"
	, StorageReadOnly = "TRUE"
	, Descr = "Ontvangen van Janneke van Oirschot - CML Leiden Universiteit op 19-07-2023"
	, using = "Classifications/MateriaalStromen"
	{
		attribute<BuildingTypes>  BT_rel       := rlookup(BuildingType, BuildingTypes/Label_nl);
		attribute<BouwjaarCohort> BJCohort_rel := rlookup(Cohort, BouwjaarCohort/Label_lookup);
		attribute<BT_BC>          BT_BC_rel    := rlookup(BuildingTypes/name[BT_rel] + '_' + BouwjaarCohort/name[BJCohort_rel], BT_BC/name);
		attribute<string>         BT_BC_name   := BT_BC/name[BT_BC_rel];
		
		container Per_BT_BC := 
			for_each_nedv(
				BT_BC/name
				,replace('union_data(Materialen,'+AsItemList('value('+Materialen/name+', kg_m2)[rlookup(BT_BC/V/@BTBC@,BT_BC_rel)]')+')', '@BTBC@', BT_BC/name)
				, Materialen
				, float32
			);
	}
	
	unit<uint8> MaterialIntensity_Scenarios 
	: StorageName = "%RSo_DataDir%/Vastgoed/MateriaalStromen/Metabolic_MI_Data_20230720_Scenarios.csv"
	, StorageType = "gdal.vect"
	, StorageReadOnly = "TRUE"
	, Descr = "Ontvangen van Janneke van Oirschot - CML Leiden Universiteit op 19-07-2023"
	, using = "Classifications/MateriaalStromen"
	{
		attribute<Scenarios>     Sc_rel     := rlookup(Scenario, Scenarios/Label);
		attribute<BuildingTypes> BT_rel     := rlookup(BuildingType, BuildingTypes/Label_nl);
		attribute<BT_Sc>         BT_Sc_rel  := rlookup(BuildingTypes/name[BT_rel] + '_' + Scenarios/name[Sc_rel], BT_Sc/name);
	}
	
	unit<uint8> Conventioneel := select_with_attr_by_cond(MaterialIntensity_Scenarios,MaterialIntensity_Scenarios/Sc_rel == Classifications/MateriaalStromen/Scenarios/v/Conventioneel)
	, using = "Classifications/MateriaalStromen"
	{
		container Per_MIBT := 
			for_each_nedv(
				BuildingTypes/name
				,replace('union_data(Materialen,'+AsItemList('value('+Materialen/name+', kg_m2)[rlookup(BuildingTypes/V/@BT@,BT_rel)]')+')', '@BT@', BuildingTypes/name)
				, Materialen
				, float32
			);
	}
	
	unit<uint8> Biobased := select_with_attr_by_cond(MaterialIntensity_Scenarios,MaterialIntensity_Scenarios/Sc_rel == Classifications/MateriaalStromen/Scenarios/v/Biobased)
	, using = "Classifications/MateriaalStromen"
	{
		container Per_MIBT := 
			for_each_nedv(
				BuildingTypes/name
				,replace('union_data(Materialen,'+AsItemList('value('+Materialen/name+', kg_m2)[rlookup(BuildingTypes/V/@BT@,BT_rel)]')+')', '@BT@', BuildingTypes/name)
				, Materialen
				, float32
			);
	}
	
	unit<uint8> Circulair := select_with_attr_by_cond(MaterialIntensity_Scenarios,MaterialIntensity_Scenarios/Sc_rel == Classifications/MateriaalStromen/Scenarios/v/Circulair)
	, using = "Classifications/MateriaalStromen"
	{
		container Per_MIBT := 
			for_each_nedv(
				BuildingTypes/name
				,replace('union_data(Materialen,'+AsItemList('value('+Materialen/name+', kg_m2)[rlookup(BuildingTypes/V/@BT@,BT_rel)]')+')', '@BT@', BuildingTypes/name)
				, Materialen
				, float32
			);
	}
}