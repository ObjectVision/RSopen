container BRT
{
	parameter<string> filedate := ModelParameters/BRT_file_date;
	
	unit<uint32> IsZee := subset(waterdeel/top10nl_waterdeel_vlak/label == 'Water vlak - droogvallend' || waterdeel/top10nl_waterdeel_vlak/label == 'Water vlak - zee')
	{
		attribute<rdc_meter> geometry (poly) := waterdeel/top10nl_waterdeel_vlak/geometry[nr_OrgEntity];
	}
	unit<uint32> IsWaterweg := subset(waterdeel/top10nl_waterdeel_vlak/label == 'Water vlak - waterloop hoofd' && waterdeel/top10nl_waterdeel_vlak/hoofdafwatering == 'ja')
	{
		attribute<rdc_meter> geometry (poly) := waterdeel/top10nl_waterdeel_vlak/geometry[nr_OrgEntity];
	}
	
	unit<uint32> IsHoofdweg := subset(Wegdeel/top10nl_wegdeel_vlak/awegnummer != '' || Wegdeel/top10nl_wegdeel_vlak/ewegnummer != '' || Wegdeel/top10nl_wegdeel_vlak/nwegnummer != '' || Wegdeel/top10nl_wegdeel_vlak/swegnummer != '')
	{
		attribute<rdc_meter> geometry (poly) := Wegdeel/top10nl_wegdeel_vlak/geometry[nr_OrgEntity];
	}
	
	container Spoorbaandeel
	:	StorageName     = "='%RSLDataDir%/Grondgebruik/BRT/'+filedate+'/top10nl_Spoorbaandeel.gpkg'"
	,	StorageType     = "gdal.vect"
	,	StorageReadOnly = "True"
	, 	DialogData      = "rdc_meter"
	, 	SyncMode        = "AllTables"
	, 	Descr           = "Download from PDOK"
	{
		unit<uint32> top10nl_spoorbaandeel_lijn 
		{
			attribute<string>                       label                := BRT_Classifications/label[visualisatiecode_rel];
			attribute<BRT_Classifications>          visualisatiecode_rel := rlookup(int32(visualisatiecode), BRT_Classifications/code);
			attribute<BRT_Classifications/label_uq> label_uq_rel         := rlookup(label, BRT_Classifications/label_uq/values);
			attribute<bool>                         IsElectrisch         := elektrificatie == 'ja';
		}
		
		container MaakLosseCat := for_each_ne(BRT_Classifications/label_uq/name, 'BRT_groepen_T(' +string(id(BRT_Classifications/label_uq))+ ',''spoorbaandeel'')');
	}
	
	container Wegdeel
	:	StorageName     = "='%RSLDataDir%/Grondgebruik/BRT/'+filedate+'/top10nl_wegdeel.gpkg'"
	,	StorageType     = "gdal.vect"
	,	StorageReadOnly = "True"
	, 	DialogData      = "rdc_meter"
	, 	SyncMode        = "AllTables"
	, 	Descr           = "Download from PDOK"
	{
		unit<uint32> top10nl_wegdeel_vlak
		{
			attribute<string>                       label                := BRT_Classifications/label[visualisatiecode_rel];
			attribute<BRT_Classifications>          visualisatiecode_rel := rlookup(int32(visualisatiecode), BRT_Classifications/code);
			attribute<BRT_Classifications/label_uq> label_uq_rel         := rlookup(label, BRT_Classifications/label_uq/values);
		}
		
		container MaakLosseCat :=
			for_each_ne(
				BRT_Classifications/label_uq/name
				, 'BRT_groepen_T(' +string(id(BRT_Classifications/label_uq))+ ',''wegdeel'')'
			);
	}
	
	container Waterdeel
	:	StorageName     = "='%RSLDataDir%/Grondgebruik/BRT/'+filedate+'/top10nl_Waterdeel.gpkg'"
	,	StorageType     = "gdal.vect"
	,	StorageReadOnly = "True"
	, 	DialogData      = "rdc_meter"
	, 	SyncMode        = "AllTables"
	, 	Descr           = "Download from PDOK"
	{
		unit<uint32> top10nl_Waterdeel_vlak
		{
			attribute<string>                       label                := BRT_Classifications/label[visualisatiecode_rel];
			attribute<BRT_Classifications>          visualisatiecode_rel := rlookup(int32(visualisatiecode), BRT_Classifications/code);
			attribute<BRT_Classifications/label_uq> label_uq_rel         := rlookup(label, BRT_Classifications/label_uq/values);
		}
		
		container MaakLosseCat :=
			for_each_ne(
				BRT_Classifications/label_uq/name
				, 'BRT_groepen_T(' +string(id(BRT_Classifications/label_uq))+ ',''waterdeel'')'
			);
	}
	
	container Terreinvlakken
	:	StorageName     = "='%RSLDataDir%/Grondgebruik/BRT/'+filedate+'/top10nl_Terrein.gpkg'"
	,	StorageType     = "gdal.vect"
	,	StorageReadOnly = "True"
	, 	DialogData      = "rdc_meter"
	, 	SyncMode        = "None" //AllTables None
	, 	Descr           = "Download from PDOK"
	{
		unit<uint32> top10nl_terrein_vlak
		{
			attribute<rdc_meter> geometry (poly);
			attribute<int64> visualisatiecode;
			attribute<string> typelandgebruik;
			attribute<string> voorkomen;
			
			attribute<string>                       label                := BRT_Classifications/label[visualisatiecode_rel];
			attribute<BRT_Classifications>          visualisatiecode_rel := rlookup(int32(visualisatiecode), BRT_Classifications/code);
			attribute<BRT_Classifications/label_uq> label_uq_rel         := rlookup(label, BRT_Classifications/label_uq/values);
			
			// attribute<RegioIndelingen/MRA8> MRA_rel := point_in_polygon(centroid_or_mid(geometry), /geography/RegioIndelingen/MRA8/geometry);
			
			// unit<uint32> Amsterdam := subset(IsDefined(MRA_rel)) 
			// {
				// attribute<rdc_meter>                    geometry (poly)      := ../geometry[nr_OrgEntity];
				// attribute<string>                       label                := ../label[nr_OrgEntity];
				// attribute<BRT_Classifications>          visualisatiecode_rel := ../visualisatiecode_rel[nr_OrgEntity];
				// attribute<BRT_Classifications/label_uq> label_uq_rel         := ../label_uq_rel[nr_OrgEntity];
				
				// attribute<string> typelandgebruik := ../typelandgebruik[nr_OrgEntity];
				// attribute<string> voorkomen       := ../voorkomen[nr_OrgEntity];
			// }
		}
		
		container MaakLosseCat :=
			for_each_ne(
				BRT_Classifications/label_uq/name
				, 'BRT_groepen_T(' +string(id(BRT_Classifications/label_uq))+ ',''terrein'')'
			);
	}
	
	Template BRT_groepen_T
	{
		//
		parameter<BRT_Classifications/label_uq> label_rel;
		parameter<string> type;
		//
	}
	
	container FunctioneelGebied
	:	StorageName     = "='%RSLDataDir%/Grondgebruik/BRT/'+filedate+'/top10nl_FunctioneelGebied.gpkg'"
	,	StorageType     = "gdal.vect"
	,	StorageReadOnly = "True"
	, 	DialogData      = "rdc_meter"
	, 	SyncMode        = "AllTables"
	, 	Descr           = "Download from PDOK"
	{
		unit<uint32> top10nl_functioneel_gebied_vlak 
		{
			attribute<string>                         label                := BRT_Classifications/label[visualisatiecode_rel];
			attribute<BRT_Classifications>            visualisatiecode_rel := rlookup(int32(visualisatiecode), BRT_Classifications/code);
			attribute<BRT_Classifications/label_uq>   label_uq_rel         := rlookup(label, BRT_Classifications/label_uq/values);
		}
		unit<uint32> top10nl_functioneel_gebied_multivlak  
		{
			attribute<string>                         label                := BRT_Classifications/label[visualisatiecode_rel];
			attribute<BRT_Classifications>            visualisatiecode_rel := rlookup(int32(visualisatiecode), BRT_Classifications/code);
			attribute<BRT_Classifications/label_uq>   label_uq_rel         := rlookup(label, BRT_Classifications/label_uq/values);
		}
		
		container MaakLosseCat :=
			for_each_ne(
				BRT_Classifications/label_uq/name
				, 'BRT_groepen(BRT_Classifications/label_uq/V/' + BRT_Classifications/label_uq/name + ')'
			);
			
		Template BRT_groepen
		{
			parameter<BRT_Classifications/label_uq> label_rel;
			
			unit<uint32> vlak := subset(top10nl_functioneel_gebied_vlak/label_uq_rel == label_rel)
			{
				attribute<rdc_meter> geometry (poly) := top10nl_functioneel_gebied_vlak/geometry[nr_OrgEntity];
			}
			unit<uint32> multi_vlak := subset(top10nl_functioneel_gebied_multivlak/label_uq_rel == label_rel)
			{
				attribute<rdc_meter> geometry (poly) := top10nl_functioneel_gebied_multivlak/geometry[nr_OrgEntity];
			}
			
			unit<uint32> combined_vlak := union_unit(vlak, multi_vlak)
			{
				attribute<rdc_meter> geometry (poly) := union_data(., vlak/geometry, multi_vlak/geometry);
			}
		}
	}
	
	unit<uint32> BRT_Classifications := Classifications/Grondgebruik/BRT/visualisatiecodes;
}