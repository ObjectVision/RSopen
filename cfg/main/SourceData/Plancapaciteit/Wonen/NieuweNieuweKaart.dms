container NieuweNieuweKaart
{
	unit<uint32> PlanStatusK := unique(Wonen/PlanStatus)
	{
		attribute<string> name_long := 'S'+replace(values, '/', '_', '-', '_', ' ', '_', '+', '');
		attribute<string> name      := id(.) == last(id(.)) ? 'ONB' : left(name_long, 3);
		attribute<string> Label     := name, DialogType = "LabelText";
		attribute<bool>   Hard    : [true, true, true, false, false, true, true, true, true, false, false, false, false, false, false, false, false, false, false];
	}
	
	unit<uint32> Read_Wonen_gdb
	: StorageName     = "%RSo_DataDir%/Beleid/Ruimte/NieuweNieuweKaart/NieuweKaart_wonen_aug2020.gdb"
	, StorageType     = "gdal.vect"
	, StorageReadOnly = "True"
	, Source          = "download website https://nieuwekaartnl.nl/_download/ november 2020. conversie van shp naar gdb in ArcGIS"
	, url             = "https://nieuwekaartnl.nl/_download/"
	, DialogData = "rdc_meter"
	{
		// attribute<rdc_meter> Geometry (poly);
	}
	
	// unit<uint32> Make_Wonen := Read_Wonen_gdb, StorageName = "%LocalDataDir%/RSopen/BaseData/Beleid/Ruimte/NieuweNieuweKaart/NieuweKaart_wonen_aug2020.fss"
	// {
		// attribute<rdc_meter> Geometry (poly) := Read_Wonen_gdb/Geometry;
		// attribute<string>    PlanStatus      := Read_Wonen_gdb/PlanStatus;
		// attribute<string>    Plantype        := Read_Wonen_gdb/Plantype;
		// attribute<float64>   Shape_Area      := Read_Wonen_gdb/Shape_Area;
		// attribute<float64>   Shape_Length    := Read_Wonen_gdb/Shape_Length;
		// attribute<int32>     Op20302050      := Read_Wonen_gdb/Op20302050;
		// attribute<int32>     OPLONB          := Read_Wonen_gdb/OPLONB;
		// attribute<int32>     OP2019          := Read_Wonen_gdb/OP2019;
		// attribute<int32>     OP202024        := Read_Wonen_gdb/OP202024;
		// attribute<int32>     Op202529        := Read_Wonen_gdb/Op202529;
		// attribute<int32>     AantalRest      := Read_Wonen_gdb/AantalRest;
		// attribute<int32>     WTYPGGB         := Read_Wonen_gdb/WTYPGGB;
		// attribute<int32>     WTYPAPP         := Read_Wonen_gdb/WTYPAPP;
		// attribute<int32>     WTYPONB         := Read_Wonen_gdb/WTYPONB;
	// }
	
	// unit<uint32> Wonen: StorageName = "%LocalDataDir%/RSopen/BaseData/Beleid/Ruimte/NieuweNieuweKaart/NieuweKaart_wonen_aug2020.fss", StorageReadOnly = "True"
	unit<uint32> Wonen := Read_Wonen_gdb
	{
		// attribute<rdc_meter> Geometry (poly);
		// attribute<string>    PlanStatus;
		// attribute<float64>   Shape_Area;
		// attribute<float64>   Shape_Length;
		
		attribute<bool>        Hard                  := PlanStatusK/Hard[PlanStatus_Rel];
		attribute<float64>     OperimetrischQuotient := (4d * pi() * Shape_Area) / (Shape_Length * Shape_Length); //\https://nl.wikipedia.org/wiki/Isoperimetrisch_quoti%C3%ABnt
		attribute<bool>        IsSymbool             := OperimetrischQuotient > 0.98;
		attribute<PlanStatusK> PlanStatus_Rel        := rlookup(PlanStatus, PlanStatusK/values);
		attribute<bool> IsAlGerealiseerd             := id(.) == 225[.] || id(.) == 226[.] || id(.) == 227[.] || id(.) == 228[.];
	}
	
	unit<uint32> Fijn := subset(!Wonen/IsSymbool && !Wonen/IsAlGerealiseerd), StorageReadOnly = "True"
	{
		attribute<rdc_meter> Geometry (polygon) := Wonen/Geometry[Nr_OrgEntity];
		attribute<bool>      Hard               := Wonen/Hard[Nr_OrgEntity];
		attribute<bool>      Zacht              := !Hard;
		attribute<bool>      IsPampus           := id(.) == 482[.]
		{
			attribute<bool> Per_AllocDomain (AllocDomain) := IsPampus[poly2grid(Geometry, AllocDomain)];
		}
	}
}