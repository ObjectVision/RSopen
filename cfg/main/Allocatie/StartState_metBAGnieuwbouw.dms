container StartState_metBAGnieuwbouw :=
	for_each_nedv(
		Sector/xSubsector/wo_Landbouw/name
		, 'max_elem(MakeDefined(StartState/'+Sector/xSubsector/wo_Landbouw/name+' + BaseData/StartState/BAG_nieuwbouw/'+Sector/xSubsector/wo_Landbouw/name+', 0f), 0f)'
		, CompactedAdminDomain
		, float32
	), using = "CaseClassifications/Vastgoed/OP"
	, URL = "https://github.com/ObjectVision/RSopen/wiki/Modelstructuur-op-hoofdlijnen#opnemen-meest-recente-ontwikkelingen"
	, Descr = "Aangezien het startjaar van de simulaties in het model vaak niet samenvalt met de meest actuele invoerdata die voorhanden is bij bronhouders, is er meer informatie over de meest recente ontwikkelingen nodig. 
				Voor de stand van wonen, werken en verblijfsrecreatie in het basisjaar wordt de BAG gebruikt, echter deze dataset wordt dagelijks ge√ºpdatet. Oftewel, recente ontwikkelingen tussen startjaar en de 
				datum van de meest recente BAG-versie in het model zijn al beschikbaar. Daarom worden tussen het startjaar en het eerste gemodelleerde zichtjaar deze recente bouwontwikkelingen meegenomen en 
				hoeven daarmee niet meer gealloceerd te worden in het model. Daarnaast zit er in BAG ook al status-informatie voor ontwikkelingen in de nabije toekomst, panden die waarvoor een bouwvergunning 
				verleend is, of de bouw al gestart is. Hiervan kan met grote zekerheid worden aangenomen dat deze gerealiseerd worden. Eveneens zijn er panden ofwel objecten die gesloopt zullen gaan worden. 
				Een pand waarvoor een sloopvergunning verleend is zal zeer waarschijnlijk in de nabije toekomst gesloopt gaan worden en deze ontwikkeling wordt dan ook meegenomen in het eerstvolgende zichtjaar. 
				Al deze informatie wordt toegepast in het eerste zichtjaar."
{
	// pas op: dat er nieuwbouw van bepaalde subsector heeft plaatsgevonden betekent niet dat betreffende subsector dominant is in een cel
	attribute<Sector/xSubsector> SubSector_rel_sw_case (CompactedAdminDomain) :=
		=#Sector/xSubsector/wo_Landbouw > 0  
			? 'switch(
				'+AsList('case(BaseData/StartState/BAG_nieuwbouw/'+Sector/xSubsector/wo_Landbouw/name+' > 0f, '+string(id(Sector/xSubsector/wo_Landbouw))+'[Sector/xSubsector])', ',')+'
				, (0f/0f)[Sector/xSubsector]
				)'
			: 'const(null_f, CompactedAdminDomain, Sector/xSubsector)';
		
	attribute<Sector/xSubsector> SubSector_rel (CompactedAdminDomain) :=
		= #Sector/xSubsector/wo_Landbouw > 0 //zijn er subsectoren die niet landbouw zijn?
			? 'ArgMax_ifdefined(
					'+AsList('value(BaseData/StartState/BAG_nieuwbouw/'+Sector/xSubsector/wo_Landbouw/name+', float32) != 0f 
								? value(BaseData/StartState/BAG_nieuwbouw/'+Sector/xSubsector/wo_Landbouw/name+', float32) 
								: null_f'
						, ',')+'
				)'
			: 'const(null_f, CompactedAdminDomain, Sector/xSubsector)', Descr = "Bepaal de initiele subsector_rel op basis van BAGnieuwbouw. Door de argmax in de stand te bepalen.";
	
	attribute<CaseClassifications/Vastgoed/OP> OP_rel (CompactedAdminDomain) := const(0b/0b, CompactedAdminDomain, CaseClassifications/Vastgoed/OP), Descr = "initialisatie attribute om later geupdatet te worden.";
	
	container PandFootprint :=
		for_each_nedv(
			Jobs6/name
			,'StartState/PandFootprint/'+Jobs6/name+' + BaseData/StartState/BAG_nieuwbouw/Pand_nieuwbouw/PerJobs6/'+Jobs6/name
			, CompactedAdminDomain
			, m2PandFootprint
		), Descr = "voor werk-subsector de pandfootprint uit de start situatie plus eventuele toevoegen uit BAGnieuwbouw.";
	
	container Wonen
	{
		attribute<Woning> Totaal (CompactedAdminDomain) := ='add('+AsItemList(Classifications/Vastgoed/WP2xVSSH/name)+')';
	}
	
	container Wind
	{
		attribute<Yr>        jaartal_ingebruikname (CompactedAdminDomain) := IsDefined(StartState/Wind/jaartal_ingebruikname) 
																				? StartState/Wind/jaartal_ingebruikname 
																				: BaseData/StartState/BAG_nieuwbouw/Wind/jaartal_ingebruikname;
	}
	
	container Landbouw := 
		for_each_nedv(
			LandbouwKlasses/name
			, 'const(null_f,CompactedAdminDomain,ha)'
			, CompactedAdminDomain
			, ha
		);
}