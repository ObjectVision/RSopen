////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Dit is RSOpen, de open source versie van het model RuimteScanner. Het scipt wordt uitgegeven onder GNU-GPL licentie.
//
// RSOpen is ontwikkeld door PBL Planbureau voor de Leefomgeving, i.s.m Object Vision B.V. en VU Vrije Universiteit Amsterdam.
// Opdrachtgever/ontwikkelaar PBL: Bart Rijken
// Contactpersoon/ontwikkelaar Object Vision B.V.: Jip Claassens (jclaassens@objectvision.nl)
// Contacpersoon PBL: Bas van Bemmel (Bas.vanBemmel@pbl.nl)
//
// Deze file specificeert de ModelParameters: Parameters die voor elk scenario en elke Variant hetzelfde zijn.
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

container Wind
{
	parameter<uint8>     NrOfIters_Wind                        := Default_NrOfIters, Descr = "Alleen relevant als Windpotentie_StempelAan == TRUE";
	parameter<bool>      Windpotentie_StempelAan               := TRUE, Descr = "Beschikbare locaties voor windturbines worden (her)berekend, o.b.v. de zgn. stempelprocedure (TRUE) danwel ingelezen uit eerder berekende bestanden (FALSE). Indien TRUE wordt de stempel genomen die het meeste aantal windmolen neer zet. Anders wordt het stempel grid met het Iterid nummer gepakt"; // 
	parameter<string>    Veldsituatie_Jaar                     := '2024', Descr = "Welk bestandsjaar voor de huidige veldsituatie van windturbines moet worden gehanteerd";
	parameter<Yr>        WindmolenAfschrijving                 := 20[Yr], Descr = "In hoeveel jaar wordt een windmolen afgeschreven. Dit impliceert dat een windmolen na zoveel jaar automatisch wordt afgebroken.", Source = "Renewable Energy Fact Sheet: Wind Turbines August 2013 832F13017 page 2", URL ="https://nepis.epa.gov/Exe/ZyNET.exe/P100IL8K.txt?ZyActionD=ZyDocument&Client=EPA&Index=2011%20Thru%202015&Docs=&Query=fact%20sheet%20wind%20turbine&Time=&EndTime=&SearchMethod=2&TocRestrict=n&Toc=&TocEntry=&QField=&QFieldYear=&QFieldMonth=&QFieldDay=&UseQField=&IntQFieldOp=0&ExtQFieldOp=0&XmlQuery=&File=D%3A%5CZYFILES%5CINDEX%20DATA%5C11THRU15%5CTXT%5C00000010%5CP100IL8K.txt&User=ANONYMOUS&Password=anonymous&SortMethod=h%7C-&MaximumDocuments=15&FuzzyDegree=0&ImageQuality=r85g16/r85g16/x150y150g16/i500&Display=hpfr&DefSeekPage=x&SearchBack=ZyActionL&Back=ZyActionS&BackDesc=Results%20page&MaximumPages=1&ZyEntry=1&SeekPage=x";
	parameter<float64>   BufferSizeSnelwegenVoorWindRestrictie := 25d, Descr = "Een buffer van zoveel meter wordt gehanteerd rondom snelwegen om ervoor te zorgen dat er geen windmolen direct langs snelwegen om in klaverbladen worden gerealiseerd.";
	parameter<uur>       Vollasturen_windturbine               := 3237[uur], Descr = "Standaard hoeveelheid vollasturen per windturbine.", Source = "Klimaatakkoord Den Haag 28 juni 2019 blz 162", URL ="https://open.overheid.nl/documenten/ronl-7f383713-bf88-451d-a652-fbd0b1254c06/pdf";
	
	parameter<MW>        Vermogen_Friesland_Y2030              := 1255[MW], Descr = "hack om een studyarea werkend te krijgen. obv nationaal 8 GW, regionaal verdeeld obv 'ruimte'."; 
	parameter<MW>        Vermogen_Friesland_Y2040              := 1360[MW], Descr = "hack om een studyarea werkend te krijgen. obv nationaal 8.67 GW, regionaal verdeeld obv 'ruimte'."; 
	parameter<MW>        Vermogen_Friesland_Y2050              := 1465[MW], Descr = "hack om een studyarea werkend te krijgen. obv nationaal 9.33 GW, regionaal verdeeld obv 'ruimte'."; 
	parameter<MW>        Vermogen_Friesland_Y2060              := 1560[MW], Descr = "hack om een studyarea werkend te krijgen. obv nationaal 10 GW, regionaal verdeeld obv 'ruimte'."; 

	
	//tbv StempelProcedure
	parameter<uint32> aantal_stempel_in1richting           := 2, Descr = "";           // ?
	parameter<meter>  afstand_offset_stempel               := 300[meter], Descr = "";  // nauwkeurigheid waarmee stempel wordt geplaatst
	parameter<uint32> minAaneengeslotenWindmolens          := 3, Descr = "";           // Minimaal 3 windturbines in lijnopstelling (o.a. NH en ZH). Bron: Jan Elzenga - PBL na lezen provinciale documenten in 2019
	parameter<uint32> max_aantal_rijen_zonder_tussenruimte := 3, Descr = "";           // 180221_Ruimtelijke_verkenning_Energie_en_Klimaat_LQ.pdf bladzijde 68 Maximaal 3 lijnen achter elkaar, daarna minimaal 1,5 km buffer i.v.m. regeneratie van de luchtstroom.
	parameter<uint32> rijkolom_tussenruimte                := 2, Descr = "";           // 180221_Ruimtelijke_verkenning_Energie_en_Klimaat_LQ.pdf bladzijde 68 Maximaal 3 lijnen achter elkaar, daarna minimaal 1,5 km buffer i.v.m. regeneratie van de luchtstroom.
	parameter<string> lijnOrientatie                       := 'NW_ZO' , Descr = "", Source = "Ontwerpwindgegevens voor windturbines in park- of lijnopstelling, mei 1993, TNO-rapport 93-18 bladzijde 19 tabel 1", URL ="%RSo_DataDir%/Energie/Wind/IMET-1993-189.pdf";

	unit<uint8> Claims: NrOfRows = 4
	{
		attribute<YearRange> Jaar                      : [2030, 2040, 2050, 2060];
		attribute<string>    name                      := 'Y' + string(Jaar), DialogType = "LabelText";
		attribute<GW>        OpLandOfBinnenwater       : [8.0, 8.5, 9.0, 9.5], Descr = "", URL = "%RSLDataDir%/Energie/Factsheet tbv Ruimtescanner.pdf";
		attribute<GW>        OpLandOfBinnenwater_Hoog  : [8.0, 9.5, 11.0, 12.5], Descr = "", URL = "%RSLDataDir%/Energie/Factsheet tbv Ruimtescanner.pdf";
		
		container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
	}

	unit<uint32> MaxWerpAfstand: NrOfRows = 10
	, Descr = "Handboek Risicozonering Windturbines versie september 2014.pdf Tabel 2: Generieke waarden voor werpafstanden IEC2 (blz 21)"
	{
		unit<uint32> elem := range(uint32, 0, nrAttr *#MaxWerpAfstand)
		{
			attribute<string> values:
			[
				//turb Type,Vermogen,ashoogte,maxwerpafst nom, maxwerpafst max
				  'WT1000' , '1000' ,'60'    ,'142'          ,'430'
				, 'WT1000' , '1000' ,'80'    ,'155'          ,'447'
				, 'WT2000' , '2000' ,'80'    ,'175'          ,'519'
				, 'WT2000' , '2000' ,'100'   ,'187'          ,'536'
				, 'WT3000' , '3000' ,'90'    ,'198'          ,'588'
				, 'WT3000' , '3000' ,'120'   ,'216'          ,'613'
				, 'WT4000' , '4000' ,'90'    ,'213'          ,'641'
				, 'WT4000' , '4000' ,'120'   ,'231'          ,'667'
				, 'WT5000' , '5000' ,'100'   ,'233'          ,'699'
				, 'WT5000' , '5000' ,'120'   ,'245'          ,'716'
			];
		}
		
		attribute<string> name                := TurbineType + '_' + string(AsHoogte);
		attribute<string> SearchValue         := string(Vermogen) + '_' + string(AsHoogte);
		attribute<string> TurbineType         := elem/values[value(id(.) * nrAttr + 0, elem)];
		attribute<kW>     Vermogen            := convert(elem/values[value(id(.) * nrAttr + 1, elem)], kW);
		attribute<meter>  Ashoogte            := convert(elem/values[value(id(.) * nrAttr + 2, elem)], meter);
		attribute<meter>  MaxWerpAfstandNom   := convert(elem/values[value(id(.) * nrAttr + 3, elem)], meter);
		attribute<meter>  MaxWerpAfstandOver  := convert(elem/values[value(id(.) * nrAttr + 4, elem)], meter);
		
		parameter<uint32> nrAttr := 5;
		
		container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
	}
}