container StartState_metBAGnieuwbouw :=
	for_each_nedv(
		Sector/XSubsector/name
		, 'MakeDefined(StartState/'+Sector/XSubsector/name+' + collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, BaseData/BAG_nieuwbouw/'+Sector/XSubsector/name+'), 0f)'
		, CompactedAdminDomain
		, float32
	), using = "CaseClassifications/Vastgoed/OP"
{
	// pas op: dat er nieuwbouw van bepaalde subsector heeft plaatsgevonden betekent niet dat betreffende subsector dominant is in een cel
	attribute<Sector/XSubsector> Subsector_rel_sw_case (CompactedAdminDomain) :=
		='switch(
		'+AsList('case(select_data(CompactedAdminDomain, AdminDomain/IsCompactedDomain, BaseData/BAG_nieuwbouw/'+Sector/XSubsector/name+') > 0f, '+string(id(Sector/XSubsector))+'[Sector/XSubsector])', ',')+'
			, (0f/0f)[Sector/XSubsector]
		)';
		
	attribute<Sector/XSubsector> Subsector_rel (CompactedAdminDomain) :=
		=	'argmax_ifdefined(
				'+AsList('select_data(CompactedAdminDomain, AdminDomain/IsCompactedDomain, value(BaseData/BAG_nieuwbouw/'+Sector/XSubsector/name+',float32) != 0f ? value(BaseData/BAG_nieuwbouw/'+Sector/XSubsector/name+',float32) : null_f)', ',')+'
			)';
	
	attribute<CaseClassifications/Vastgoed/OP> OP_rel (CompactedAdminDomain) := const(0b/0b, CompactedAdminDomain, CaseClassifications/Vastgoed/OP);
	
	container PandFootprint :=
		for_each_nedv(
			Jobs6/name
			,'StartState/PandFootprint/'+Jobs6/name+' + select_data(CompactedAdminDomain, AdminDomain/IsCompactedDomain, BaseData/BAG_nieuwbouw/Pand_nieuwbouw/PerJobs6/'+Jobs6/name+')'
			, CompactedAdminDomain
			, m2PandFootprint
		);
	
	container Wonen
	{
		attribute<woning> Totaal (CompactedAdminDomain) := ='add('+AsItemList(Classifications/Vastgoed/WP2xVSSH/name)+')';
	}
	
	container Wind
	{
		attribute<Yr>        jaartal_ingebruikname (CompactedAdminDomain) := IsDefined(StartState/Wind/jaartal_ingebruikname) ? StartState/Wind/jaartal_ingebruikname : select_data(CompactedAdminDomain, AdminDomain/IsCompactedDomain, BaseData/BAG_nieuwbouw/Wind/jaartal_ingebruikname);
	}
}