container Statisch
{
	unit<uint32> Gemeenten := RegioIndelingen/CBS/last/gemeente;
	unit<uint32> Wijken    := RegioIndelingen/CBS/last/wijk;
	unit<uint32> Provincies:= RegioIndelingen/CBS/last/provincie;
	unit<uint32> COROP     := RegioIndelingen/CBS/last/COROP;
	unit<uint32> NVM       := RegioIndelingen/NVM;
	
	// 3.  bestaande kassen
	unit<uint32> bestaande_kassen := OrgPath/Bestaande_kassen
	{
		attribute<rdc_meter> geometry (poly) := OrgPath/Bestaande_kassen/Geometry;
		attribute<bool>      IsNietToegestaan (AdminDomain)   := IsDefined(poly2grid(geometry, AdminDomain));
	}
	
	// 5.  buisleidingen ondergronds --> afstand = MaxElem(ashoogte + 1/2 * rotordiameter, max werpafstand bij nom. toerental)
	// 5.  buisleidingen bovengronds --> afstand = max werpafstand bij nom. toerental
	unit<uint32> Buisleidingen := OrgPath/Buisleidingen_bestaand
	{
		attribute<rdc_meter> geometry_buffer (poly) := OrgPath/Buisleidingen_bestaand/geometry;
		attribute<bool>      IsNietToegestaan (AdminDomain)   := IsDefined(poly2grid(geometry_buffer, AdminDomain));
	}
	
	// 6.  hoogspanning --> afstand = MaxElem(ashoogte + 1/2 * rotordiameter, max werpafstand bij nom. toerental)
	unit<uint32> hoogspanning := subset(/SourceData/Energie/RES10_concept/Analysekaarten/RES_4_elektriciteit_infrastructuur/tennet_kabels_en_leidingen_v1/SPANNINGSN >= 100d)
	{
		attribute<rdc_meter> geometry        (arc)  := /SourceData/Energie/RES10_concept/Analysekaarten/RES_4_elektriciteit_infrastructuur/tennet_kabels_en_leidingen_v1/geometry[nr_OrgEntity];
		attribute<rdc_meter> geometry_buffer (dyna_points, poly) := Punten_Buffer/geometry;
		attribute<bool>      IsNietToegestaan (AdminDomain)   := IsDefined(poly2grid(geometry_buffer, AdminDomain));
		
		unit<uint32>         segments               := arc2segm(geometry);
		unit<uint32>         dyna_points            := dyna_point(segments/point, segments/nextpoint, 10f)
		{
			attribute<rdc_meter> geometry := point;
		}
		container Punten_Buffer := Templates/PointBuffer(dyna_points, max_elem(CaseClassifications/WindTurbineType/Ashoogte + 0.5f * CaseClassifications/WindTurbineType/RotorDiameter, CaseClassifications/WindTurbineType/MaxWerpAfstandNom));
	}
	
	// 8.  luchthaven
	unit<uint32> luchthaven := OrgPath/Luchthaven
	{
		attribute<rdc_meter> geometry_buffer (poly) := OrgPath/Luchthaven/geometry;
		
		attribute<bool> IsNietToegestaan  (AdminDomain) := IsNietToegestaan0 && !OR(
			IsNietToegestaan0/Rotterdam,
			IsNietToegestaan0/Eindhoven,
			IsNietToegestaan0/Lelystad,
			IsNietToegestaan0/Maastricht,
			IsNietToegestaan0/Groningen
		);
		
		attribute<bool> IsNietToegestaan0        (AdminDomain) := IsDefined(poly2grid(geometry_buffer, AdminDomain))
		{
			attribute<bool> Rotterdam (AdminDomain) := . && Provincies/per_AdminDomain == Provincies/V/Zuid_Holland && !(RegioIndelingen/RES/per_AdminDomain == RegioIndelingen/RES/V/Holland_Rijnland);
			attribute<bool> Eindhoven (AdminDomain) := . && OR(
				Gemeenten/per_AdminDomain == Gemeenten/V/Bladel,
				Gemeenten/per_AdminDomain == Gemeenten/V/Eersel,
				Gemeenten/per_AdminDomain == Gemeenten/V/Veldhoven,
				Gemeenten/per_AdminDomain == Gemeenten/V/Oirschot,
				Gemeenten/per_AdminDomain == Gemeenten/V/Eindhoven,
				Gemeenten/per_AdminDomain == Gemeenten/V/Best,
				Gemeenten/per_AdminDomain == Gemeenten/V/Son_En_Breugel,
				Wijken/per_AdminDomain == Wijken/V/Sint_Oedenrode
			);
			
			attribute<bool> Lelystad   (AdminDomain) := . && Provincies/per_AdminDomain == Provincies/V/Flevoland;
			attribute<bool> Maastricht (AdminDomain) := . && COROP/per_AdminDomain == COROP/V/Zuid_Limburg;
			attribute<bool> Groningen  (AdminDomain) := . && OR(
				NVM/per_AdminDomain == NVM/V/Noord_Drenthe,
				NVM/per_AdminDomain == NVM/V/Stad_Groningen_EO,
				NVM/per_AdminDomain == NVM/V/Slochteren_EO
			);
		}
	}
	// 9.  primaire waterkering --> buiten kernzone
	unit<uint32> primaire_waterkering := OrgPath/Primaire_waterkering
	{
		attribute<rdc_meter> geometry_buffer (poly)       := OrgPath/primaire_waterkering/geometry;
		attribute<bool>      IsNietToegestaan (AdminDomain)   := IsDefined(poly2grid(geometry_buffer, AdminDomain));
	}
	
	// 10. risico inrichting 
	unit<uint32> Risico_inrichting := OrgPath/Risico_inrichting
	{
		attribute<rdc_meter> geometry_buffer (poly)       := OrgPath/Risico_inrichting/geometry;
		attribute<bool>      IsNietToegestaan (AdminDomain)   := IsDefined(poly2grid(geometry_buffer, AdminDomain));
	}
	
	// 11. spoor --> afstand = MaxElem(7.85m + 1/2 * rotordiameter, 30m)
	unit<uint32> spoor := SourceData/Grondgebruik/BGT/ReadCombine/IsSpoorbaan
	{
		attribute<rdc_meter> geometry (poly)        := SourceData/Grondgebruik/BGT/ReadCombine/IsSpoorbaan/Geometry;
		attribute<rdc_meter> geometry_buffer (poly) := bg_buffer_multi_polygon(geometry, Max_Elem(7.85f + (0.5f * CaseClassifications/WindTurbineType/RotorDiameter), 30f)[float64], 8b);
		attribute<bool>      IsNietToegestaan (AdminDomain)   := IsDefined(poly2grid(geometry_buffer, AdminDomain));
	}
	
	// 12. waterwegen --> afstand = MaxElem(1/2 * rotordiameter, 50m)
	unit<uint32> waterwegen := SourceData/Grondgebruik/BRT/IsWaterweg
	{
		attribute<rdc_meter> geometry (poly)        := SourceData/Grondgebruik/BRT/IsWaterweg/Geometry;
		attribute<rdc_meter> geometry_buffer (poly) := bg_buffer_multi_polygon(geometry, Max_Elem(0.5f * CaseClassifications/WindTurbineType/RotorDiameter, 50f)[float64], 8b);
		attribute<bool>      IsNietToegestaan (AdminDomain)   := IsDefined(poly2grid(geometry_buffer, AdminDomain));
	}
	
	// 13. wegen --> afstand = MaxElem(1/2 * rotordiameter, 30m)
	unit<uint32> wegen := SourceData/Grondgebruik/BRT/IsHoofdweg
	{
		attribute<rdc_meter> geometry (poly)        := SourceData/Grondgebruik/BRT/IsHoofdweg/Geometry;
		attribute<rdc_meter> geometry_buffer (poly) := bg_buffer_multi_polygon(geometry, Max_Elem(0.5f * CaseClassifications/WindTurbineType/RotorDiameter, 30f)[float64], 8b);
		attribute<bool>      IsNietToegestaan (AdminDomain)   := IsDefined(poly2grid(geometry_buffer, AdminDomain));
	}
	
	// 15. zee
	unit<uint32> zee := SourceData/Grondgebruik/BRT/IsZee
	{
		attribute<rdc_meter> geometry (poly)              := SourceData/Grondgebruik/BRT/IsZee/Geometry;
		attribute<bool>      IsNietToegestaan (AdminDomain)   := IsDefined(poly2grid(geometry, AdminDomain));
	}
}