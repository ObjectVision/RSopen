////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Dit is RSOpen, de open source versie van het model RuimteScanner. Het scipt wordt uitgegeven onder GNU-GPL licentie.
//
// RSOpen is ontwikkeld door PBL Planbureau voor de Leefomgeving, i.s.m Object Vision B.V. en VU Vrije Universiteit Amsterdam.
// Opdrachtgever/ontwikkelaar PBL: Bart Rijken
// Contactpersoon/ontwikkelaar Object Vision B.V.: Jip Claassens (jclaassens@objectvision.nl)
// Contacpersoon PBL: Bas van Bemmel (Bas.vanBemmel@pbl.nl)
//
// Deze file bevat de brondata (sourcedata) die het model nodig heeft voor de verschillende berekeningen/analyses.De data worden ingelezen vanuit de SourceRVF_DataDir.
// De bronnen zijn divers. Tenzij anders aangegeven is dat het PBL.
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

container VariantOptimalisatie: using = "Classifications;Classifications/Vastgoed;Classifications/Landbouw;Classifications/Actor;Classifications/Time;units;Geography"
{
	container Impl
	{
		container OntkoppelRelevantOutputFiles
		{
			parameter<string> Landgebruikskaart_basisjaar  := 'Ready', ExplicitSuppliers = "Indicatoren/Basisjaar/Landgebruikskaart/Write_Result_SA";
			parameter<string> Landgebruikskaart            := 'Ready', ExplicitSuppliers = "=AsList('Indicatoren/'+ZichtjaarK/name+'/Landgebruikskaart/Write_Result_SA', ';')";
			parameter<string> NPV                          := 'Ready', ExplicitSuppliers = "=AsList('Indicatoren/Export/Impl/Zichtjaren/'+ZichtjaarK/name+'/NPV_perLUMT/Totaal', ';')";
			parameter<string> CO2_Uitstoot                 := 'Ready', ExplicitSuppliers = "=AsList('Indicatoren/'+ZichtjaarK/name+'/SOMERS_CO2_laagveen/Cumulatief_Mediaan_overZichtjaar', ';')";
		}
		
		unit<uint32> GrondgebruikContext := combine(ScenarioK, BoerVariantK, VariantK, ZichtjaarK)
		{
			attribute<string> Scenario_name    := ScenarioK/name[first_rel];
			attribute<string> Boervariant_name := BoerVariantK/name[second_rel];
			attribute<string> Variant_name     := VariantK/name[third_rel];
			attribute<string> Zichtjaar_name   := ZichtjaarK/name[fourth_rel];
			attribute<string> name             := Scenario_name+'/'+Boervariant_name+'/'+Variant_name+'/'+Zichtjaar_name;
			attribute<string> Label            := replace(name, '/', '_');
		}
		
		// unit<uint32> CO2Context := combine(CO2PriceK, VariantK, ZichtjaarK)
		// {
			// attribute<string> CO2Prijs_name    := CO2PriceK/name[first_rel];
			// attribute<string> Variant_name     := VariantK/name[second_rel];
			// attribute<string> Zichtjaar_name   := ZichtjaarK/name[third_rel];
			// attribute<string> name             := CO2Prijs_name+'/'+Variant_name+'/'+Zichtjaar_name;
			// attribute<string> Label            := replace(name, '/', '_');
		// }
		
		unit<uint32> AggregatieContext := combine(ScenarioK, BoerVariantK, CO2PriceK, VariantK, ZichtjaarK)
		{
			attribute<string> Scenario_name    := ScenarioK/name[first_rel];
			attribute<string> Boervariant_name := BoerVariantK/name[second_rel];
			attribute<string> CO2Prijs_name    := CO2PriceK/name[third_rel];
			attribute<string> Variant_name     := VariantK/name[fourth_rel];
			attribute<string> Zichtjaar_name   := ZichtjaarK/name[fifth_rel];
			attribute<string> name             := Scenario_name+'/'+Boervariant_name+'/'+CO2Prijs_name+'/'+Variant_name+'/'+Zichtjaar_name;
			attribute<string> Label            := replace(name, '/', '_');
			
			attribute<Eur_ton> CO2Prijs        := CO2PriceK/price[third_rel];
		}
		
		unit<uint32> OptimalisatieContext := combine(ScenarioK, BoerVariantK, CO2PriceK, ZichtjaarK)
		{
			attribute<string> Scenario_name    := ScenarioK/name[first_rel];
			attribute<string> Boervariant_name := BoerVariantK/name[second_rel];
			attribute<string> CO2Prijs_name    := CO2PriceK/name[third_rel];
			attribute<string> Zichtjaar_name   := ZichtjaarK/name[fourth_rel];
			attribute<string> name             := Scenario_name+'/'+Boervariant_name+'/'+CO2Prijs_name+'/'+Zichtjaar_name;
			attribute<string> Label            := replace(name, '/', '_');
		}
		
		container CO2_Uitstoot := 
			for_each_ndvat(
				GrondgebruikContext/name
				,AdminDomain
				,ton_ha
				,'%LocalDataProjDir%/Indicatoren/CO2_Uitstoot/'+GrondgebruikContext/Scenario_name+'_'+GrondgebruikContext/variant_name+'/'+GrondgebruikContext/Boervariant_name+'_'+GrondgebruikContext/Zichtjaar_name+'_'+/ModelParameters/StudyArea+'.tif'
				,'gdal.grid'
			);
		container Kapitalisatie := Templates/Landbouw/Kapitalisatie_T(null_b);
	}
	
	unit<uint8>  ScenarioK     := /Classifications/Modellering/ScenarioK;
	// unit<uint8>  BoerVariantK  := /Classifications/Actor/BoerVariantK;
	// unit<uint8>  CO2PrijsK     := /Classifications/Landbouw/CO2PriceK;
	unit<uint8>  VariantK      := /VariantParameters/VariantK;
	unit<uint8>  ZichtjaarK    := /Classifications/Time/Zichtjaar;
	unit<uint8> GrondgebruikK := /Classifications/Actor/LU_ModelType;
	
	
	container Grondgebruik := 
		for_each_ndvat(
			impl/GrondgebruikContext/name
			,AdminDomain
			,GrondgebruikK
			,'%LocalDataProjDir%/Indicatoren/Landgebruik/'+impl/GrondgebruikContext/Scenario_name+'_'+impl/GrondgebruikContext/variant_name+'/'+impl/GrondgebruikContext/Boervariant_name+'_'+impl/GrondgebruikContext/Zichtjaar_name+'_'+/ModelParameters/StudyArea+'.tif'
			,'gdal.grid'
		);
	
	container NPVGrondgebruik := 
		for_each_ndvat(
			impl/GrondgebruikContext/name
			,AdminDomain
			,EUR_ha
			,'%LocalDataProjDir%/Indicatoren/NPV/'+impl/GrondgebruikContext/Scenario_name+'_'+impl/GrondgebruikContext/variant_name+'/'+impl/GrondgebruikContext/Boervariant_name+'_'+impl/GrondgebruikContext/Zichtjaar_name+'_'+/ModelParameters/StudyArea+'.tif'
			,'gdal.grid'
	);
	
	container NPVCO2Emissie := 
		for_each_nedv(
			impl/AggregatieContext/name
			,'impl/CO2_Uitstoot/'+impl/AggregatieContext/Scenario_name+'/'+impl/AggregatieContext/Boervariant_name+'/'+impl/AggregatieContext/Variant_name+'/'+impl/AggregatieContext/Zichtjaar_name+' * '+string(impl/AggregatieContext/CO2Prijs)+'[eur_ton] * impl/Kapitalisatie/Factor / 1[jaar]'
			,AdminDomain
			,EUR_ha
	);
	
	container NPVTotaal :=
		for_each_nedv(
			impl/AggregatieContext/name
			,replace(
				'add(NPVGrondgebruik/@S@/@B@/@V@/@Z@, NPVCO2Emissie/@S@/@B@/@C@/@V@/@Z@)'
				,'@S@', impl/AggregatieContext/Scenario_name
				,'@B@', impl/AggregatieContext/Boervariant_name
				,'@C@', impl/AggregatieContext/CO2Prijs_name
				,'@V@', impl/AggregatieContext/Variant_name
				,'@Z@', impl/AggregatieContext/Zichtjaar_name
			)
			,AdminDomain
			,EUR_ha
		)
	{
		container PerPeilgebied := 
			for_each_nedv(
				impl/AggregatieContext/name
				,'sum(NPVTotaal/'+impl/AggregatieContext/name+', SourceData/Landbouw/Peilgebieden/per_grid)'
				,SourceData/Landbouw/Peilgebieden
				,EUR_ha
			);
	}
	
	container Optima
	{
		container Variant :=
			for_each_nedv(
				impl/OptimalisatieContext/name
				,replace(
					'ArgMax('+AsItemList('NPVTotaal/PerPeilgebied/@S@/@B@/@C@/'+VariantK/name+'/@Z@')+')[VariantK]'
					,'@S@', impl/OptimalisatieContext/Scenario_name
					,'@B@', impl/OptimalisatieContext/Boervariant_name
					,'@C@', impl/OptimalisatieContext/CO2Prijs_name
					,'@Z@', impl/OptimalisatieContext/Zichtjaar_name
				)
				,SourceData/Landbouw/Peilgebieden
				,VariantK
			)
		{
			container PerGrid := 
				for_each_nedv(
					impl/OptimalisatieContext/name
					,'Variant/'+impl/OptimalisatieContext/name+'[SourceData/Landbouw/Peilgebieden/per_grid]'
					,AdminDomain
					,VariantK
				);
		}
		
		container Grondgebruik := 
			for_each_nedv(
				impl/OptimalisatieContext/name
				,replace(
					'merge(uint16(Variant/PerGrid/@O@), GrondgebruikK,'+AsItemList('VariantOptimalisatie/Grondgebruik/@S@/@B@/'+VariantK/name+'/@Z@')+')'
					,'@O@', impl/OptimalisatieContext/name
					,'@S@', impl/OptimalisatieContext/Scenario_name
					,'@B@', impl/OptimalisatieContext/Boervariant_name
					,'@Z@', impl/OptimalisatieContext/Zichtjaar_name
				)
				,AdminDomain
				,GrondgebruikK
			);
			
		container NPV_Grondgebruik := 
			for_each_nedv(
				impl/OptimalisatieContext/name
				,replace(
					'merge(uint16(Variant/PerGrid/@O@), EUR_ha,'+AsItemList('VariantOptimalisatie/NPVGrondgebruik/@S@/@B@/'+VariantK/name+'/@Z@')+')'
					,'@O@', impl/OptimalisatieContext/name
					,'@S@', impl/OptimalisatieContext/Scenario_name
					,'@B@', impl/OptimalisatieContext/Boervariant_name
					,'@Z@', impl/OptimalisatieContext/Zichtjaar_name
				)
				,AdminDomain
				,EUR_ha
			);
		
		container NPV_CO2Emissie := 
			for_each_nedv(
				impl/OptimalisatieContext/name
				,replace(
					'merge(uint16(Variant/PerGrid/@O@), EUR_ha,'+AsItemList('VariantOptimalisatie/NPVCO2Emissie/@S@/@B@/@C@/'+VariantK/name+'/@Z@')+')'
					,'@O@', impl/OptimalisatieContext/name
					,'@S@', impl/OptimalisatieContext/Scenario_name
					,'@B@', impl/OptimalisatieContext/Boervariant_name
					,'@C@', impl/OptimalisatieContext/CO2Prijs_name
					,'@Z@', impl/OptimalisatieContext/Zichtjaar_name
				)
				,AdminDomain
				,EUR_ha
			);
		
		container NPV_Totaal := 
			for_each_nedv(
				impl/OptimalisatieContext/name
				,replace(
					'merge(uint16(Variant/PerGrid/@O@), EUR_ha,'+AsItemList('VariantOptimalisatie/NPVTotaal/@S@/@B@/@C@/'+VariantK/name+'/@Z@')+')'
					,'@O@', impl/OptimalisatieContext/name
					,'@S@', impl/OptimalisatieContext/Scenario_name
					,'@B@', impl/OptimalisatieContext/Boervariant_name
					,'@C@', impl/OptimalisatieContext/CO2Prijs_name
					,'@Z@', impl/OptimalisatieContext/Zichtjaar_name
				)
				,AdminDomain
				,EUR_ha
			);
	}
}