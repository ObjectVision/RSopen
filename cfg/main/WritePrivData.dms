container WritePrivData : using = "classifications;geography"
{
	// parameter<String> Generate_PrivData := Grondposities/Generate;
	
	container Grondposities
	{
		parameter<String> Generate := 'Ready', ExplicitSuppliers = "PrivData/Grondposities/Write_Per_AllocDomain_EigendomK_rel;PrivData/Grondposities/Write_Per_AdminDomain_EigendomK_rel";
	}
	
	container Claims := 
		for_each_ne(
			Modellering/Scenario_x_Variant_x_Zichtjaar/name
			, 'Gen_T('+quote(Modellering/Scenario_x_Variant_x_Zichtjaar/name)+')'
		)
	{
		parameter<string> Generate        := = AsList(Modellering/Scenario_x_Variant_x_Zichtjaar/name+'/Generate', '+ ');
	}
		
	Template Gen_T 
	{
		parameter<string> ScenVarJaar_name;
		///
		parameter<string> Scenario_name  := rjoin(ScenVarJaar_name, Modellering/Scenario_x_Variant_x_Zichtjaar/name, Modellering/Scenario_x_Variant_x_Zichtjaar/Scenario_name);
		parameter<string> Variant_name   := rjoin(ScenVarJaar_name, Modellering/Scenario_x_Variant_x_Zichtjaar/name, Modellering/Scenario_x_Variant_x_Zichtjaar/Variant_name);
		parameter<string> Zichtjaar_name := rjoin(ScenVarJaar_name, Modellering/Scenario_x_Variant_x_Zichtjaar/name, Modellering/Scenario_x_Variant_x_Zichtjaar/Zichtjaar_name);

		parameter<String> Generate_Wonen  := 'Ready', ExplicitSuppliers = "=AsList('PrivData/Claims/AggregateToRegions/'+Zichtjaar_name+'/woningen/'+Scenario_name+'/'+Variant_name+'/AllocRegios/'+Modellering/AllocRegiosK/name+'/Write',';')";
		parameter<String> Generate_Werken := 'Ready', ExplicitSuppliers = "=AsList('PrivData/Claims/AggregateToRegions/'+Zichtjaar_name+'/Banen/'+Scenario_name+'/'+Variant_name+'/AllocRegios/'+Modellering/AllocRegiosK/name+'/Write',';')";
		parameter<string> Generate        := Generate_Wonen + Generate_Werken; 
	}
	
	container LISA
	{
		unit<uint32> FSS
		: StorageName = "='%PrivDataDir%/LISA/LISA'+string(ModelParameters/LISA_StartYear)+'.fss'"
		, StorageReadOnly = "true"
		{
			attribute<rdc_meter>             geometry;
			attribute<uint32>                banen;
			attribute<string>                sbi08;
			attribute<Actor/TXLJobs7>        TXLJobs7_rel        := rjoin(SBI08, Actor/SBI08/SBI2008, Actor/SBI08/TXLJobs7_rel); 
			attribute<Actor/TXLJobs7_nodata> TXLJobs7_nodata_rel := rjoin(TXLJobs7_rel, Actor/TXLJobs7_nodata/TXLJobs7_rel, id(Actor/TXLJobs7_nodata));
	
			unit<uint32> pand_domain     := ='SourceData/Vastgoed/BAG/PerJaar/Y'+string(ModelParameters/LISA_StartYear)+'/pand' // /pand_met_vbo'
			{
				attribute<.>   pand_rel (..) := point_in_polygon(../geometry, geometry);
				container Per_TXLJobs7 :=
					for_each_nedv(
						Actor/TXLJobs7/name
						, 'sum(int32(banen) * int32(TXLJobs7_rel == '+string(id(Actor/TXLJobs7))+'[Actor/TXLJobs7]), pand_rel)[Job]'
						, pand_domain
						, Job
					);
			}
			
			container Per_TXLJobs7 :=
				for_each_nedv(
					Actor/TXLJobs7/name
					, 'sum(pand_domain/Per_TXLJobs7/'+Actor/TXLJobs7/name+'[pand_domain/ToedelingsMatrix/pand_rel] * pand_domain/ToedelingsMatrix/ToedelingPand, pand_domain/ToedelingsMatrix/AdminDomain_rel)'
					, AdminDomain
					, Job
				);
		}
	}	
}