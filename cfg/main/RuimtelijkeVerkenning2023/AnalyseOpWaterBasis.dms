////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Deze file bevat de resultaten van de RuimtelijkeVerkenning 2023 en de verwerking hiervan tbv landbouw en natuur voor Herijking Klimaatrisico's-project
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

container AnalyseOpWaterBasis: using = "Classifications;Units;Geography"
{
	attribute<bool> Landbouw_BAU_IsZout     (rdc_25m) := Landbouw_BAU && SourceData/Water/TeZout/Y2050/IsZoutAdminDomain;
	attribute<bool> Landbouw_BAU_IsNietZout (rdc_25m) := Landbouw_BAU && !SourceData/Water/TeZout/Y2050/IsZoutAdminDomain;
	
	//attribute<bool> Akkerbouw_GR_IsZout     (rdc_25m) := Akkerbouw_GR && SourceData/Water/TeZout/Y2050/IsZoutAdminDomain;
	
		attribute<bool> Akkerbouw_GR_IsZout (rdc_25m)
		:	StorageName     = "%ResultatenDir%/RuimtelijkeVerkenning2023/Y2050/Akkerbouw_GR_IsZout_sel.tif"
		,	StorageType     = "gdal.grid"
		,	StorageReadOnly = "True";
	
	attribute<bool> Akkerbouw_GR_IsNietZout (rdc_25m) := Akkerbouw_GR && !SourceData/Water/TeZout/Y2050/IsZoutAdminDomain;
	
	unit<uint32> unit_district_Landbouw_BAU_IsZout := district(Landbouw_BAU_IsZout);
	
	unit<uint32> unit_district_Akkerbouw_GR_IsZout := district(Akkerbouw_GR_IsZout)
	{
		attribute<UInt32>  id         := id(.);
		attribute<uint64>  count    := pcount(Districts);
		attribute<float32> area_ha  := count[float32]*AdminDomain/NrHaPerCell;
		attribute<km2>     area_km2 := count[float32]*AdminDomain/NrHaPerCell[km2];
		attribute<.>       Per_AdminDomain (AdminDomain):= Districts;
	}

	unit<uint32> unit_district_Akkerbouw_GR_IsZout_25km2 := select_with_attr_by_cond(unit_district_Akkerbouw_GR_IsZout, unit_district_Akkerbouw_GR_IsZout/area_km2 > 25[km2]);

		//0 is al het overige gebied
		unit<uint32> polydomain := select_uint32_with_org_rel(unit_district_Akkerbouw_GR_IsZout/Districts > 0)
		{
			parameter<float64>  gridsize := 25d;
		
			attribute<rdc_meter> point_rdc       := org_rel[rdc_meter];
			attribute<uint32>    id_nr := unit_district_Akkerbouw_GR_IsZout/Districts[org_rel];
			attribute<region>    region_rel := rlookup(id_nr, /RuimtelijkeVerkenning2023/AnalyseOpWaterBasis/polydomain/region/Values);

			unit<uint32> region := unique(id_nr)
			{
				attribute<rdc_meter> geometry (polygon)       := partitioned_union_polygon(ipolygon(geometry_boundingbox), region_rel)[rdc_meter];
				attribute<dpoint>    polygon_buffer (polygon) := bg_buffer_multi_polygon(geometry, 25.0, 32b);
				unit<uint32>         split_dissolve           := split_partitioned_union_polygon(ipolygon(geometry_boundingbox), region_rel)
				{
				
					
					//attribute<unit_district_Akkerbouw_GR_IsZout>            rdc_100m_rel                         := unit_district_Akkerbouw_GR_IsZout/Per_AdminDomain[geometry];
				}
				attribute<meter2>    area_m2                  := area(fpolygon(geometry), meter2);
			}
			
			unit<uint32> region_sel := select_with_attr_by_cond(region, region/area_m2 > 10000000[meter2])
			{
				attribute<rdc_meter> geometry   (polygon);
				attribute<rdc_meter> centroid := centroid(geometry);
			}
			
			attribute<rdc_meter> geometry (poly) := points2sequence(pointset/point, pointset/sequence, pointset/ordinal);

			unit<uint32> pointset := union_unit(.,.,.,.,.)
			{
				attribute<rdc_meter>    point    := union_data(.
				  , point_rdc                                         		// left top 
				  , point_rdc + point_yx(0[meter_f64],gridsize, rdc_meter)		// right top 
				  , point_rdc + point_yx(-gridsize, gridsize, rdc_meter)	// right bottom 
				  , point_rdc + point_yx(-gridsize,0[meter_f64], rdc_meter)	// left bottom 
				  , point_rdc                                         		// left top 
				);
				attribute<..>     sequence := union_data(., id(..), id(..), id(..), id(..), id(..))[uint32];
				attribute<uint32> ordinal  := union_data(., const(0,..), const(1,..), const(2,..), const(3,..), const(4,..));
			}
			
			
				attribute<rdc_meter>    point_center    := union_data(.
				  , point_rdc + point_yx(0.5d * -gridsize,0.5d * gridsize, rdc_meter)		// right top 
				);
			
			attribute<AdminDomain> Per_AdminDomain := point_center[AdminDomain];

			attribute<rdc_meter> geometry_boundingbox (poly) := points2sequence(pointset/point, pointset/sequence, pointset/ordinal)
			{
				parameter<meter>  PenWorldWidth := 5[meter]    , DialogType = "PenWorldWidth";
			}
			
			attribute<polydomain> district_rel (polydomain) := point_in_polygon(point_center, geometry_boundingbox);

			
			attribute<rdc_meter> centroid := centroid(geometry_boundingbox);
			attribute<AdminDomain> in_AdminDomain                := centroid[AdminDomain];
			attribute<meter2> area_m2 := area(fpolygon(geometry_boundingbox), meter2);
		}
		
		//attribue<bool> hole := Akkerbouw_GR_IsZout ? /Geography/perGridsize/size_25m/domain/id_rel : false;
		

		
		unit<uint32> regio_import
		:	StorageName     = "%ResultatenDir%/RuimtelijkeVerkenning2023/Y2050/geometry2.shp"
		,	StorageType     = "gdal.vect"
		,	StorageReadOnly = "True"
		,	DialogData      = "rdc_meter"
		{
			attribute<meter2> opp_m2 := area(fpolygon(geometry),meter2);
		}
		
		attribute<dpoint> polygon_buffer (polygon,regio_import) := bg_buffer_multi_polygon(regio_import/geometry, 25.0, 32b);
}