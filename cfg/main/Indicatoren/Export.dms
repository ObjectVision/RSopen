container Export : using = "classifications/actor"
{
	container impl
	{
		attribute<Ha>   Basisjaar_Areaal_perLUMT       (LU_ModelType) := pcount(Indicatoren/Basisjaar/Landgebruikskaart/Result_SA)[float32] * rdc_25m/NrHaPerCell; 
		attribute<Ha>   Y2050_Areaal_perLUMT           (LU_ModelType) := pcount(Indicatoren/Y2050/Landgebruikskaart/Result_SA)[float32] * rdc_25m/NrHaPerCell; 
		
		parameter<Ha>   Basisjaar_Areaal_Landbouw                     := sum(LU_ModelType/IsLandbouw ? Basisjaar_Areaal_perLUMT : 0[Ha]);
		parameter<Ha>   Y2050_Areaal_Landbouw                         := sum(LU_ModelType/IsLandbouw ? Y2050_Areaal_perLUMT : 0[Ha]);
		
		container Basisjaar_NettoOpbrengsten_perLUMT :=
			for_each_nedv(
				LU_ModelType/label
				, LU_ModelType/IsLandbouw 
						? 'Indicatoren/Basisjaar/Landgebruikskaart/Result_SA == LU_ModelType/v/'+LU_ModelType/label+'
							? VariantData/Suitability/Y2050/Landbouw/per_ModelType/'+LU_ModelType/subsector_name+'/NetRevenue * 1[jaar]
							: 0[Eur_m2]'
						: 'const(0[Eur_m2], rdc_25m)'
				, rdc_25m
				, Eur_m2
			)
		{
			attribute<Eur_m2> Totaal_Landbouw (rdc_25m) := ='add('+AsItemList(LU_ModelType/label)+')';
			parameter<Eur_ha> Gemiddeld_perHa           := sum(Totaal_Landbouw) / sum(LU_ModelType/IsLandbouw[Indicatoren/Basisjaar/Landgebruikskaart/Result_SA][float32]) / rdc_25m/NrHaPerCell * 1[meter2];
			parameter<Eur>    Totaal_Studiegebied       := sum(value(LU_ModelType/IsLandbouw[Indicatoren/Basisjaar/Landgebruikskaart/Result_SA],Ha)[meter2] * Totaal_Landbouw);
		}
		
		container Y2050_NettoOpbrengsten_perLUMT :=
			for_each_nedv(
				LU_ModelType/label
				, LU_ModelType/IsLandbouw 
						? 'Indicatoren/Y2050/Landgebruikskaart/Result_SA == LU_ModelType/v/'+LU_ModelType/label+'
							? VariantData/Suitability/Y2050/Landbouw/per_ModelType/'+LU_ModelType/subsector_name+'/NetRevenue * 1[jaar]
							: 0[Eur_m2]'
						: 'const(0[Eur_m2], rdc_25m)'
				, rdc_25m
				, Eur_m2
			)
		{
			attribute<Eur_m2> Totaal_Landbouw (rdc_25m) := ='add('+AsItemList(LU_ModelType/label)+')';
			parameter<Eur_ha> Gemiddeld_perHa           := sum(Totaal_Landbouw) / sum(LU_ModelType/IsLandbouw[Indicatoren/Y2050/Landgebruikskaart/Result_SA][float32]) / rdc_25m/NrHaPerCell * 1[meter2];
			parameter<Eur>    Totaal_Studiegebied       := sum(value(LU_ModelType/IsLandbouw[Indicatoren/Y2050/Landgebruikskaart/Result_SA],Ha)[meter2] * Totaal_Landbouw);
		}
		
		//transitie matrix
		unit<uint32> LU_ModelType_Transities := combine(Actor/LU_ModelType, Actor/LU_ModelType)
		{
			attribute<uint32> from_TransCode := uint32(first_rel) + 1;
			attribute<string> from_name      := Actor/LU_ModelType/nameshort[first_rel];
			attribute<uint32> to_TransCode   := (uint32(second_rel) + 1) * 100;
			attribute<string> to_name        := Actor/LU_ModelType/nameshort[second_rel];
			attribute<uint32> TransCode      := from_TransCode + to_TransCode;
			attribute<string> Label          := from_name + '_' + to_name;
			
			attribute<uint32> count          := pcount(LU_Mutatie)[uint32];
		}
		

		// unit<uint32> Transitie_Matrix_Array := Actor/LU_ModelType
		// {
			// attribute<string> from_name           := Actor/LU_ModelType/nameshort;
			// attribute<string> count_list          := AsList(string(LU_ModelType_Transities/count), ';', LU_ModelType_Transities/first_rel);
		// }

		// unit<uint32> Transitie_Header : nrofrows = 1
		// {
			// attribute<string> to_name          := AsList(Actor/LU_ModelType/nameshort, ';', const(0[.],Actor/LU_ModelType));
		// }

		// unit<uint32> Transitie_Matrix_met_header := union_unit(Transitie_Header, Transitie_Matrix_Array) 
		// {
			// attribute<string> from_name          := union_data(., const('',Transitie_Header), Transitie_Matrix_Array/from_name);
			// attribute<string> values             := union_data(., Transitie_Header/to_name, Transitie_Matrix_Array/count_list);
		// }
		
		
		attribute<uint32> LU_Basisjaar (rdc_25m) := uint32(Indicatoren/basisjaar/Landgebruikskaart/Result_SA) + 1;
		attribute<uint32> LU_Y2050     (rdc_25m) := (uint32(Indicatoren/Y2050/Landgebruikskaart/Result_SA) + 1)  * 100;
		attribute<LU_ModelType_Transities> LU_Mutatie   (rdc_25m) := rlookup(LU_Basisjaar + LU_Y2050, LU_ModelType_Transities/TransCode);
		
		container Basisjaar_NPV_perLUMT :=
			for_each_nedv(
				LU_ModelType/label
				, LU_ModelType/IsLandbouw 
						? 'Indicatoren/Basisjaar/Landgebruikskaart/Result_SA == LU_ModelType/v/'+LU_ModelType/label+'
							? VariantData/Suitability/Y2050/Landbouw/per_ModelType/'+LU_ModelType/subsector_name+'/NPV 
							: 0[Eur_m2]'
						: 'const(0[Eur_m2], rdc_25m)'
				, rdc_25m
				, Eur_m2
			);
		
		container Y2050_NPV_perLUMT :=
			for_each_nedv(
				LU_ModelType/label
				, LU_ModelType/IsLandbouw 
						? 'Indicatoren/Y2050/Landgebruikskaart/Result_SA == LU_ModelType/v/'+LU_ModelType/label+'
							? VariantData/Suitability/Y2050/Landbouw/per_ModelType/'+LU_ModelType/subsector_name+'/NPV 
							: 0[Eur_m2]'
						: 'const(0[Eur_m2], rdc_25m)'
				, rdc_25m
				, Eur_m2
			);
			
		container Y2050_NPV_Augmented_perLUMT :=
			for_each_nedv(
				LU_ModelType/label
				, LU_ModelType/IsLandbouw 
						? 'Indicatoren/Y2050/Landgebruikskaart/Result_SA == LU_ModelType/v/'+LU_ModelType/label+'
							? VariantData/Suitability/Y2050/Landbouw/per_ModelType/'+LU_ModelType/subsector_name+'/NPV 
								+ float32(Allocatie/Zichtjaren/Y2050/Sequences/Seq_0/SectorAllocRegios/Landbouw_Provincie/Iters_Landbouw/Iter_0/Allocatie/shadow_prices/'+LU_ModelType/subsector_name+'[/SourceData/RegioIndelingen/CBS/Y2022/Provincie/StudyArea/V/Friesland])
							: 0[Eur_m2]'
						: 'const(0[Eur_m2], rdc_25m)'
				, rdc_25m
				, Eur_m2
			);
			
			
	}
	
	// Veranderingen totaal areaal alle klassen (LUmodeltypes)
	attribute<Ha>     Verandering_Areaal_perLUMT      (LU_ModelType) := impl/Y2050_Areaal_perLUMT - impl/Basisjaar_Areaal_perLUMT;
	
	// Veranderingen totaal areaal sector landbouw 
	parameter<Ha>     Verandering_Areaal_Landbouw                    := impl/Y2050_Areaal_Landbouw - impl/Basisjaar_Areaal_Landbouw;
	
	// Verandering netto opbrengsten in euroâ€™s (bedrijfwinst) tussen basisjaar en 2050
	parameter<Eur_ha> Verandering_NettoOpbrengst_gemid_perHa         := impl/Y2050_NettoOpbrengsten_perLUMT/Gemiddeld_perHa - impl/Basisjaar_NettoOpbrengsten_perLUMT/Gemiddeld_perHa;
	parameter<Eur>    Verandering_NettoOpbrengst_Totaal_Studiegebied := impl/Y2050_NettoOpbrengsten_perLUMT/Totaal_Studiegebied - impl/Basisjaar_NettoOpbrengsten_perLUMT/Totaal_Studiegebied;
	
	// CO2 emissies, mton en eur, via prijs
	parameter<ton_jaarlijks>    Basisjaar_CO2_Uitstoot     := sum(/Indicatoren/Y2050/SOMERS_CO2_laagveen/Mediaan_Uitstoot) * 1[ha];
	parameter<ton>              Cumulatief_CO2_Uitstoot    := sum(/Indicatoren/Y2050/SOMERS_CO2_laagveen/Cumulatief_Mediaan_sindsStartyear) * 1[ha];
	parameter<Eur>              Cumulatief_CO2_kosten_laag := Cumulatief_CO2_Uitstoot * /ModelParameters/CO2_prijs_min;
	parameter<Eur>              Cumulatief_CO2_kosten_hoog := Cumulatief_CO2_Uitstoot * /ModelParameters/CO2_prijs_max;
	
	container Transitie_Matrix := 
		for_each_nedv(
			Actor/LU_ModelType/nameshort
			, 'impl/LU_ModelType_Transities/count[value(id(Actor/LU_ModelType)*#Actor/LU_ModelType+'+string(id(Actor/LU_ModelType))+', impl/LU_ModelType_Transities)]'
			, Actor/LU_ModelType
			, uint32
		)
	{
		attribute<string> from  (Actor/LU_ModelType) := Actor/LU_ModelType/nameshort;
	}
	
	container mean_NPV_obv_LUbasisjaar_perLBK :=
		for_each_nedv(
			LandbouwK/name
			, 'mean(impl/Basisjaar_NPV_perLUMT/Landbouw_'+LandbouwK/name+')'
			, void
			, Eur_m2
		);
		
	container mean_NPV_obv_LUY2050_perLBK_zonderAugm :=
		for_each_nedv(
			LandbouwK/name
			, 'mean(impl/Y2050_NPV_perLUMT/Landbouw_'+LandbouwK/name+')'
			, void
			, Eur_m2
		);
	
	container mean_NPV_obv_LUY2050_perLBK_Augmented :=
		for_each_nedv(
			LandbouwK/name
			, 'mean(impl/Y2050_NPV_Augmented_perLUMT/Landbouw_'+LandbouwK/name+')'
			, void
			, Eur_m2
		);
	
	container Bereikbaarheid_GroenBlauw 
	{
		parameter<string> Param_Afstand := 'Tot500m'; //opties: Tot500m Tot1000m
		parameter<string> Param_Type    := 'Aanwezig'; //opties: Aanwezig Beschikbaar Bereikbaar
		
		unit<uint8> GroenBlauwK := Indicatoren/Basisjaar/BereikbaarheidGroen/GroenBlauwK;
		
		container Basisjaar := 
			for_each_nedv(
				GroenBlauwK/name
				, 'Indicatoren/Basisjaar/BereikbaarheidGroen/Afstanden/'+Param_Afstand+'/AggrGroenKlassen/'+GroenBlauwK/name+'/Indicatoren/'+Param_Type+'/Groen/Aggregated/PerWoning'
				, void
				, m2_Woning
			);
		container Y2050 := 
			for_each_nedv(
				GroenBlauwK/name
				, 'Indicatoren/Y2050/BereikbaarheidGroen/Afstanden/'+Param_Afstand+'/AggrGroenKlassen/'+GroenBlauwK/name+'/Indicatoren/'+Param_Type+'/Groen/Aggregated/PerWoning'
				, void
				, m2_Woning
			);
	}  



	// unit<uint32> Time: NrOfRows = 2
	// {
		// attribute<string> name: ['Basisjaar', 'Y2050'];
	// }
	
	// unit<uint32> Totaal: NrOfRows = 1
	// {
		// attribute<string> name: ['Totaal'];
	// }
	
	// unit<uint32> Provincie := SourceData/RegioIndelingen/Provincie
	// {
		// attribute<.> Per_AdminDomain (AdminDomain) := poly2grid(Geometry, AdminDomain);
	// }
	
	// unit<uint32> ProvincieTotaal := union_unit(Provincie, Totaal)
	// {
		// attribute<string> name  := union_data(., Provincie/name, Totaal/name);
		// attribute<string> label := name, DialogType = "LabelText";
	// }
	
	// container Grondgebruiksverandering
	// {
		// container Per_Provincie := 
		// for_each_nedv(
			// /Indicatoren/Y2050/Grondgebruik/Verandering/VeranderingK/name,
			// '/Indicatoren/Y2050/Grondgebruik/Verandering/Per_Regio/'+/Indicatoren/Y2050/Grondgebruik/Verandering/VeranderingK/name,
			// Provincie, ha
		// );
		
		// container Result :=
			// for_each_nedv(
				// /Indicatoren/Y2050/Grondgebruik/Verandering/VeranderingK/name,
				// replace(
					// 'union_data(
						// ProvincieTotaal, '+
						// AsItemList('Per_Provincie/@V@[Provincie/V/'+Provincie/name+']')+',
						// /Indicatoren/Y2050/Grondgebruik/Verandering/Per_NL0/@V@
					// )',
					// '@V@', /Indicatoren/Y2050/Grondgebruik/Verandering/VeranderingK/name
				// ),
				// ProvincieTotaal, ha
			// )
		// {
			// attribute<string> Regio_name (ProvincieTotaal):= ProvincieTotaal/name;
		// }
	// }
	
	// container BereikbaarheidGroen
	// {
		// parameter<string> Afstand: ['Tot500m'];
		// parameter<string> Indicator: ['Bereikbaar'];
		
		// unit<uint32> GroenK: NrOfRows = 2
		// {
			// attribute<string> name: ['Totaal', 'TotaalExAgrarisch'];
		// }
		
		// unit<uint32> GroenXTime := combine(GroenK, Time)
		// {
			// attribute<string> Groen_name := GroenK/name[first_rel];
			// attribute<string> Time_name := Time/name[second_rel];
			// attribute<string> name := Groen_name+'_'+Time_name;
		// }
		
		// container Result :=
			// for_each_nedv(
				// GroenXTime/name,
				// 'union_data(
					// ProvincieTotaal,'+
					// replace(
						// AsItemList('@T@/BereikbaarheidGroen/Regios/'+ProvincieTotaal/name+'/Afstanden/@A@/AggrGroenKlassen/@G@/Indicatoren/@I@/Groen/Aggregated/PerWoning'),
						// '@T@', GroenXTime/Time_name, '@A@', Afstand, '@G@', GroenXTime/Groen_name, '@I@', Indicator
					// )+
				// ')[ha_woning]',
				// ProvincieTotaal, ha_Woning
			// )
		// {
			// attribute<string> Regio_name (ProvincieTotaal):= ProvincieTotaal/name;
		// }
	// }
	
	// container Verharding
	// {
		// container Provincies := for_each_nedv(
			// Provincie/name,
			// '/Indicatoren/Y2050/Verharding/Per_Regio/fractie[/Indicatoren/Y2050/Verharding/Regio/V/'+Provincie/name+']',
			// void, float32
		// );
		
		// attribute<float32> Result (ProvincieTotaal) := = 'union_data(ProvincieTotaal, '+AsItemList('Provincies/'+Provincie/name)+', /Indicatoren/Y2050/Verharding/Per_NL/fractie)';
	// }
	
	// container Dichtheid
	// {
		// container Wonen
		// {
			// container Provincies := for_each_nedv(
				// Provincie/name,
				// '/Indicatoren/Y2050/Dichtheid/Wonen/Per_Regio[/Indicatoren/Y2050/Dichtheid/Regio/V/'+Provincie/name+']',
				// void, Woning_ha
			// );
			
			// attribute<Woning_ha> Result (ProvincieTotaal) := = 'union_data(ProvincieTotaal, '+AsItemList('Provincies/'+Provincie/name)+', /Indicatoren/Y2050/Dichtheid/Wonen/Per_NL)';
		// }
		
		// container Werken
		// {
			// container Provincies := for_each_nedv(
				// Provincie/name,
				// '/Indicatoren/Y2050/Dichtheid/Werken/Banen_ha/Per_Regio[/Indicatoren/Y2050/Dichtheid/Regio/V/'+Provincie/name+']',
				// void, Job_ha
			// );
			
			// attribute<Job_ha> Result (ProvincieTotaal) := = 'union_data(ProvincieTotaal, '+AsItemList('Provincies/'+Provincie/name)+', /Indicatoren/Y2050/Dichtheid/Werken/Banen_ha/Per_NL)';
		// }
	// }
	
	// container Woningvoorraad
	// {
		// attribute<string> name      (Provincie) := Provincie/name;
		// attribute<Woning> Basisjaar (Provincie) := sum(/Indicatoren/Basisjaar/Stand/Aantal_Woningen_Totaal, Provincie/Per_AdminDomain);
		// attribute<Woning> Zichtjaar (Provincie) := sum(/Indicatoren/Y2050/Stand/Aantal_Woningen_Totaal,     Provincie/Per_AdminDomain);
	// }
	
	// container Bereikbaarheid := 
		// for_each_nedv(
			// Y2050/Bereikbaarheid/TTxJobs6/itemname
			// , 'Y2050/Bereikbaarheid/Output_PerBuurtPerSector/'+Y2050/Bereikbaarheid/TTxJobs6/itemname
			// , Y2050/Bereikbaarheid/Buurt 
			// , Job
		// ), StorageName = "='%LocalDataProjDir%/Indicatoren/Bereikbaarheid/PerBuurt_PerSector_'+Casus_name+'_Y2050.csv'", StorageType = "gdalwrite.vect"
	// {
		// attribute<string> BU_CODE (Y2050/Bereikbaarheid/Buurt) := Y2050/Bereikbaarheid/Buurt/BU_CODE;
	// }
	
	// parameter<string> Generate := 'Ready', ExplicitSuppliers = "='Bereikbaarheid/BU_CODE;'+AsList('Bereikbaarheid/'+Y2050/Bereikbaarheid/TTxJobs6/itemname,';')";
}