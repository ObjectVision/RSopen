container Basisjaar
{
	parameter<string> Zichtjaar             := 'Basisjaar';
	container         ThisYear              := .;
	unit<UInt32>      Subsector             := Classifications/Actor/Sector/xSubsector;
	unit<UInt8>       OP                    := CaseClassifications/Vastgoed/OP;
	unit<UInt8>       WP2                   := Classifications/Vastgoed/WP2;
	unit<UInt8>       WP4                   := Classifications/Vastgoed/WP4;
	unit<UInt8>       WP2xVSSH              := Classifications/Vastgoed/WP2xVSSH;
	unit<UInt8>       vbo_gebruiksdoel_plus := Classifications/Vastgoed/vbo_gebruiksdoel_plus;
	
	
	unit<UInt32> StandVar  := CaseClassifications/StandVar
	{
		attribute<String> quantity_name := is_quantity ? name : '';
		unit<UInt8> OP := CaseClassifications/StandVar/OP;
	}
	
	container Stand :=
		for_each_nedvn(
			CaseClassifications/StandVar_Prep/name
			, 'BaseData/StartState/StateBasisjaar/State/'+CaseClassifications/StandVar_Prep/path
			, AdminDomain
			, CaseClassifications/StandVar_Prep
			, CaseClassifications/StandVar_Prep/unit_name
		)
	{
		attribute<StandVar/OP>             OP_rel            (AdminDomain) := const(value(0/0, StandVar/OP), AdminDomain);
		attribute<Actor/Sector/xSubsector> SubSector_rel     (AdminDomain) := const(value(0/0, Actor/Sector/xSubsector), AdminDomain);
		attribute<Actor/Sector>            Sector_rel        (AdminDomain) := Actor/Sector/XSubsector/Sector_rel[Subsector_rel];
		attribute<Woning> Aantal_Woningen_Totaal             (AdminDomain) := = 'add('+asItemList('Aantal_Woningen_'+/Classifications/Vastgoed/WP2xVSSH/name)+')';
		attribute<Job>    Aantal_Banen_Totaal                (AdminDomain) := = 'add('+asItemList('Banen_'+/Classifications/Actor/Jobs6/name)+')';

		attribute<meter2> Gebruiksopp_Eengezins              (AdminDomain) := recollect_by_cond(AdminDomain/IsCompactedDomain, Gebruiksoppervlak/per_WP2_perAdminDomain/Eengezins);
		attribute<meter2> Gebruiksopp_Meergezins             (AdminDomain) := recollect_by_cond(AdminDomain/IsCompactedDomain, Gebruiksoppervlak/per_WP2_perAdminDomain/Meergezins);
		attribute<meter2> Gebruiksopp_Nijverheid             (AdminDomain) := Gebruiksoppervlak/per_Jobs6_perAdminDomain/Nijverheid;
		attribute<meter2> Gebruiksopp_Logistiek              (AdminDomain) := Gebruiksoppervlak/per_Jobs6_perAdminDomain/Logistiek;
		attribute<meter2> Gebruiksopp_Detailhandel           (AdminDomain) := Gebruiksoppervlak/per_Jobs6_perAdminDomain/Detailhandel;
		attribute<meter2> Gebruiksopp_Ov_consumentendiensten (AdminDomain) := Gebruiksoppervlak/per_Jobs6_perAdminDomain/Ov_consumentendiensten;
		attribute<meter2> Gebruiksopp_Zak_dienstverlening    (AdminDomain) := Gebruiksoppervlak/per_Jobs6_perAdminDomain/Zak_dienstverlening;
		attribute<meter2> Gebruiksopp_Overheid_kw_diensten   (AdminDomain) := Gebruiksoppervlak/per_Jobs6_perAdminDomain/Overheid_kw_diensten;
		
		attribute<meter2> PandFootprint_Wonen                (AdminDomain) := BaseData/StartState/StateBasisjaar/State/Wonen/Footprint;
		attribute<meter2> PandFootprint_Werken               (AdminDomain) := BaseData/StartState/StateBasisjaar/State/Verblijfsrecreatie/Footprint;
		attribute<meter2> PandFootprint_Verblijfsrecreatie   (AdminDomain) := BaseData/StartState/StateBasisjaar/State/PandFootprint/Totaal;
		
		container Aantal_Woningen_WP4   := BaseData/StartState/StateBasisjaar/Src0/Wonen/WP4;
		container Gebruiksoppervlak_WP4 := BaseData/StartState/StateBasisjaar/Src0/Wonen/WP4_opp;
	}
	
	container Stand_PerAllocRegio :=
		for_each_nedvn(
			CaseClassifications/StandVar_Prep/name
			, 'sum((Stand/'+CaseClassifications/StandVar_Prep/name+'), SourceData/RegioIndelingen/NVM/Per_AdminDomain)'
			, SourceData/RegioIndelingen/NVM
			, CaseClassifications/StandVar_Prep
			, CaseClassifications/StandVar_Prep/unit_name
		);
	container Stand_metBAGnb_PerAllocRegio :=
		for_each_nedvn(
			CaseClassifications/StandVar_Prep/name
			, 'sum((/Allocatie/StartState_metBAGnieuwbouw/'+CaseClassifications/StandVar_Prep/path+'), SourceData/RegioIndelingen/NVM/Per_CompactedAdminDomain)'
			, SourceData/RegioIndelingen/NVM
			, CaseClassifications/StandVar_Prep
			, CaseClassifications/StandVar_Prep/unit_name
		);
		
	container Landgebruikskaart   := Templates/Landgebruikskaart/Make_Landgebruikskaart_T('Basisjaar', Stand);
		
	container Gebruiksoppervlak
	{
		unit<UInt32> pand     := ='SourceData/Vastgoed/BAG/PerJaar/Y'+string(ModelParameters/Model_StartYear)+'/pand';
		
		container per_Gebruiksdoel_perAdminDomain :=
			for_each_nedv(
				vbo_gebruiksdoel_plus/name
				, 'sum(pand/Oppervlaktes/VBOopp_perGebruiksdoel/'+vbo_gebruiksdoel_plus/name+'[pand/ToedelingsMatrix/Pand_rel] * pand/ToedelingsMatrix/ToedelingPand, pand/ToedelingsMatrix/AdminDomain_rel)'
				, AdminDomain
				, meter2
			);
		
		container per_Jobs6_perAdminDomain := 
			for_each_nedv(
				Actor/Jobs6/name
				, replace(Actor/Jobs6/vbo_gebruiksdoel_plus_ref, '@', 'per_Gebruiksdoel_perAdminDomain/','#', '')
				, AdminDomain
				, meter2
			);
		
		container per_WP2_perAdminDomain := BaseData/StartState/StateBasisjaar/Src0/Wonen/WP2_opp; 
		container per_WP4_perAdminDomain := BaseData/StartState/StateBasisjaar/Src0/Wonen/WP4_opp; 
		
		container per_WP2xVSSH_perAdminDomain := 
			for_each_nedv(
				WP2xVSSH/name
				, 'recollect_by_cond(AdminDomain/IsCompactedDomain, BaseData/StartState/Verdeling_VSSH/Uitsmeren_WP2_'+WP2xVSSH/VSSH_name+'/'+WP2xVSSH/WP_name+'/VBOopp_Per_CompactedAdminDomain)'
				, AdminDomain
				, meter2
			);
	}
	
	container Grondgebruik
	{
		attribute<Classifications/Grondgebruik/CBSKlasse/Aggr/Groen> Groen      (AdminDomain) := invert(/Classifications/Grondgebruik/CBSKlasse/Aggr/Groen/org_rel)[/BaseData/StartState/Grondgebruik/Per_AdminDomain/gg_CBS/Per_Aggr];
		attribute<Classifications/Actor/Sector>                      Sector_rel (AllocDomain) := Classifications/Grondgebruik/CBSKlasse/Sector_rel[BaseData/StartState/Grondgebruik/Per_AllocDomain/Basisjaar];
		
		attribute<Classifications/Actor/LU_ModelType>                gg_basis   (AdminDomain) := BaseData/StartState/Grondgebruik/Per_AdminDomain/gg_basis;
	}
	
	container Overstromingsschade := Templates/SSM2017_Overstromingsschades_T('Basisjaar'), Descr = "SSM Model van Deltares nagebouwd in RuimteScanner; Slager, K. (2016). Technische documentatie SSM2015: functionele en technische ontwerpkeuzen. Deltares rapportage 1230095-004-HYE-0009 dd. november 2016 ";
	container BereikbaarheidGroen := Templates/BereikbaarheidGroen(., 'Basisjaar');
}