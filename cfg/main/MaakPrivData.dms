container WritePrivData : using = "classifications;geography"
{
	parameter<String> Generate_PrivData := Grondposities/Generate;
	
	container Grondposities
	{
		parameter<String> Generate := Generate1 + Generate2 + Generate3;
		parameter<String> Generate1 := 'Ready', ExplicitSuppliers = "PrivData/Impl/Make_Grondposities/Geometry";
		parameter<String> Generate2 := 'Ready', ExplicitSuppliers = "/SourceData/Actoren/Grondposities/Write_Per_AllocDomain_EigendomK_rel";
		parameter<String> Generate3 := 'Ready', ExplicitSuppliers = "/SourceData/Actoren/Grondposities/Write_Per_AdminDomain_EigendomK_rel";
	}
	
	container Claims := 
		for_each_ne(
			Modellering/Scenario_x_Variant_x_Zichtjaar/name
			, 'Gen_T('+quote(Modellering/Scenario_x_Variant_x_Zichtjaar/name)+')'
		)
	{
		parameter<string> Generate        := = AsList(Modellering/Scenario_x_Variant_x_Zichtjaar/name+'/Generate', '+ ');
	}
		
	Template Gen_T 
	{
		parameter<string> ScenVarJaar_name;
		///
		parameter<string> Scenario_name  := rjoin(ScenVarJaar_name, Modellering/Scenario_x_Variant_x_Zichtjaar/name, Modellering/Scenario_x_Variant_x_Zichtjaar/Scenario_name);
		parameter<string> Variant_name   := rjoin(ScenVarJaar_name, Modellering/Scenario_x_Variant_x_Zichtjaar/name, Modellering/Scenario_x_Variant_x_Zichtjaar/Variant_name);
		parameter<string> Zichtjaar_name := rjoin(ScenVarJaar_name, Modellering/Scenario_x_Variant_x_Zichtjaar/name, Modellering/Scenario_x_Variant_x_Zichtjaar/Zichtjaar_name);

		parameter<String> Generate_Wonen  := 'Ready', ExplicitSuppliers = "=AsList('Analysis/Claims/Src/'+Zichtjaar_name+'/woningen/'+Scenario_name+'/'+Variant_name+'/AllocRegios/'+Modellering/AllocRegiosK/name+'/Write',';')";
		parameter<String> Generate_Werken := 'Ready', ExplicitSuppliers = "=AsList('Analysis/Claims/Src/'+Zichtjaar_name+'/Banen/'+Scenario_name+'/'+Variant_name+'/AllocRegios/'+Modellering/AllocRegiosK/name+'/Write',';')";
		parameter<string> Generate        := Generate_Wonen + Generate_Werken; 
	}
	
	container LISA
	{
		unit<uint32> Read_LISA_2019_shp
		: StorageName     = "%PrivdataDir%/LISA/LISA2019_2019.shp"
		, StorageReadOnly = "True"
		, StorageType     = "gdal.vect"
		{
			attribute<rdc_meter> geometry;
		}
		
		unit<uint32> Make_LISA_2019_fss := Read_LISA_2019_shp, StorageName = "%PrivDataDir%/LISA/LISA2019.fss"
		{
			attribute<rdc_meter> geometry := Read_LISA_2019_shp/geometry;
			attribute<string>    SBI08    := Read_LISA_2019_shp/SBI08;
			attribute<uint32>    banen    := Read_LISA_2019_shp/banen[uint32];
		}
		
		unit<uint32> Read
		: StorageName = "='%PrivDataDir%/LISA/LISA2019.fss'"
		, StorageReadOnly = "true"
		, DialogType = "map"
		, DialogData = "geometry"
		{
			attribute<rdc_meter> geometry;
			attribute<uint32> banen;
			attribute<string> sbi08;
			attribute<Actor/TXLJobs7>        TXLJobs7_rel        := rjoin(SBI08, Actor/SBI08/SBI2008, Actor/SBI08/TXLJobs7_rel); 
			
			container Per_TXLJobs7 :=
				for_each_nedv(
					Actor/TXLJobs7/name
					, 'sum(int32(banen) * int32(TXLJobs7_rel == '+string(id(Actor/TXLJobs7))+'[Actor/TXLJobs7]), geometry[AdminDomain])[Job]'
					, AdminDomain
					, Job
				)
			{
				attribute<Job> Totaal                (AdminDomain) := = 'add('+AsItemList(Actor/TXLJobs7/name)+')';
			}
		}
	}
}