////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Dit is RSOpen, de open source versie van het model RuimteScanner. Het scipt wordt uitgegeven onder GNU-GPL licentie.
//
// RSOpen is ontwikkeld door PBL Planbureau voor de Leefomgeving, i.s.m Object Vision B.V. en VU Vrije Universiteit Amsterdam.
// Opdrachtgever/ontwikkelaar PBL: Bart Rijken
// Contactpersoon/ontwikkelaar Object Vision B.V.: Jip Claassens (jclaassens@objectvision.nl)
// Contacpersoon PBL: Bas van Bemmel (Bas.vanBemmel@pbl.nl)
//
// Deze file specificeert de opties die virtuele projectontwikkelaars hebben t.a.v. de stedenbouwkiundige inrichting van gridcellen (AlocDomain) nieuw woongebied 
// Bron: expert judgement PBL
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

container Ontwikkelpakketten
{
	#include<Default.dms>
	
	// unit<uint8> BAU := Default;
	
	// Template T
	// {
		
		// parameter<string> Variant_name;
		// container Src;
		// unit<uint8> SrcUnit;
		
		
		// attribute<float32> Verhard      (SrcUnit) := = 'min_elem(Src/Verhard * VariantK/VerhardingTovDefault[VariantParameters/VariantK/V/'+Variant_name+'], 1f)';
		// attribute<float32> GroenTotaal  (SrcUnit) := 1f - Verhard;
		// attribute<float32> GroenTotaal0 (SrcUnit) := add(Src/Boom, Src/Gras, Src/Struik);
		// attribute<float32> Gras         (SrcUnit) := MakeDefined(Src/Gras   / GroenTotaal0 * GroenTotaal, 0f);
		// attribute<float32> Struik       (SrcUnit) := MakeDefined(Src/Struik / GroenTotaal0 * GroenTotaal, 0f);
		// attribute<float32> Boom         (SrcUnit) := MakeDefined(Src/Boom   / GroenTotaal0 * GroenTotaal, 0f);
	// }
	
	Template InNettoBuurt_T
	{
		//
		unit<uint8> SrcUnit;
		container InUitgeefbaarExPandfootprint;
		container InOpenbaar;
		//
		
		attribute<Terreinoppervlak> TerreinoppervlakteNettoBuurt (SrcUnit) := SrcUnit/TerreinoppervlakteNettoBuurt
		{
			attribute<Terreinoppervlak> Uitgeefbaar (SrcUnit) := . * SrcUnit/FractieUitgeefbaar
			{
				attribute<Terreinoppervlak> GebouwVoetafdruk (SrcUnit) := .. * SrcUnit/GSINettoBuurt; // is per definitie de fractie voetafdruk van terreinopp nettobuurt; mag niet hoger zijn dan FractieUitgeefbaar
				attribute<Terreinoppervlak> Buitenruimte     (SrcUnit) := . - GebouwVoetafdruk
				{
					attribute<Terreinoppervlak> Verhard (SrcUnit) := . * InUitgeefbaarExPandfootprint/Verhard;
					attribute<Terreinoppervlak> Groen   (SrcUnit) := . * InUitgeefbaarExPandfootprint/GroenTotaal
					{
						attribute<Terreinoppervlak> Gras   (SrcUnit) := .. * InUitgeefbaarExPandfootprint/Gras;
						attribute<Terreinoppervlak> Boom   (SrcUnit) := .. * InUitgeefbaarExPandfootprint/Boom;
						attribute<Terreinoppervlak> Struik (SrcUnit) := .. * InUitgeefbaarExPandfootprint/Struik;
					}
				}
			}
			
			attribute<Terreinoppervlak> Openbaar (SrcUnit):= . * (1f - SrcUnit/FractieUitgeefbaar)
			{
				attribute<Terreinoppervlak> Verhard (SrcUnit) := . * InOpenbaar/Verhard;
				attribute<Terreinoppervlak> Groen   (SrcUnit) := . * InOpenbaar/GroenTotaal
				{
					attribute<Terreinoppervlak> Gras   (SrcUnit) := .. * InOpenbaar/Gras;
					attribute<Terreinoppervlak> Boom   (SrcUnit) := .. * InOpenbaar/Boom;
					attribute<Terreinoppervlak> Struik (SrcUnit) := .. * InOpenbaar/Struik;
				}
			}
		}
		
		attribute<Terreinoppervlak> Verhard (SrcUnit) := add(
			TerreinoppervlakteNettoBuurt/Uitgeefbaar/GebouwVoetafdruk,
			TerreinoppervlakteNettoBuurt/Uitgeefbaar/Buitenruimte/Verhard,
			TerreinoppervlakteNettoBuurt/Openbaar/Verhard
		);
		
		container FractiesGroen // tov TerreinoppervlakteNettoBuurt
		{
			attribute<float32> Gras   (SrcUnit) := div(add(TerreinoppervlakteNettoBuurt/Uitgeefbaar/Buitenruimte/Groen/Gras,   TerreinoppervlakteNettoBuurt/Openbaar/Groen/Gras),   TerreinoppervlakteNettoBuurt);
			attribute<float32> Boom   (SrcUnit) := div(add(TerreinoppervlakteNettoBuurt/Uitgeefbaar/Buitenruimte/Groen/Boom,   TerreinoppervlakteNettoBuurt/Openbaar/Groen/Boom),   TerreinoppervlakteNettoBuurt);
			attribute<float32> Struik (SrcUnit) := div(add(TerreinoppervlakteNettoBuurt/Uitgeefbaar/Buitenruimte/Groen/Struik, TerreinoppervlakteNettoBuurt/Openbaar/Groen/Struik), TerreinoppervlakteNettoBuurt);
			
			attribute<float32> Totaal (SrcUnit) := add(Gras, Boom, Struik);
		}
	}
}