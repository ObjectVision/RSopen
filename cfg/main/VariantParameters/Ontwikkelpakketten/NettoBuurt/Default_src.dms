////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Dit is RSOpen, de open source versie van het model RuimteScanner. Het scipt wordt uitgegeven onder GNU-GPL licentie.
//
// RSOpen is ontwikkeld door PBL Planbureau voor de Leefomgeving, i.s.m Object Vision B.V. en VU Vrije Universiteit Amsterdam.
// Opdrachtgever/ontwikkelaar PBL: Bart Rijken
// Contactpersoon/ontwikkelaar Object Vision B.V.: Jip Claassens (jclaassens@objectvision.nl)
// Contacpersoon PBL: Bas van Bemmel (Bas.vanBemmel@pbl.nl)
//
// Deze file specificeert een selectie aan default opties die virtuele projectontwikkelaars hebben t.a.v. de stedenbouwkiundige inrichting van gridcellen (AlocDomain) nieuw woongebied 
// Bron: expert judgement PBL
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

unit<UInt8> Default_src : NrOfRows = 27
//                               1  2      3    4  5     6    7    8     9     10   =  11    12        13             14      15    16     17      18    19     20    21     22      23     24    25      26   
{//                                                                                 Netto Buurt                                                                                                                
	unit<UInt32> Elements := Range(uint32, 0, nrAttr * #.) //                                                     Samen 1 (= Netto Buurt ex geb. voetafdr)                                                     
	{ //                                                                                                          Fractie                                      Groen                                           
		attribute<String> Text: [       // Verblijfsobject  Weging locatiekenm.                                   Verhard         Groen          Water         Uitgeefbaar          Openbaar                   
	 // Name                 , WP2 vssh  Opp Kam Bad Park    Nat,  OV Amenit Groen, FSI  GSI,     WP4_ref         Uitgeefb  Openb Uitg   Openb   Uitg  Openb   Boom   Gras  Struik  Boom,  Gras, Struik BrutoTovNettoBuurt (1,13 gemiddeld)
		 'SuperStedelijkMGVS','MG','VS', '75','3','1', '0','1.0','1.0','1.0','1.0','2.80','0.40','appartement'     ,'0.80','0.90','0.12','0.06','0.08','0.04','0.05','0.15','0.05','0.08','0.07','0.03', '1.13',
		 'HoogStedelijkMGVS' ,'MG','VS', '85','3','1', '0','1.0','1.0','1.0','1.0','1.50','0.30','appartement'     ,'0.80','0.80','0.12','0.12','0.08','0.08','0.05','0.15','0.05','0.08','0.15','0.05', '1.13',
		 'StedelijkerMGVS'   ,'MG','VS', '90','3','1', '1','1.0','1.0','1.0','1.0','0.90','0.30','appartement'     ,'0.80','0.75','0.12','0.15','0.08','0.10','0.05','0.15','0.05','0.12','0.15','0.10', '1.13',
		 'StedelijkMGVS'     ,'MG','VS', '95','3','1', '1','1.0','1.0','1.0','1.0','0.75','0.25','appartement'     ,'0.80','0.75','0.12','0.15','0.08','0.10','0.05','0.15','0.05','0.12','0.15','0.10', '1.13',
		 'LaagStedelijkMGVS' ,'MG','VS','100','3','1', '1','1.0','1.0','1.0','1.0','0.60','0.30','appartement'     ,'0.60','0.70','0.24','0.18','0.16','0.12','0.20','0.30','0.10','0.15','0.18','0.12', '1.13',
		 'LagerStedelijkMGVS','MG','VS','105','4','1', '1','1.0','1.0','1.0','1.0','0.50','0.25','appartement'     ,'0.60','0.70','0.24','0.18','0.16','0.12','0.20','0.30','0.10','0.15','0.18','0.12', '1.13',
		 'DorpsMGVS'         ,'MG','VS','105','4','1', '1','1.0','1.0','1.0','1.0','0.40','0.20','appartement'     ,'0.60','0.70','0.24','0.18','0.16','0.12','0.20','0.30','0.10','0.15','0.18','0.12', '1.13',
		 
		 'StedelijkerEGVS'   ,'EG','VS','115','4','1', '1','1.0','1.0','1.0','1.0','1.00','0.40','rijtjeswoning'   ,'0.50','0.65','0.30','0.21','0.02','0.14','0.25','0.40','0.10','0.15','0.25','0.10', '1.13',
		 'StedelijkEGVS'     ,'EG','VS','125','5','1', '1','1.0','1.0','1.0','1.0','0.88','0.35','rijtjeswoning'   ,'0.50','0.65','0.30','0.21','0.02','0.14','0.25','0.40','0.10','0.15','0.25','0.10', '1.13',
		 'LaagStedelijkEGVS' ,'EG','VS','140','5','1', '1','1.0','1.0','1.0','1.0','0.63','0.25','rijtjeswoning'   ,'0.40','0.60','0.36','0.24','0.24','0.16','0.25','0.50','0.10','0.15','0.30','0.10', '1.13',
		 'LagerStedelijkEGVS','EG','VS','150','5','1', '1','1.0','1.0','1.0','1.0','0.50','0.20','rijtjeswoning'   ,'0.40','0.60','0.36','0.24','0.24','0.16','0.25','0.50','0.10','0.15','0.30','0.10', '1.13',
		 'DorpsLandelijkEGVS','EG','VS','160','6','2', '1','1.0','1.0','1.0','1.0','0.38','0.15','twee_onder_1_kap','0.10','0.15','0.54','0.51','0.36','0.34','0.35','0.80','0.10','0.40','0.60','0.25', '1.13',
		 'DorpsLandLaagEGVS' ,'EG','VS','160','6','2', '1','1.0','1.0','1.0','1.0','0.16','0.08','vrijstaand'      ,'0.10','0.15','0.54','0.51','0.36','0.34','0.45','0.80','0.10','0.40','0.60','0.25', '1.13',
		 'TinyHousesEGVS'    ,'EG','VS', '25','2','1', '1','1.0','1.0','1.0','1.0','0.05','0.05','vrijstaand'      ,'0.05','0.10','0.57','0.54','0.38','0.36','0.45','0.80','0.15','0.50','0.65','0.25', '1.13',
		 'TinyHousesLaagEGVS','EG','VS', '25','2','1', '1','1.0','1.0','1.0','1.0','0.03','0.03','vrijstaand'      ,'0.05','0.10','0.57','0.54','0.38','0.36','0.45','0.80','0.15','0.50','0.65','0.25', '1.13',
		 
		 'SuperStedelijkMGSH','MG','SH', '65','1','1', '0','0.5','0.5','0.5','0.5','2.80','0.40','appartement'     ,'0.80','0.90','0.06','0.06','0.04','0.04','0.03','0.08','0.02','0.08','0.07','0.03', '1.13',
		 'HoogStedelijkMGSH' ,'MG','SH', '75','1','1', '0','0.5','0.5','0.5','0.5','1.50','0.30','appartement'     ,'0.80','0.80','0.06','0.12','0.04','0.08','0.03','0.08','0.02','0.08','0.15','0.05', '1.13',
		 'StedelijkerMGSH'   ,'MG','SH', '80','2','1', '0','0.5','0.5','0.5','0.5','0.90','0.30','appartement'     ,'0.80','0.75','0.06','0.15','0.04','0.10','0.03','0.08','0.02','0.12','0.15','0.10', '1.13',
		 'StedelijkMGSH'     ,'MG','SH', '85','2','1', '0','0.5','0.5','0.5','0.5','0.75','0.25','appartement'     ,'0.80','0.75','0.06','0.15','0.04','0.10','0.03','0.08','0.02','0.12','0.15','0.10', '1.13',
		 'LaagStedelijkMGSH' ,'MG','SH', '90','3','1', '0','0.5','0.5','0.5','0.5','0.60','0.30','appartement'     ,'0.60','0.70','0.18','0.18','0.12','0.12','0.15','0.25','0.05','0.15','0.18','0.12', '1.13',
		 'LagerStedelijkMGSH','MG','SH', '95','3','1', '0','0.5','0.5','0.5','0.5','0.50','0.25','appartement'     ,'0.60','0.70','0.18','0.18','0.12','0.12','0.15','0.25','0.05','0.15','0.18','0.12', '1.13',
		 'DorpsMGSH'         ,'MG','SH', '95','3','1', '0','0.5','0.5','0.5','0.5','0.40','0.20','appartement'     ,'0.60','0.70','0.18','0.18','0.12','0.12','0.15','0.25','0.05','0.15','0.18','0.12', '1.13',
		 
		 'StedelijkerEGSH'   ,'EG','SH','100','3','1', '0','0.5','0.5','0.5','0.5','1.00','0.40','rijtjeswoning'   ,'0.50','0.65','0.24','0.21','0.16','0.14','0.20','0.35','0.05','0.15','0.25','0.10', '1.13',
		 'StedelijkEGSH'     ,'EG','SH','105','3','1', '0','0.5','0.5','0.5','0.5','0.88','0.35','rijtjeswoning'   ,'0.50','0.65','0.24','0.21','0.16','0.14','0.20','0.35','0.05','0.15','0.25','0.10', '1.13',
		 'LaagStedelijkEGSH' ,'EG','SH','115','3','1', '0','0.5','0.5','0.5','0.5','0.63','0.25','rijtjeswoning'   ,'0.40','0.60','0.30','0.24','0.20','0.16','0.20','0.45','0.05','0.15','0.30','0.10', '1.13',
		 'LagerStedelijkEGSH','EG','SH','120','3','1', '0','0.5','0.5','0.5','0.5','0.50','0.20','rijtjeswoning'   ,'0.40','0.60','0.30','0.24','0.20','0.16','0.20','0.45','0.05','0.15','0.30','0.10', '1.13',
		 'DorpsLandelijkEGSH','EG','SH','130','4','1', '1','0.5','0.5','0.5','0.5','0.38','0.15','twee_onder_1_kap','0.10','0.15','0.54','0.51','0.36','0.34','0.35','0.80','0.10','0.40','0.60','0.25'  '1.13'
		];
	}
	
	attribute<String>               name                   := Elements/Text[value(uint32(id(.))* nrAttr +  0, Elements)], Descr = "De naam van het ontwikkelpakket";
	attribute<String>               WP2_name_short         := Elements/Text[value(uint32(id(.))* nrAttr +  1, Elements)], Descr = "De WP2 classificatie van het ontwikkelpakket, verkorte naam";
	attribute<String>               VSSH_name_short        := Elements/Text[value(uint32(id(.))* nrAttr +  2, Elements)], Descr = "De VSSH classificatie van het ontwikkelpakket, verkorte naam";
	attribute<Woonoppervlak_Woning> Woonoppervlakte_woning := Elements/Text[value(uint32(id(.))* nrAttr +  3, Elements)][Woonoppervlak_Woning], Descr = "De gemiddelde woonoppervlakte per woning in m2 BVO";
	attribute<UInt32>               Aant_kamers            := Elements/Text[value(uint32(id(.))* nrAttr +  4, Elements)][uint32], Descr = "Het gemiddelde aantal kamers per woning";
	attribute<UInt32>               Aant_badkamers         := Elements/Text[value(uint32(id(.))* nrAttr +  5, Elements)][uint32], Descr = "Het gemiddelde aantal badkamers per woning";
	attribute<Bool>                 HeeftPriveParkeren     := Elements/Text[value(uint32(id(.))* nrAttr +  6, Elements)][bool], Descr = "Geeft aan of er bij de woningen in dit ontwikkelpakket sprake is van privé parkeermogelijkheden (op eigen terrein)";
	
	// Wegingsfactoren ten aanzien van centraliteit/bereikbaarheid,  de nabijheid van amenities (Voorzieningen) en de nabijheid van groen.
	attribute<Float32>              Weging_NatNiv      := Elements/Text[value(uint32(id(.))* nrAttr +  7, Elements)][float32], Descr = "Wegingsfactor voor de invloed van nationale niveaus (proxy voor Randstad-NietRandstad) op de woningprijs";
	attribute<Float32>              Weging_NatOV       := Elements/Text[value(uint32(id(.))* nrAttr +  8, Elements)][float32], Descr = "Wegingsfactor voor de invloed van nationale OV (proxy voor grotere steden) op de woningprijs";
	attribute<Float32>              Weging_Amenities   := Elements/Text[value(uint32(id(.))* nrAttr +  9, Elements)][float32], Descr = "Wegingsfactor voor de invloed van de nabijheid van amenities (voorzieningen) op de woningprijs";
	attribute<Float32>              Weging_GroenNabij  := Elements/Text[value(uint32(id(.))* nrAttr + 10, Elements)][float32], Descr = "Wegingsfactor voor de invloed van de nabijheid van groen op de woningprijs";
	
	attribute<FSI>                  FloorSpaceIndex    := Elements/Text[value(uint32(id(.))* nrAttr + 11, Elements)][float32], Descr = "De Floor Space Index (FSI) van het ontwikkelpakket, oftewel de verhouding tussen de totale vloeroppervlakte van alle gebouwen en de terreinoppervlakte van de netto buurt";
	attribute<GSI>                  GroundSpaceIndex   := Elements/Text[value(uint32(id(.))* nrAttr + 12, Elements)][float32], Descr = "De Ground Space Index (GSI) van het ontwikkelpakket, oftewel de verhouding tussen de footprint van alle gebouwen en de terreinoppervlakte van de netto buurt";
	attribute<String>               WP4_name           := Elements/Text[value(uint32(id(.))* nrAttr + 13, Elements)], Descr = "De WP4 classificatie van het ontwikkelpakket, volledige naam";
	
	attribute<Classifications/Vastgoed/WP4> WP4_rel := rlookup(lowercase(WP4_name), lowercase(/Classifications/Vastgoed/WP4/name)), Descr = "De WP4 classificatie van het ontwikkelpakket";
	
	parameter<UInt32> nrAttr := 26;

	container InUitgeefbaarExPandFootprint: Descr = "De inrichting van het uitgeefbaar deel van de netto buurt exclusief de footprint van de panden"
	{
		attribute<Float32> Verhard (..) := Elements/Text[value(uint32(id(..))* nrAttr + 14, Elements)][float32];
		attribute<Float32> Groen   (..) := Elements/Text[value(uint32(id(..))* nrAttr + 16, Elements)][float32];
		attribute<Float32> Water   (..) := Elements/Text[value(uint32(id(..))* nrAttr + 18, Elements)][float32];
		attribute<Float32> Boom0   (..) := Elements/Text[value(uint32(id(..))* nrAttr + 20, Elements)][float32];
		attribute<Float32> Gras0   (..) := Elements/Text[value(uint32(id(..))* nrAttr + 21, Elements)][float32];
		attribute<Float32> Struik0 (..) := Elements/Text[value(uint32(id(..))* nrAttr + 22, Elements)][float32];
		attribute<Float32> Groen0  (..) := add(Boom0, Gras0, Struik0);
		
		//Schalen omdat groen Totaal bij nader inzien moest optellen tot fractie groen
		attribute<Float32> Boom   (..) := Boom0   / Groen0 * Groen;
		attribute<Float32> Gras   (..) := Gras0   / Groen0 * Groen;
		attribute<Float32> Struik (..) := Struik0 / Groen0 * Groen;
	}
	
	container InOpenbaar: Descr = "De inrichting van het openbare deel van de netto buurt"
	{
		attribute<Float32> Verhard (..) := Elements/Text[value(uint32(id(..))* nrAttr + 15, Elements)][float32];
		attribute<Float32> Groen   (..) := Elements/Text[value(uint32(id(..))* nrAttr + 17, Elements)][float32];
		attribute<Float32> Water   (..) := Elements/Text[value(uint32(id(..))* nrAttr + 19, Elements)][float32];
		attribute<Float32> Boom0   (..) := Elements/Text[value(uint32(id(..))* nrAttr + 23, Elements)][float32];
		attribute<Float32> Gras0   (..) := Elements/Text[value(uint32(id(..))* nrAttr + 24, Elements)][float32];
		attribute<Float32> Struik0 (..) := Elements/Text[value(uint32(id(..))* nrAttr + 25, Elements)][float32];
		attribute<Float32> Groen0  (..) := add(Boom0, Gras0, Struik0);
		
		//Schalen omdat groen Totaal bij nader inzien moest optellen tot fractie groen
		attribute<Float32> Boom   (..) := Boom0   / Groen0 * Groen;
		attribute<Float32> Gras   (..) := Gras0   / Groen0 * Groen;
		attribute<Float32> Struik (..) := Struik0 / Groen0 * Groen;
	}
	
	attribute<Float32> BrutoTovNettoBuurt := Elements/Text[value(uint32(id(..))* nrAttr + 26, Elements)][float32];
	
	attribute<Bool> IsHoogbouw := Bouwlagen * ModelParameters/Wonen/Bouwlaaghoogte > ModelParameters/Wonen/Hoogbouwgrens, Descr = "Geeft aan of het ontwikkelpakket als hoogbouw wordt beschouwd (meer dan X bouwlagen)";
	
	// is per definitie de fractie uitgeefbaar van terreinopp nettobuurt,
	parameter<Float32>                 FractieUitgeefbaar           := /ModelParameters/Wonen/FractieUitgeefbaar, Descr = "De fractie van de terreinoppervlakte die uitgeefbaar wordt gemaakt";
	attribute<Float32>                 Bouwlagen                    := FloorSpaceIndex / GroundSpaceIndex, Descr = "Het gemiddeld aantal bouwlagen van de woningen in het ontwikkelpakket";
	attribute<Woonoppervlak_m2BVO>     Vormfactor                   := WP2_rel == Classifications/Vastgoed/WP2/V/Eengezins ? ModelParameters/Wonen/VormfactorEengezins: IsHoogbouw ? ModelParameters/Wonen/VormfactorHoogbouw: ModelParameters/Wonen/VormfactorMeergezins, Descr = "De vormfactor die aangeeft hoeveel m2 BVO er per m2 footprint is, afhankelijk van het woningtype en of het hoogbouw betreft";
	attribute<m2BVO_Woning>            BVOPerWoning                 := Woonoppervlakte_woning / Vormfactor, Descr = "De gemiddelde footprint van een woning in m2, afgeleid van de Woonoppervlakte_woning en de vormfactor";
	attribute<Woning_ha>               Dichtheid                    := (FloorSpaceIndex * Terreinoppervlakte) / BVOPerWoning / Terreinoppervlakte[ha], Descr = "De dichtheid van het ontwikkelpakket in woningen per hectare, afgeleid van de FSI en de footprint per woning";
	attribute<Woonoppervlak>           Woonoppervlakte              := (Dichtheid[float32] * Woonoppervlakte_woning[float32])[Woonoppervlak], Descr = "De woonoppervlakte per hectare in de netto buurt, afgeleid van de dichtheid en de woonoppervlakte per woning";
	
	container Checks
	{
		attribute<Bool> GSIIsNietGroterDanFractieUitgeefbaar (..) := !(GroundSpaceIndex > FractieUitgeefbaar);
	}
	
	attribute<String>            Label                := name, DialogType = "LabelText";
	attribute<Vastgoed/WP2>      WP2_rel              := lowercase(WP2_name_short) == lowercase('EG') ? rlookup(lowercase('eengezins'), lowercase(Vastgoed/WP2/name)) : rlookup(lowercase('meergezins'), lowercase(Vastgoed/WP2/name));
	attribute<String>            WP2_name             := Vastgoed/WP2/name[WP2_rel];
	attribute<Vastgoed/VSSH>     VSSH_rel             := lowercase(VSSH_name_short) == lowercase('VS') ? rlookup(lowercase('vrijeSector'), lowercase(Vastgoed/VSSH/name)) : rlookup(lowercase('SocialeHuur'), lowercase(Vastgoed/VSSH/name));
	attribute<String>            VSSH_name            := Vastgoed/VSSH/name[VSSH_rel];
	attribute<String>            WP2xVSSH_name        := WP2_name+'_'+VSSH_name;
	attribute<Vastgoed/WP2xVSSH> WP2xVSSH_rel         := rlookup(lowercase(WP2xVSSH_name), lowercase(Vastgoed/WP2xVSSH/name));
	attribute<Sector/xSubsector> SectorxSubSector_rel := Vastgoed/WP2xVSSH/SectorxSubSector_rel[WP2xVSSH_rel];
	
	container perWP2xVSSH := for_each_ne(Vastgoed/WP2xVSSH/name,'perWP2xVSSH_T('+quote(Vastgoed/WP2xVSSH/name)+', ..)');
	container perWP2      := for_each_ne(Vastgoed/WP2/name,'perWP2_T('+quote(Vastgoed/WP2/name)+', ..)');
	
	attribute<UInt32> BrushColor:
	[
		rgb(102,   0, 102),
		rgb(153,   0, 153),
		rgb(204,   0, 204),
		rgb(255,   0, 255),
		rgb(204,   0,   0),
		rgb(255,   0,   0),
		rgb(255,  51,  51),
		rgb(255, 102, 102),
		rgb(255, 153, 153),
		rgb(255, 204, 204),
		rgb(102,   0,  51),
		rgb(153,   0,  76),
		rgb(204,   0, 102),
		rgb(255,   0, 127),
		rgb(153,  76,   0),
		rgb(155, 128,   0),
		rgb(255,  51,  51),
		rgb(255, 102, 102),
		rgb(255, 153, 153),
		rgb(255, 204, 204),
		rgb(102,   0,  51),
		rgb(153,   0,  76),
		rgb(204,   0, 102),
		rgb(255,   0, 127),
		rgb(153,  76,   0),
		rgb(155, 128,   0),
		rgb(255,  51,  51)
	], DialogType = "BrushColor";
	
	container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
}