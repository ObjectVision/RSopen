unit<uint8> Intensiveren : NrOfRows = 17
, Descr = "was default en dus OO in RVNL"
{
	unit<UInt32> Elements := Range(uint32, 0, nrAttr * #.)
	{
		attribute<String> Text: [ //VO en gebouwkenmerken       //Weging locatiekenm.   // FSI   // GSI    //WP4_ref   //Fractie verhard        //Uitgeefbaar      // Openbaar
	 // Name                 , WP2, vssh, Opp ,#Kam,#Bad,Park,  Nat,  OV,Amenit,Groen,  NetBuurt,NetBuurt,             Uitgeefbaar , Openbaar, Boom,  Gras,Struik,  Boom, Gras, Struik, SkyViewFactor
		 'SuperStedelijkVS'  ,'MG','VS',  '75', '3', '1', '0' ,'1.0','1.0','1.0','1.0', '2.80'  ,'0.40',  'appartement'     ,'0.80', '0.90', '0.05','0.15','0.05','0.08','0.07','0.03', '0.22',
		 'HoogStedelijkVS'   ,'MG','VS',  '85', '3', '1', '0' ,'1.0','1.0','1.0','1.0', '1.50'  ,'0.30',  'appartement'     ,'0.80', '0.80', '0.05','0.15','0.05','0.08','0.15','0.05', '0.54',
		 'StedelijkMGVS'     ,'MG','VS',  '95', '3', '1', '1' ,'1.0','1.0','1.0','1.0', '0.75'  ,'0.25',  'appartement'     ,'0.80', '0.75', '0.05','0.15','0.05','0.12','0.15','0.10', '0.62',
		 'LaagStedelijkMGVS' ,'MG','VS', '105', '4', '1', '1' ,'1.0','1.0','1.0','1.0', '0.50'  ,'0.25',  'appartement'     ,'0.60', '0.70', '0.20','0.30','0.10','0.15','0.18','0.12', '0.66',
		 
		 'StedelijkEGVS'     ,'EG','VS', '125', '5', '1', '1' ,'1.0','1.0','1.0','1.0', '0.88'  ,'0.35',  'rijtjeswoning'   ,'0.50', '0.65', '0.25','0.40','0.10','0.15','0.25','0.10', '0.62',
		 'LaagStedelijkEGVS' ,'EG','VS', '140', '5', '1', '1' ,'1.0','1.0','1.0','1.0', '0.63'  ,'0.25',  'rijtjeswoning'   ,'0.40', '0.60', '0.25','0.50','0.10','0.15','0.30','0.10', '0.82',
		 'DorpsLandelijkVS'  ,'EG','VS', '160', '6', '2', '1' ,'1.0','1.0','1.0','1.0', '0.38'  ,'0.15',  'twee_onder_1_kap','0.10', '0.15', '0.35','0.80','0.10','0.40','0.60','0.25', '0.68',
		 'DorpsLandLaagVS'   ,'EG','VS', '160', '6', '2', '1' ,'1.0','1.0','1.0','1.0', '0.16'  ,'0.08',  'vrijstaand'      ,'0.10', '0.15', '0.45','0.80','0.10','0.40','0.60','0.25', '0.85',
		 'TinyHousesVS'      ,'EG','VS',  '25', '2', '1', '1' ,'1.0','1.0','1.0','1.0', '0.05'  ,'0.05',  'vrijstaand'      ,'0.05', '0.10', '0.45','0.80','0.15','0.50','0.65','0.25', '0.90',
		 'TinyHousesLaagVS'  ,'EG','VS',  '25', '2', '1', '1' ,'1.0','1.0','1.0','1.0', '0.03'  ,'0.03',  'vrijstaand'      ,'0.05', '0.10', '0.45','0.80','0.15','0.50','0.65','0.25', '0.92',
		 
		 'SuperStedelijkSH'  ,'MG','SH',  '65', '1', '1', '0' ,'0.5','0.5','0.5','0.5', '2.80'  ,'0.40',  'appartement'     ,'0.90', '0.90', '0.03','0.08','0.02','0.08','0.07','0.03', '0.22',
		 'HoogStedelijkSH'   ,'MG','SH',  '75', '1', '1', '0' ,'0.5','0.5','0.5','0.5', '1.50'  ,'0.30',  'appartement'     ,'0.90', '0.80', '0.03','0.08','0.02','0.08','0.15','0.05', '0.54',
		 'StedelijkMGSH'     ,'MG','SH',  '85', '2', '1', '0' ,'0.5','0.5','0.5','0.5', '0.75'  ,'0.25',  'appartement'     ,'0.90', '0.75', '0.03','0.08','0.02','0.12','0.15','0.10', '0.62',
		 'LaagStedelijkMGSH' ,'MG','SH',  '95', '3', '1', '0' ,'0.5','0.5','0.5','0.5', '0.50'  ,'0.25',  'appartement'     ,'0.70', '0.70', '0.15','0.25','0.05','0.15','0.18','0.12', '0.66',
		 
		 'StedelijkEGSH'     ,'EG','SH', '100', '3', '1', '0' ,'0.5','0.5','0.5','0.5', '0.88'  ,'0.35',  'rijtjeswoning'   ,'0.60', '0.65', '0.20','0.35','0.05','0.15','0.25','0.10', '0.62',
		 'LaagStedelijkEGSH' ,'EG','SH', '115', '3', '1', '0' ,'0.5','0.5','0.5','0.5', '0.63'  ,'0.25',  'rijtjeswoning'   ,'0.50', '0.60', '0.20','0.45','0.05','0.15','0.30','0.10', '0.82',
		 'DorpsLandelijkSH'  ,'EG','SH', '130', '4', '1', '1' ,'0.5','0.5','0.5','0.5', '0.38'  ,'0.15',  'rijtjeswoning'   ,'0.10', '0.15', '0.35','0.80','0.10','0.40','0.60','0.25', '0.68'
		];
	}
	
	attribute<string>               name               := Elements/Text[value(uInt32(id(.))* nrAttr +  0, Elements)];
	attribute<string>               WP2_name_short     := Elements/Text[value(uInt32(id(.))* nrAttr +  1, Elements)];
	attribute<string>               VSSH_name_short    := Elements/Text[value(uInt32(id(.))* nrAttr +  2, Elements)];
	attribute<Woonoppervlak_Woning> Woonoppervlakte    := Elements/Text[value(uInt32(id(.))* nrAttr +  3, Elements)][Woonoppervlak_Woning];
	attribute<uint32>               Aant_kamers        := Elements/Text[value(uInt32(id(.))* nrAttr +  4, Elements)][uint32];
	attribute<uint32>               Aant_badkamers     := Elements/Text[value(uInt32(id(.))* nrAttr +  5, Elements)][uint32];
	attribute<bool>                 HeeftPriveParkeren := Elements/Text[value(uInt32(id(.))* nrAttr +  6, Elements)][bool];
	attribute<float32>              Weging_NatNiv      := Elements/Text[value(uInt32(id(.))* nrAttr +  7, Elements)][float32];
	attribute<float32>              Weging_NatOV       := Elements/Text[value(uInt32(id(.))* nrAttr +  8, Elements)][float32];
	attribute<float32>              Weging_Amenities   := Elements/Text[value(uInt32(id(.))* nrAttr +  9, Elements)][float32];
	attribute<float32>              Weging_GroenNabij  := Elements/Text[value(uInt32(id(.))* nrAttr + 10, Elements)][float32];
	attribute<FSI>                  FSINettoBuurt      := Elements/Text[value(uInt32(id(.))* nrAttr + 11, Elements)][float32];
	attribute<GSI>                  GSINettoBuurt      := Elements/Text[value(uInt32(id(.))* nrAttr + 12, Elements)][float32];
	attribute<string>               WP4_name           := Elements/Text[value(uInt32(id(.))* nrAttr + 13, Elements)];
	
	attribute<Classifications/Vastgoed/WP4> WP4_rel := rlookup(lowercase(WP4_name), lowercase(/Classifications/Vastgoed/WP4/name));
	parameter<uint32> nrAttr := 23;
	
	container InUitgeefbaarExPandfootprint
	{
		attribute<float32> Verhard      (..) := Elements/Text[value(uInt32(id(..))* nrAttr + 14, Elements)][float32];
		attribute<float32> GroenTotaal  (..) := 1f - Verhard;
		attribute<float32> Boom0        (..) := Elements/Text[value(uInt32(id(..))* nrAttr + 16, Elements)][float32];
		attribute<float32> Gras0        (..) := Elements/Text[value(uInt32(id(..))* nrAttr + 17, Elements)][float32];
		attribute<float32> Struik0      (..) := Elements/Text[value(uInt32(id(..))* nrAttr + 18, Elements)][float32];
		attribute<float32> GroenTotaal0 (..) := add(Boom0, Gras0, Struik0);
		
		//Schalen omdat groen totaal bij nader inzien moest optellen tot 1 - fractie verhard
		attribute<float32> Boom         (..) := Boom0   / GroenTotaal0 * GroenTotaal;
		attribute<float32> Gras         (..) := Gras0   / GroenTotaal0 * GroenTotaal;
		attribute<float32> Struik       (..) := Struik0 / GroenTotaal0 * GroenTotaal;
	}
	
	container InOpenbaar
	{
		attribute<float32> Verhard      (..) := Elements/Text[value(uInt32(id(..))* nrAttr + 15, Elements)][float32];
		attribute<float32> GroenTotaal  (..) := 1f - Verhard;
		attribute<float32> Boom0        (..) := Elements/Text[value(uInt32(id(..))* nrAttr + 19, Elements)][float32];
		attribute<float32> Gras0        (..) := Elements/Text[value(uInt32(id(..))* nrAttr + 20, Elements)][float32];
		attribute<float32> Struik0      (..) := Elements/Text[value(uInt32(id(..))* nrAttr + 21, Elements)][float32];
		attribute<float32> GroenTotaal0 (..) := add(Boom0, Gras0, Struik0);
		
		//Schalen omdat groen totaal bij nader inzien moest optellen tot 1 - Fractie verhard
		attribute<float32> Boom         (..) := Boom0   / GroenTotaal0 * GroenTotaal;
		attribute<float32> Gras         (..) := Gras0   / GroenTotaal0 * GroenTotaal;
		attribute<float32> Struik       (..) := Struik0 / GroenTotaal0 * GroenTotaal;
	}
	
	attribute<float32> SkyViewFactor := Elements/Text[value(uInt32(id(.))* nrAttr + 22, Elements)][float32];
	
	attribute<bool> IsHoogbouw := Bouwlagen * Modelparameters/wonen/Bouwlaaghoogte > Modelparameters/wonen/Hoogbouwgrens;
	attribute<bool> IsTinyHouse := id(.) == V/TinyHousesVS || id(.) == V/TinyHousesLaagVS;
	
	attribute<float32> FractieUitgeefbaar := IsTinyHouse ? /Modelparameters/wonen/FractieUitgeefbaarTinyHouses : /Modelparameters/wonen/FractieUitgeefbaar; // is per definitie de fractie uitgeefbaar van terreinopp nettobuurt
	attribute<float32> Bouwlagen := FSINettoBuurt / GSINettoBuurt;
	
	attribute<Woonoppervlak_m2BVO> Vormfactor := WP2_rel == Classifications/Vastgoed/WP2/V/Eengezins ? Modelparameters/wonen/VormfactorEengezins: IsHoogbouw ? Modelparameters/wonen/VormfactorHoogbouw: Modelparameters/wonen/VormfactorMeergezins;
	
	attribute<m2BVO_Woning> BVOPerWoning := Woonoppervlakte / Vormfactor;
	
	attribute<Woning_ha> DichtheidNettoBuurt := (FSINettoBuurt * TerreinoppervlakteNettoBuurt) / BVOPerWoning / TerreinoppervlakteNettoBuurt[ha];
	attribute<Woning_ha> Dichtheid := DichtheidNettoBuurt;
	
	attribute<Woonoppervlak> WoonoppervlakNettoBuurt := (DichtheidNettoBuurt[float32] * Woonoppervlakte[float32])[Woonoppervlak];
	
	attribute<Terreinoppervlak> TerreinoppervlakteNettoBuurt := const((1[ha])[Terreinoppervlak], .);
	
	container InNettoBuurt := Ontwikkelpakketten/InNettoBuurt_T(., InUitgeefbaarExPandfootprint, InOpenbaar);
	
	attribute<Perceeloppervlak> PerceeloppervlakteTotaal := InNettoBuurt/TerreinoppervlakteNettoBuurt/Uitgeefbaar/Buitenruimte[Perceeloppervlak];
	
	attribute<Perceeloppervlak_Woning> Perceeloppervlakte := PerceeloppervlakteTotaal / (Dichtheid * 1[ha])[Woning];
	
	container Checks
	{
		attribute<bool> GSIIsNietGroterDanFractieUitgeefbaar (..) := !(GSINettoBuurt > FractieUitgeefbaar);
	}
	
	container Dashboard   // overzicht van relevante aangrijpingspunten voor invoer en uitkomsten van de instellingen
	{
		container Wegingskaarten
		{
			attribute<min>        NatNiv (Geography/rdc_100m) := /SourceData/Overigen/Impl/Reistijden/tt_500kinhab_min_2020;
			attribute<min>         NatOV (Geography/rdc_100m) := /SourceData/Overigen/Impl/Reistijden/tt_Trainstation_2006_min;
			attribute<float32> Amenities (Geography/rdc_100m) := /SourceData/Overigen/Impl/UAI_2021;
			attribute<bool>   GroenNabij (Geography/rdc_10m)  := /SourceData/Overigen/Impl/bbg_groen_buff;
		}
		
		// container Geschiktheden := BaseData/Geschiktheden/Wonen;
		
		container OPKenmerken
		{
			attribute<string>    Name       (...) := .../name;
			attribute<float32>   Bouwlagen  (...) := .../Bouwlagen;
			attribute<bool>      IsHoogbouw (...) := .../IsHoogbouw;
			attribute<Woning_ha> Dichtheid  (...) := .../Dichtheid;
		}
	}
	
	container Mengpaneel // overzicht van relevante instellingen per OP per variant
	{
		attribute<string> Woningtype         (..) := ../WP4_name;
		// attribute<m2BVO_Woning> BVOPerWoning (..) := ../m2BVO_Woning;
		
		attribute<uint32> Aant_kamers        (..) := ../Aant_kamers;
		attribute<uint32> Aant_badkamers     (..) := ../Aant_badkamers;
		attribute<bool>   HeeftPriveParkeren (..) := ../HeeftPriveParkeren;
	}
	
	attribute<string>            Label                := name, DialogType = "LabelText";
	attribute<Vastgoed/WP2>      WP2_rel              := lowercase(WP2_name_short) == lowercase('EG') ? rlookup(lowercase('eengezins'), lowercase(Vastgoed/WP2/name)) : rlookup(lowercase('meergezins'), lowercase(Vastgoed/WP2/name));
	attribute<string>            WP2_name             := Vastgoed/WP2/name[WP2_rel];
	attribute<Vastgoed/VSSH>     VSSH_rel             := lowercase(VSSH_name_short) == lowercase('VS') ? rlookup(lowercase('VrijeSector'), lowercase(Vastgoed/VSSH/name)) : rlookup(lowercase('SocialeHuur'), lowercase(Vastgoed/VSSH/name));
	attribute<string>            VSSH_name            := Vastgoed/VSSH/name[VSSH_rel];
	attribute<string>            WP2xVSSH_name        := WP2_name+'_'+VSSH_name;
	attribute<Vastgoed/WP2xVSSH> WP2xVSSH_rel         := rlookup(lowercase(WP2xVSSH_name), lowercase(Vastgoed/WP2xVSSH/name));
	attribute<Sector/xSubsector> SectorxSubSector_rel := Vastgoed/WP2xVSSH/SectorxSubSector_rel[WP2xVSSH_rel];
	
	container perWP2xVSSH := for_each_ne(Vastgoed/WP2xVSSH/name,'perWP2xVSSH_T('+quote(Vastgoed/WP2xVSSH/name)+', ..)');
	container perWP2      := for_each_ne(Vastgoed/WP2/name,'perWP2_T('+quote(Vastgoed/WP2/name)+', ..)');
	
	attribute<uint32> BrushColor: [
		rgb(102,   0, 102),
		rgb(153,   0, 153),
		rgb(204,   0, 204),
		rgb(255,   0, 255),
		rgb(204,   0,   0),
		rgb(255,   0,   0),
		rgb(255,  51,  51),
		rgb(255, 102, 102),
		rgb(255, 153, 153),
		rgb(255, 204, 204),
		rgb(102,   0,  51),
		rgb(153,   0,  76),
		rgb(204,   0, 102),
		rgb(255,   0, 127),
		rgb(153,  76,   0),
		rgb(155, 128,   0),
		rgb(255,  51,  51)
	], DialogType = "BrushColor";
	
	container V := for_each_nedv(name, String(ID(.))+'[..]', void, .);
}