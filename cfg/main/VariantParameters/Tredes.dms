////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Dit is RSOpen, de open source versie van het model RuimteScanner. Het scipt wordt uitgegeven onder GNU-GPL licentie.
//
// RSOpen is ontwikkeld door PBL Planbureau voor de Leefomgeving, i.s.m Object Vision B.V. en VU Vrije Universiteit Amsterdam.
// Opdrachtgever/ontwikkelaar PBL: Bart Rijken
// Contactpersoon/ontwikkelaar Object Vision B.V.: Jip Claassens (jclaassens@objectvision.nl)
// Contacpersoon PBL: Bas van Bemmel (Bas.vanBemmel@pbl.nl)
//
// Deze file specificeert per sector en subsector welke (if any) locatieTypen voorrang krijgen in de allocatie.
// De achtereenvolgende locatieTypen worden treden genoemd, naar analogie met de zgn. ladder voor Duurzame Verstedelijking, het bestaande beleid in dezen voor nieuwe verstedelijking.
// Bron: expert judgement PBL
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

container Tredes : using = "Geography"
{
	#include<Wonen.dms>
	#include<Werken.dms>
	#include<Verblijfsrecreatie.dms>
	// #include<Wind.dms>
	// #include<Zon.dms>
	
	// container Landbouw :=
		// for_each_ne(
			// Classifications/Actor/LandbouwKlasses/name
			// , 'impl/GeenTredes_T('+quote(Classifications/Actor/LandbouwKlasses/name)+')'
		// );
	
	container impl
	{
		Template GeenTredes_T
		{
			parameter<String> name;
			unit<UInt32> GeenTredes := StudyAreas/UnityDomain
			{ 
				attribute<String>    name            := rdc_meter/name;
				attribute<rdc_meter> geometry (poly) := rdc_meter/geometry;
				attribute<String>    RefSrc          := const('@S@Totaal',.);
			}
		}
	
		#include<Plancapaciteit_Varianten.dms>
		#include<EigendomVarianten.dms>
	
		unit<UInt32> RondBevolkingskernK: NrOfRows = 3
		{
			attribute<String> name: ['RondBevolkingskern5_20k', 'RondBevolkingskern20k_50k', 'Totaal'];
			attribute<String> RefSrc := '@S@'+name;
		}
		
		unit<UInt32> NationaalParkK: NrOfRows = 2
		{
			attribute<String> name: ['BinnenNationaalPark', 'BuitenNationaalPark'];
			attribute<String> RefSrc := '@S@'+name;
		}
		
		unit<UInt32> BelevingLandschap: NrOfRows = 4
		{
			attribute<String> name: ['BelevingLandschapIsZeerLaag', 'BelevingLandschapIsLaag', 'BelevingLandschapIsHoog', 'BelevingLandschapIsZeerHoog'];
			attribute<String> RefSrc := '@S@'+name;
		}
		
		unit<UInt32> BelevingLandschap2: NrOfRows = 2
		{
			attribute<String> name: ['BelevingLandschapIsLaag', 'BelevingLandschapIsHoog'];
			attribute<String> RefSrc := '@S@'+name;
		}
		
		unit<UInt32> BelevingLandschapRG: NrOfRows = 2
		{
			attribute<String> name: ['BelevingLandschapIsHoog', 'BelevingLandschapIsLaag'];
			attribute<String> RefSrc := '@S@'+name;
		}
		
		unit<UInt32> Stimuli: NrOfRows = 2
		{
			attribute<String> name: ['BinnenStimuli', 'BuitenStimuli'];
			attribute<String> RefSrc := '@S@'+name+'@X@';
		}
		
		unit<UInt32> PlancapaciteitPlusStimuli := union_unit(Plancapaciteit_Varianten/BinnenHardeOfZachtePlancapaciteit, Stimuli)
		{
			attribute<String> name := union_data(., Plancapaciteit_Varianten/BinnenHardeOfZachtePlancapaciteit/name, Stimuli/name);
			attribute<String> RefSrc := union_data(., Plancapaciteit_Varianten/BinnenHardeOfZachtePlancapaciteit/RefSrc, Stimuli/RefSrc);
		}
		
		unit<UInt32> ZachtePlancapaciteitPlusStimuli := union_unit(Plancapaciteit_Varianten/BinnenOfBuitenZachtePlancapaciteit, Stimuli)
		{
			attribute<String> name := union_data(., Plancapaciteit_Varianten/BinnenOfBuitenZachtePlancapaciteit/name, Stimuli/name);
			attribute<String> RefSrc := union_data(., Plancapaciteit_Varianten/BinnenOfBuitenZachtePlancapaciteit/RefSrc, Stimuli/RefSrc);
		}
		
		unit<UInt32> BBGK := Classifications/Modellering/BBGK
		{
			attribute<String> RefSrc := '@S@'+name;
		}
		unit<UInt32> GeenBBG := select_with_attr_by_cond(Classifications/Modellering/BBGK, id(Classifications/Modellering/BBGK) == Classifications/Modellering/BBGK/v/Geen_BBG)
		{
			attribute<String> RefSrc := '@S@'+name;
		}
		
		unit<UInt32> OVBereikbaarheidK: NrOfRows = 3
		{
			attribute<String> name: ['ZeerNabijOVRondKern20kPlus', 'NabijOVRondKern20kPlus', 'Totaal'];
			attribute<String> Label := name, DialogType = "LabelText";
			attribute<String> RefSrc := '@S@'+name;
		}
		unit<UInt32> OVBereikbaarheidK_rev: NrOfRows = 3
		{
			attribute<String> name: ['NietNabijOVRondKern50kMin','NietNabijOVRondKern20kMin','Totaal'];
			attribute<String> Label := name, DialogType = "LabelText";
			attribute<String> RefSrc := '@S@'+name;
		}
		
		unit<UInt32> MaatregelK := Classifications/Modellering/MaatregelK
		{
			attribute<String> RefSrc := '@S@'+name;
		}
		
		unit<UInt32> PampusK: NrOfRows = 2
		{
			attribute<String> name: ['Pampus', 'GeenPampus'];
			attribute<String> RefSrc := '@S@'+name;
		}
		
		unit<UInt32> GrondGebruikK: NrOfRows = 2
		{
			attribute<String> name: ['IsBouwterrein', 'Totaal'];
			attribute<String> RefSrc := '@S@'+name;
		}
		
		container GrondGebruikK_Varianten
		{
			unit<UInt32> Energie: NrOfRows = 2
			{
				attribute<String> name: ['LangsRijkswegenOfPrimaireWaterkeringen', 'Totaal'];
				attribute<String> RefSrc := '@S@'+replace(name, '_', '/');
			}
		}
		
		unit<UInt32> Totaal: NrOfRows = 1
		{
			attribute<String> name: ['Totaal'];
			attribute<String> RefSrc := '@S@'+name;
		}
	}
}