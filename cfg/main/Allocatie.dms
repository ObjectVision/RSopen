container Allocatie: using = "Classifications/Actor;VariantData;CaseClassifications/Vastgoed;Classifications/modellering"
, Descr = "Deze container bevat de 'engine' van het model: hierin gebeurt de daadwerkelijke allocatie, per zichtjaar, per sequentie, per sector allocregio, en per iteratie."
, URL   = "https://github.com/ObjectVision/RSopen/wiki/Modelstructuur-op-hoofdlijnen#hybride-allocatie-met-competitie-binnen-sectoren"
{
	//debug
	// container FirstIter := /Allocatie/Zichtjaren/Y2030/Sequences/Seq_0/SectorAllocRegios/Wonen_NVM/Iters_Normaal/Iter_0;
	// container FirstIter_Landbouw := ='Allocatie/Zichtjaren/'+first(Time/Zichtjaar/name)+'/Sequences/Seq_0/SectorAllocRegios/Landbouw_Provincie/Iters_Landbouw/Iter_0';
	// container Allocatie_prep_Landbouw := /Allocatie/Zichtjaren/Y2050/Sequences/Seq_0/SectorAllocRegios/Landbouw_Provincie/Iters_Landbouw/Iter_0/Allocatie_Prep;
	// container Suitabilities_Landbouw := /Allocatie/Zichtjaren/Y2050/Sequences/Seq_0/SectorAllocRegios/Landbouw_Provincie/Iters_Landbouw/Iter_0/Allocatie_Prep/Suitabilities;
	// container MinClaims_Landbouw := /Allocatie/Zichtjaren/Y2050/Sequences/Seq_0/SectorAllocRegios/Landbouw_Provincie/Iters_Landbouw/Iter_0/Allocatie_Prep/claims/MinClaims;
	// container FirstIter_wonen    := ='Allocatie/Zichtjaren/'+first(Time/Zichtjaar/name)+'/Sequences/Seq_0/SectorAllocRegios/Wonen_NVM/Iters_Normaal/Iter_0';
	
	container StartState := VariantData/StateBasisjaar
	, Descr = "Deze container verwijst naar de StateBasisjaar uit de VariantData plus een aantal attributen die hier geinitialiseerd worden later geupdatet worden."
	{
		attribute<Actor/Sector/xSubsector> SubSector_rel                  (CompactedAdminDomain) := const(value(0/0, Actor/Sector/xSubsector), CompactedAdminDomain);
		attribute<OP>                      OP_rel                         (CompactedAdminDomain) := const(0b/0b, CompactedAdminDomain, OP);
		attribute<Float32>                 Max                            (CompactedAdminDomain) := = 'Max_Elem('+asItemList(Sector/xSubsector/name+'[float32]')+')';
		attribute<Bool>                    MaxIsNul                       (CompactedAdminDomain) := Max == 0f;
		attribute<Sector/xSubsector>       SubSector_rel_dominant_landuse (CompactedAdminDomain) := = '(ArgMax('+asItemList(Sector/xSubsector/name+'[float32]')+') / uint32(!MaxIsNul))[Sector/xSubsector]';
	}
	
	#include<StartState_metBAGnieuwbouw.dms>
	
	container Zichtjaren := 
		for_each_ne(
			Time/Zichtjaar/name
			,'Templates/Allocatie/Zichtjaar_T('
				+quote(Time/Zichtjaar/name)+
				','+Time/Zichtjaar/PrevState+
				',Impl'
			')'
		), Descr = "Via dit template wordt het daadwerkelijke allocatie proces per zichtjaar aangeroepen.";
	
	container Impl
	: Descr = "Hier worden een aantal string expressies gedefinieerd die in het allocatie proces worden aangeroepen om cellen per subsector te updaten." 
	{
		parameter<String> Update_Expr   := 'float32(!ThisIter/IsNuGealloceerd) * ThisIter/StateVoorAllocatie/@S@/@SS@'                       // waar geen subsector is gealloceerd van betreffende sector (bijv werken) houden we tav alle subsectoren (ook van andere sectoren) de state v贸贸r alloc aan
												'+ float32( ThisIter/Allocatie/per_SectorxSubsector == Sector/xSubsector/V/@S@_@SS@)'        // waar betreffende subsector wel is gealloceerd (bijv Detailhandel)  nemen we de PotStateNaAlloc van betreffende subsector over
												'* Subsectoren/@SS@/CompactedAdminDomain/PotentieleStateNaAllocatie';                        // als een andere subsector (bijv Nijverheid en Logistiek) dan betreffende subsector is gealloceerd dan wordt betreffende subsector gesloopt. 
		parameter<String> Update_Expr_DiscrAlloc   := 'float32( ThisIter/Allocatie/per_SectorxSubsector == Sector/xSubsector/V/@S@_@SS@)'    // waar betreffende subsector wel is gealloceerd (bijv Detailhandel)  nemen we de PotStateNaAlloc van betreffende subsector over
														'* const(CompactedAdminDomain/NrHaPerCell, CompactedAdminDomain )';                  // als een andere subsector (bijv Nijverheid en Logistiek) dan betreffende subsector is gealloceerd dan wordt betreffende subsector gesloopt. 
		parameter<String> Verdring_Expr := 'float32(!Context/ThisIter/IsNuGealloceerd) * Context/ThisIter/StateVoorAllocatie/@S@/@SS@';      // waar geen subsector van de andere sector gealloceerd is (bijv wonen) houden we tav alle subsectoren van betreffende sector de state v贸贸r alloc aan.
																																			 // Waar wel een subsector vd andere sector gealloceerd is worden alle eenheden van betreffende secorx subsectoren gesloopt.
		parameter<String> Update_PandFootprint_Expr :=
			'float32(!Context/ThisIter/IsNuGealloceerd) * Context/ThisIter/StateVoorAllocatie/PandFootprint/@SS@'
			'+ float32(Context/ThisIter/Allocatie/per_SectorxSubsector == Sector/xSubsector/V/Werken_@SS@)'
				'* VariantData/Density/Per_CompactedAllocDomain/@Y@/src/Werken/PandFootprint_perJob/Subsectoren/@SS@[CompactedAdminDomain/CompactedAllocDomain_rel]'
				'* Werken/@SS@/Result';
	}
}