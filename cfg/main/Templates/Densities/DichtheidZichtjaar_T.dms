Template DichtheidZichtjaar_T
{
	//
	parameter<Time/Zichtjaar> id;
	//
	
	parameter<string>    Zichtjaar_name     := Time/Zichtjaar/name[id];
	parameter<string>    Zichtjaar_Prevname := Time/Zichtjaar/Prevname[id];
	parameter<YearRange> YearRange_rel      := Time/Zichtjaar/YearRange_rel[id];
	parameter<YearRange> PrevYearRange_rel  := Time/Zichtjaar/PrevYearRange_rel[id];
	
	container SectorXSubsectoren := 
		for_each_ne(
			Sector/XSubsector/name
			, 'Templates/Densities/SectorXSubsector_T('+string(id(Sector/XSubsector))+'[Sector/XSubsector], AllocDomain)'
		);
	
	container Src
	{
		container Werken
		{
			container Subsectoren := for_each_nedv(Actor/Jobs6/name, 'MakeDefined(Banen_perHa/Subsectoren/'+Actor/Jobs6/name+',0f)', AllocDomain, Job_ha);
			
			container PandFootprint_perJob
			{
				container Src := = iif(id > 0[Time/Zichtjaar], Zichtjaar_Prevname+'/Src/Werken/PandFootprint_perJob/Subsectoren', 'Basisjaar/PandFootprint_perJob');
				
				container Subsectoren0 := for_each_nedv(
					Actor/Jobs6/name,
					'(Src/'+Actor/Jobs6/name+' * (1f + (VariantParameters/VariantK/'+Actor/Jobs6/name+'[VariantParameters/VariantK/V/'+Variant_name+'] * (YearRange_rel - PrevYearRange_rel)[jaar])))',
					AllocDomain, m2PandFootprint_job
				);
				
				container Subsectoren := Subsectoren0;
			}
			
			container Job_Perm2PandFootprint
			{
				container Src := = iif(id > 0[Time/Zichtjaar], Zichtjaar_Prevname+'/Src/Werken/Job_Perm2PandFootprint/Subsectoren', 'Basisjaar/Job_Perm2PandFootprint');
				
				container Subsectoren0 := //uitkomst in job/m2, factor gaat over groei m2/job. Src=job/m2
					for_each_nedv(
						Actor/Jobs6/name 
						, '1f / ((1f / Src/'+Actor/Jobs6/name+') * (1f + (VariantParameters/VariantK/'+Actor/Jobs6/name+'[VariantParameters/VariantK/V/'+Variant_name+'] * (YearRange_rel - PrevYearRange_rel)[jaar])))'
						, AllocDomain
						, job_m2PandFootprint
					);
				
				container Subsectoren := Subsectoren0
				{
					attribute<job_m2PandFootprint> Zak_dienstverlening (AllocDomain) := = '1f / ((1f / Subsectoren0/Zak_dienstverlening) * (1f + (VariantParameters/VariantK/m2BVO_job_kantoor_groeifactor[VariantParameters/VariantK/V/'+Variant_name+'])))';
				}
			}
			
			container Banen_perHa
			{
				container Subsectoren := for_each_nedv(
					Actor/Jobs6/name,
					'Job_Perm2PandFootprint/Subsectoren/'+Actor/Jobs6/name+' * Basisjaar/PandFootprint_perHa/'+Actor/Jobs6/name+'/result', 
					AllocDomain, Job_ha
				);
			}
			
			container Basisjaar := BaseData/StartState/StateBasisjaar/State/Werken
			{
				container PandFootprint_perJob   := for_each_nedv(Actor/Jobs6/name, 'BaseData/Densities/PandFootprint_baan/result/'+Actor/Jobs6/name, AllocDomain, m2PandFootprint_job);
				container Job_Perm2PandFootprint := for_each_nedv(Actor/Jobs6/name, 'MakeDefined(1f / PandFootprint_perJob/'+Actor/Jobs6/name+', 0f)', AllocDomain, job_m2PandFootprint);
				container PandFootprint_perHa    := for_each_ne(Actor/Jobs6/name, 'Templates/Densities/Werken_T(Actor/Jobs6, '+string(id(Actor/Jobs6))+'[Actor/Jobs6], BaseData/Startstate/PandFootprint, AllocDomain)');
			}
		}
		
		container Zon
		{
			container Subsectoren
			{
				attribute<MW_ha> Totaal (AllocDomain) :=
					VariantK/ZonCombinerenMetBestaandGroen[/Variant_rel] && BaseData/StartState/Grondgebruik/Per_AllocDomain/IsGroen ?
						const(ModelParameters/Zon/Vermogen_ha[MW_ha], AllocDomain) * ModelParameters/Zon/FractieVermogenHaIndienZonCombinerenMetBestaandGroen :
						const(ModelParameters/Zon/Vermogen_ha[MW_ha], AllocDomain);
			}
		}
	}
}