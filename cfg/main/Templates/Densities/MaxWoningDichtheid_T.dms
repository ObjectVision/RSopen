Template MaxWoningDichtheid_T
{
	//
	parameter<Classifications/Vastgoed/WP2xVSSH> id;
	attribute<Bool> IsWoonlocatie (AllocDomain);
	//
	
	parameter<String> name_short := Classifications/Vastgoed/WP2/name_short[Classifications/Vastgoed/WP2xVSSH/first_rel[id]];
	
	parameter<Woning_ha> MinimumUitMinimumOP := = 'min(/VariantParameters/Ontwikkelpakketten/DezeBuurtSchaal/'+VariantParameters/VariantK/OntwikkelPakketVariant[Variant_rel]+'/perWP2xVSSH/'+Classifications/Vastgoed/WP2xVSSH/name[id]+'/OP_sub/Dichtheid)';
	parameter<Woning_ha> MinimumDichtheid    := = '/VariantParameters/VariantK/MinimumDichtheid_'+name_short+'_'+/Scenario_name+'[/VariantParameters/VariantK/V/'+/Variant_name+']';
	parameter<Woning_ha> Minimum  := max_elem(MinimumUitMinimumOP, MinimumDichtheid);
	// parameter<Woning_ha> Minimum  := MinimumUitMinimumOP;
	
	parameter<Float32> DichtheidFactorOV              := = 'CaseClassifications/VariantK/DichtheidFactorOV_'+name_short+'[0b]';
	parameter<Float32> DichtheidFactorWater           := = 'CaseClassifications/VariantK/DichtheidFactorWater_'+name_short+'[0b]';
	parameter<Float32> DichtheidFactorGeneriek        := = 'CaseClassifications/VariantK/DichtheidFactorGeneriek'+'[0b]';
	parameter<Float32> DichtheidFactorBevKern100kPlus := = 'CaseClassifications/VariantK/DichtheidFactorBevKern100kPlus_'+name_short+/Scenario_name+'[0b]';
	parameter<Float32> DichtheidFactorBevKern20kPlus  := = 'CaseClassifications/VariantK/DichtheidFactorBevKern20kPlus_'+name_short+/Scenario_name+'[0b]';
	parameter<Float32> DichtheidFactorBevKern20kMin   := = 'CaseClassifications/VariantK/DichtheidFactorBevKern20kMin_'+name_short+/Scenario_name+'[0b]';
	
	attribute<Float32> DichtheidFactor (AllocDomain) := add(
		float32(BaseData/Omgeving/OV_Reistijd/TotRailHalte/Smoothed)            * (DichtheidFactorOV - 1f),
		float32(BaseData/StartState/Grondgebruik/NabijGrootWaterInBBG/Smoothed) * (DichtheidFactorWater - 1f),
		switch(
			case(BaseData/Omgeving/RondBevolkingskern/Is100kPlus, float32(BaseData/Omgeving/RondBevolkingskern/Is100kPlus) * (DichtheidFactorBevKern100kPlus - 1f)),
			case(BaseData/Omgeving/RondBevolkingskern/Is20kPlus,  float32(BaseData/Omgeving/RondBevolkingskern/Is20kPlus)  * (DichtheidFactorBevKern20kPlus - 1f)),
			case(BaseData/Omgeving/RondBevolkingskern/Is20kMin,   float32(BaseData/Omgeving/RondBevolkingskern/Is20kMin)   * (DichtheidFactorBevKern20kMin - 1f)),
			const(0f, AllocDomain)
		),
		DichtheidFactorGeneriek - 1f,
		1f
	);
	
	attribute<Woning>    Src                   (CompactedAdminDomain) := BaseData/StartState/StateBasisjaar/Src0/Wonen/WP1s/Totaal;
	attribute<Woning_ha> Dichtheid_AllocDomain (AllocDomain) := sum(Src, CompactedAdminDomain/AllocDomain_rel) / (float32(IsWoonlocatie) * AllocDomain/NrHaPerCell);
	attribute<Woning_ha> Dichtheid_Buurt       (AllocDomain) := ='mean(Dichtheid_AllocDomain, RegioIndelingen/cbs/Y'+string(ModelParameters/Model_StartYear)+'/buurt/Per_AllocDomain)[RegioIndelingen/cbs/Y'+string(ModelParameters/Model_StartYear)+'/Buurt/Per_AllocDomain]';
	attribute<Woning_ha> Dichtheid_Wijk        (AllocDomain) := ='mean(Dichtheid_AllocDomain, RegioIndelingen/cbs/Y'+string(ModelParameters/Model_StartYear)+'/Wijk/Per_AllocDomain)[RegioIndelingen/cbs/Y'+string(ModelParameters/Model_StartYear)+'/Wijk/Per_AllocDomain]';
	attribute<Woning_ha> Dichtheid_Gemeente    (AllocDomain) := ='mean(Dichtheid_AllocDomain, RegioIndelingen/cbs/Y'+string(ModelParameters/Model_StartYear)+'/Gemeente/Per_AllocDomain)[RegioIndelingen/cbs/Y'+string(ModelParameters/Model_StartYear)+'/Gemeente/Per_AllocDomain]';
	attribute<Woning_ha> Dichtheid_NVM         (AllocDomain) := ='mean(Dichtheid_AllocDomain, RegioIndelingen/NVM/Per_AllocDomain)[RegioIndelingen/NVM/Per_AllocDomain]';
	attribute<Woning_ha> Dichtheid_COROP       (AllocDomain) := ='mean(Dichtheid_AllocDomain, RegioIndelingen/cbs/Y'+string(ModelParameters/Model_StartYear)+'/COROP/Per_AllocDomain)[RegioIndelingen/cbs/Y'+string(ModelParameters/Model_StartYear)+'/COROP/Per_AllocDomain]';
	attribute<Woning_ha> Dichtheid_Provincie   (AllocDomain) := ='mean(Dichtheid_AllocDomain, RegioIndelingen/cbs/Y'+string(ModelParameters/Model_StartYear)+'/Provincie/Per_AllocDomain)[RegioIndelingen/cbs/Y'+string(ModelParameters/Model_StartYear)+'/Provincie/Per_AllocDomain]';
	attribute<Woning_ha> Max                   (AllocDomain) := max_elem(Dichtheid_AllocDomain, Dichtheid_Buurt, Dichtheid_Wijk, Dichtheid_Gemeente, Dichtheid_NVM, Dichtheid_COROP, Dichtheid_Provincie);
	attribute<Woning_ha> MaalFactor            (AllocDomain) := Max * DichtheidFactor;
	attribute<Woning_ha> ResultMaalFactor      (AllocDomain) := value(potential(MaalFactor, Geography/Distmatrices_100m/pot2000m/rev_dist_scaled / sum(Geography/Distmatrices_100m/pot2000m/rev_dist_scaled)), Woning_ha);
	attribute<Woning_ha> ResultNietMaalFactor  (AllocDomain) := value(potential(Max, Geography/Distmatrices_100m/pot2000m/rev_dist_scaled / sum(Geography/Distmatrices_100m/pot2000m/rev_dist_scaled)), Woning_ha);
	attribute<Woning_ha> Result                (AllocDomain) := Max_elem(ResultMaalFactor, Minimum);
}