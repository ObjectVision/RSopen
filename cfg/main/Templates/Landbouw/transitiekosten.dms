container Transitiekosten // herkomst in kolommen, bestemming in rijen
{                         // TO DO: de 0-waarden in de niet-diagionalen specificeren (waar gelijk parameters aanroepen).
	unit<uint8> AllocType: expr = "..../AllocType"
	{                                          // agr_gg_vee_extensief, agr_gg_vee, agr_gg_vee_intensief, natuur_gras
		attribute <EUR_ha> agr_gg_vee_extensief: [                   0,        750,                  750,        5399];
		attribute <EUR_ha> agr_gg_vee:           [                2697,          0,                  750,        8095];
		attribute <EUR_ha> agr_gg_vee_intensief: [                5534,       2837,                    0,       10932];
		attribute <EUR_ha> natuur_gras:          [                 750,        750,                  750,           0];
	}

	container PerModelType: expr = "for_each_nedv(AllocType/name, 'AllocType/'+ AllocType/name + '[invert(AllocType/nr_OrgEntity)]', ModelType, EUR_ha)"
	{
		attribute<Eur_M2> kstn_urbaan_afbraak (domain_grid):Expr =
	//		"value(25.0, Eur_M2) * "
			"value(311.555209, Eur_M2) * "
			"("
				"  gg9TypeData/ggRatio/woongebied "
				"+ gg9TypeData/ggRatio/Werken"
			")";
	}
}