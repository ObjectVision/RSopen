container Akkerbouw
: using = "Classifications/Landbouw"
{
	parameter<string>           name := 'Akkerbouw';

	container Consumptieaardappelen
	{
		parameter<GewasSoortYR>     Gewas                       := GewasSoortYR/V/Consumptieaardappelen;
		parameter<Eur_Ha_jaarlijks> CAP_subsidy                 := 0[Eur_Ha_jaarlijks];
		
		attribute<ratio>            rotation         (rdc_100m) := switch(
																	 case(SourceData/Landbouw/Bodem_HELP >= value(1, BodemKlasse14k) && SourceData/Landbouw/Bodem_HELP <= value(5, BodemKlasse14k), 0.177[ratio])
																	,case(SourceData/Landbouw/Bodem_HELP >= value(6, BodemKlasse14k) && SourceData/Landbouw/Bodem_HELP <= value(14, BodemKlasse14k), 0.154[ratio])
																	,0[ratio]);
		attribute<Eur_Ha_jaarlijks> production_costs (rdc_100m) := switch(
																	 case(SourceData/Landbouw/Bodem_HELP >= value(1, BodemKlasse14k) && SourceData/Landbouw/Bodem_HELP <= value(5, BodemKlasse14k), 3342.3[Eur_Ha_jaarlijks])
																	,case(SourceData/Landbouw/Bodem_HELP >= value(6, BodemKlasse14k) && SourceData/Landbouw/Bodem_HELP <= value(14, BodemKlasse14k), 3616.9[Eur_Ha_jaarlijks])
																	,0[Eur_Ha_jaarlijks]);
		attribute<float32>          YieldReduction   (rdc_100m) := ='factoren/YieldReduction/AveragePeriod/'+GewasSoortYR/name[Gewas];
		attribute<Eur_Ha_jaarlijks> Gross_revenues   (rdc_100m) := switch(
																	 case(SourceData/Landbouw/Bodem_HELP >= value(1, BodemKlasse14k) && SourceData/Landbouw/Bodem_HELP <= value(5, BodemKlasse14k), 5331.7[Eur_Ha_jaarlijks] * 1[ratio] - YieldReduction)
																	,case(SourceData/Landbouw/Bodem_HELP >= value(6, BodemKlasse14k) && SourceData/Landbouw/Bodem_HELP <= value(14, BodemKlasse14k), 6195.8[Eur_Ha_jaarlijks] * 1[ratio] - YieldReduction)
																	,0[Eur_Ha_jaarlijks]);
		attribute<Eur_Ha_jaarlijks> Net_revenues     (rdc_100m) := rotation * (gross_revenues - production_costs + CAP_subsidy);
		attribute<Eur_Ha_jaarlijks> gross_output     (rdc_100m) := rotation * gross_revenues;
	}
	
	container Zetmeelaardappelen
	{
		parameter<GewasSoortYR>     Gewas                       := GewasSoortYR/V/Zetmeelaardappelen;
		parameter<Eur_Ha_jaarlijks> CAP_subsidy                 := 410[Eur_Ha_jaarlijks];
		
		attribute<ratio>            rotation         (rdc_100m) := switch(
																	 case(SourceData/Landbouw/Bodem_HELP >= value(1, BodemKlasse14k) && SourceData/Landbouw/Bodem_HELP <= value(5, BodemKlasse14k), 0.003[ratio])
																	,case(SourceData/Landbouw/Bodem_HELP >= value(6, BodemKlasse14k) && SourceData/Landbouw/Bodem_HELP <= value(14, BodemKlasse14k), 0.300[ratio])
																	,0[ratio]);
		parameter<Eur_Ha_jaarlijks> production_costs            := 2471.5[Eur_Ha_jaarlijks];
		attribute<float32>          YieldReduction   (rdc_100m) := ='factoren/YieldReduction/AveragePeriod/'+GewasSoortYR/name[Gewas];
		attribute<Eur_Ha_jaarlijks> Gross_revenues   (rdc_100m) := 2638[Eur_Ha_jaarlijks] * (1[ratio] - YieldReduction); 
		attribute<Eur_Ha_jaarlijks> Net_revenues     (rdc_100m) := rotation * (gross_revenues - production_costs + CAP_subsidy);
		attribute<Eur_Ha_jaarlijks> gross_output     (rdc_100m) := rotation * gross_revenues;
	}
	
	container Suikerbieten
	{
		parameter<GewasSoortYR>     Gewas                       := GewasSoortYR/V/Suikerbieten;
		parameter<Eur_Ha_jaarlijks> CAP_subsidy                 := 275[Eur_Ha_jaarlijks];
		
		attribute<ratio>            rotation         (rdc_100m) := switch(
																	 case(SourceData/Landbouw/Bodem_HELP >= value(1, BodemKlasse14k) && SourceData/Landbouw/Bodem_HELP <= value(5, BodemKlasse14k), 0.167[ratio])
																	,case(SourceData/Landbouw/Bodem_HELP >= value(6, BodemKlasse14k) && SourceData/Landbouw/Bodem_HELP <= value(14, BodemKlasse14k), 0.216[ratio])
																	,0[ratio]);
		attribute<Eur_Ha_jaarlijks> production_costs (rdc_100m) := switch(
																	 case(SourceData/Landbouw/Bodem_HELP >= value(1, BodemKlasse14k) && SourceData/Landbouw/Bodem_HELP <= value(5, BodemKlasse14k), 1926.5[Eur_Ha_jaarlijks])
																	,case(SourceData/Landbouw/Bodem_HELP >= value(6, BodemKlasse14k) && SourceData/Landbouw/Bodem_HELP <= value(14, BodemKlasse14k), 2001.3[Eur_Ha_jaarlijks])
																	,0[Eur_Ha_jaarlijks]);
		attribute<float32>          YieldReduction   (rdc_100m) := ='factoren/YieldReduction/AveragePeriod/'+GewasSoortYR/name[Gewas];
		attribute<Eur_Ha_jaarlijks> Gross_revenues   (rdc_100m) := switch(
																	 case(SourceData/Landbouw/Bodem_HELP >= value(1, BodemKlasse14k) && SourceData/Landbouw/Bodem_HELP <= value(5, BodemKlasse14k), 3744.8[Eur_Ha_jaarlijks] * 1[ratio] - YieldReduction)
																	,case(SourceData/Landbouw/Bodem_HELP >= value(6, BodemKlasse14k) && SourceData/Landbouw/Bodem_HELP <= value(14, BodemKlasse14k), 3603.3[Eur_Ha_jaarlijks] * 1[ratio] - YieldReduction)
																	,0[Eur_Ha_jaarlijks]);
		attribute<Eur_Ha_jaarlijks> Net_revenues     (rdc_100m):= rotation * (gross_revenues - production_costs + CAP_subsidy);
		attribute<Eur_Ha_jaarlijks> gross_output     (rdc_100m):= rotation * gross_revenues;
	}
	
	container Granen
	{
		parameter<GewasSoortYR>     Gewas                       := GewasSoortYR/V/Granen;
		parameter<Eur_Ha_jaarlijks> CAP_subsidy                 := 446[Eur_Ha_jaarlijks];
		
		attribute<ratio>            rotation         (rdc_100m) := switch(
																	 case(SourceData/Landbouw/Bodem_HELP >= value(1, BodemKlasse14k) && SourceData/Landbouw/Bodem_HELP <= value(5, BodemKlasse14k), 0.029[ratio])
																	,case(SourceData/Landbouw/Bodem_HELP >= value(6, BodemKlasse14k) && SourceData/Landbouw/Bodem_HELP <= value(14, BodemKlasse14k), 0.053[ratio])
																	,0[ratio]);
		attribute<Eur_Ha_jaarlijks> production_costs (rdc_100m) := switch(
																	 case(SourceData/Landbouw/Bodem_HELP >= value(1, BodemKlasse14k) && SourceData/Landbouw/Bodem_HELP <= value(5, BodemKlasse14k), 1863.6[Eur_Ha_jaarlijks])
																	,case(SourceData/Landbouw/Bodem_HELP >= value(6, BodemKlasse14k) && SourceData/Landbouw/Bodem_HELP <= value(14, BodemKlasse14k), 1762.1[Eur_Ha_jaarlijks])
																	,0[Eur_Ha_jaarlijks]);
		attribute<float32>          YieldReduction   (rdc_100m) := ='factoren/YieldReduction/AveragePeriod/'+GewasSoortYR/name[Gewas];
		attribute<Eur_Ha_jaarlijks> Gross_revenues   (rdc_100m) := switch(
																	 case(SourceData/Landbouw/Bodem_HELP >= value(1, BodemKlasse14k) && SourceData/Landbouw/Bodem_HELP <= value(5, BodemKlasse14k), 1336.7[Eur_Ha_jaarlijks] * 1[ratio] - YieldReduction)
																	,case(SourceData/Landbouw/Bodem_HELP >= value(6, BodemKlasse14k) && SourceData/Landbouw/Bodem_HELP <= value(14, BodemKlasse14k), 1404.0[Eur_Ha_jaarlijks] * 1[ratio] - YieldReduction)
																	,0[Eur_Ha_jaarlijks]);
		attribute<Eur_Ha_jaarlijks> Net_revenues     (rdc_100m):= rotation * (gross_revenues - production_costs + CAP_subsidy);
		attribute<Eur_Ha_jaarlijks> gross_output     (rdc_100m):= rotation * gross_revenues;
	}
	
	container Wintertarwe
	{
		parameter<GewasSoortYR>     Gewas                       := GewasSoortYR/V/Wintertarwe;
		parameter<Eur_Ha_jaarlijks> CAP_subsidy                 := 446[Eur_Ha_jaarlijks];
		
		attribute<ratio>            rotation         (rdc_100m) := switch(
																	 case(SourceData/Landbouw/Bodem_HELP >= value(1, BodemKlasse14k) && SourceData/Landbouw/Bodem_HELP <= value(5, BodemKlasse14k), 0.483[ratio])
																	,case(SourceData/Landbouw/Bodem_HELP >= value(6, BodemKlasse14k) && SourceData/Landbouw/Bodem_HELP <= value(14, BodemKlasse14k), 0.105[ratio])
																	,0[ratio]);
		attribute<Eur_Ha_jaarlijks> production_costs (rdc_100m) := switch(
																	 case(SourceData/Landbouw/Bodem_HELP >= value(1, BodemKlasse14k) && SourceData/Landbouw/Bodem_HELP <= value(5, BodemKlasse14k), 1563.4[Eur_Ha_jaarlijks])
																	,case(SourceData/Landbouw/Bodem_HELP >= value(6, BodemKlasse14k) && SourceData/Landbouw/Bodem_HELP <= value(14, BodemKlasse14k), 1314.7[Eur_Ha_jaarlijks])
																	,0[Eur_Ha_jaarlijks]);
		attribute<float32>          YieldReduction   (rdc_100m) := ='factoren/YieldReduction/AveragePeriod/'+GewasSoortYR/name[Gewas];
		attribute<Eur_Ha_jaarlijks> Gross_revenues   (rdc_100m) := switch(
																	 case(SourceData/Landbouw/Bodem_HELP >= value(1, BodemKlasse14k) && SourceData/Landbouw/Bodem_HELP <= value(5, BodemKlasse14k), 2326.5[Eur_Ha_jaarlijks] * 1[ratio] - YieldReduction)
																	,case(SourceData/Landbouw/Bodem_HELP >= value(6, BodemKlasse14k) && SourceData/Landbouw/Bodem_HELP <= value(14, BodemKlasse14k), 1994.6[Eur_Ha_jaarlijks] * 1[ratio] - YieldReduction)
																	,0[Eur_Ha_jaarlijks]);
		attribute<Eur_Ha_jaarlijks> Net_revenues     (rdc_100m):= rotation * (gross_revenues - production_costs + CAP_subsidy);
		attribute<Eur_Ha_jaarlijks> gross_output     (rdc_100m):= rotation * gross_revenues;
	}
	
	container Zaaiuien
	{
		parameter<GewasSoortYR>     Gewas                       := GewasSoortYR/V/Zaaiuien;
		parameter<Eur_Ha_jaarlijks> CAP_subsidy                 := 0[Eur_Ha_jaarlijks];
		
		attribute<ratio>            rotation         (rdc_100m) := switch(
																	 case(SourceData/Landbouw/Bodem_HELP >= value(1, BodemKlasse14k) && SourceData/Landbouw/Bodem_HELP <= value(5, BodemKlasse14k), 0.003[ratio])
																	,case(SourceData/Landbouw/Bodem_HELP >= value(6, BodemKlasse14k) && SourceData/Landbouw/Bodem_HELP <= value(14, BodemKlasse14k), 0.300[ratio])
																	,0[ratio]);
		parameter<Eur_Ha_jaarlijks> production_costs            := 3091.4[Eur_Ha_jaarlijks];
		attribute<float32>          YieldReduction   (rdc_100m) := ='factoren/YieldReduction/AveragePeriod/'+GewasSoortYR/name[Gewas];
		attribute<Eur_Ha_jaarlijks> Gross_revenues   (rdc_100m) := 5711.8[Eur_Ha_jaarlijks] * (1[ratio] - YieldReduction); 
		attribute<Eur_Ha_jaarlijks> Net_revenues     (rdc_100m) := rotation * (gross_revenues - production_costs + CAP_subsidy);
		attribute<Eur_Ha_jaarlijks> gross_output     (rdc_100m) := rotation * gross_revenues;
	}

	attribute<Eur_M2>           totaal                   (rdc_100m) := Economic_performance/Net_revenues * Kapitalisatie/Factor - Economic_performance/Conversion_costs;
	
	container Kapitalisatie := ='Kapitalisatie_T(ModelType/V/'+ name +')';
	
	container Economic_performance
	{
		parameter<ratio>            holding_costs_ratio           := 0.208[ratio];
		attribute<Eur_Ha_jaarlijks> total_gross_output (rdc_100m) := = 'add('+ AsItemList(GewasSoortYR/akkerbouw/name + '/gross_output') + ')';
		attribute<Eur_Ha_jaarlijks> holding_costs      (rdc_100m) := holding_costs_ratio * total_gross_output;
		attribute<Eur_Ha_jaarlijks> Net_revenues_ha    (rdc_100m) := = 'add('+ AsItemList(GewasSoortYR/akkerbouw/name + '/Net_revenues') + ') - holding_costs';
		attribute<EUR_M2_jaarlijks> Net_revenues       (rdc_100m) := Net_revenues_ha[EUR_M2_jaarlijks];
		attribute<EUR_M2>           Conversion_costs   (rdc_100m) := ='value(makedefined(Factoren/transitiekosten/'+ name + '[gg_LandbouwK],0[EUR_ha]),EUR_M2)';
	}
}
