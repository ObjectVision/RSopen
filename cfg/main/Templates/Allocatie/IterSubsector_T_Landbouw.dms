Template IterSubsector_T_Landbouw
{
	parameter<SubSector> id;
	unit<uint8> SubSector;
	container StateVoorAllocatie;
	container Context0;
	//
	
	container Context := Context0
	{
		container ThisSubsector := ..;
	}
	
	parameter<string> name               := SubSector/name[id];
	parameter<string> SubSector_pathname := SubSector/Sector_name_ThisName[id];
	parameter<string> Zichtjaar_name     := Context/ThisZichtjaar/name;
	parameter<string> AllocRegio_name    := Context/ThisSectorAllocRegio/allocregio_name;
	
	unit<uint32> TredeK := = 'VariantData/Trede/SectorXSubSectoren/'+SubSector_pathname+'/Klasse';
	
	unit<uint64> CompactedAdminDomain := Geography/CompactedAdminDomain
	{
		attribute<bool>    Beschikbaar                := = 'PotentieleState/'+Zichtjaar_name+'/per_SectorXSubsectoren/'+SubSector_pathname+'/Beschikbaar_zichtjaar && !(IsDefined(StateVoorAllocatie/Subsector_rel)) && !ExtraRestrictieDoorWindAllocatie';
		attribute<float32> PotentieleStateNaAllocatie := = 'PotentieleState/'+Zichtjaar_name+'/per_SectorXSubsectoren/'+SubSector_pathname+'/Zichtjaar * float32(Beschikbaar)';
	}
	
	unit<uint64> CompactedAllocDomain := Geography/CompactedAllocDomain
	{
		attribute<float32> PotentieleStateNaAllocatie := sum(CompactedAdminDomain/PotentieleStateNaAllocatie, CompactedAdminDomain/CompactedAllocDomain_rel);
		attribute<float32> Geschiktheid_src           := = 'VariantData/Suitability/'+Zichtjaar_name+'/'+SubSector_pathname;
		attribute<uint32>  Geschiktheid_src_ordered   := invert(index(Geschiktheid_src))[uint32];
		parameter<uint32>  Geschiktheid_src_range     := max(Geschiktheid_src_ordered)+100;
		attribute<uint32>  TredeScore                 := (#TredeK -1) - collect_by_cond(CompactedAllocDomain, AllocDomain/IsCompactedDomain, TredeK/Per_AllocDomain), IntegrityCheck = "max(collect_by_cond(CompactedAllocDomain, AllocDomain/IsCompactedDomain, TredeK/Per_AllocDomain)) < #TredeK";
		attribute<float32> Geschiktheid               := float32(TredeScore) * float32(Geschiktheid_src_range) + float32(Geschiktheid_src_ordered);
	}
	
	unit<uint32> AllocRegio := Context/ThisSectorAllocRegio/AllocRegio
	{
	}
}