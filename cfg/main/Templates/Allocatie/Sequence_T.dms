Template Sequence_T : using = "Classifications/modellering"
{
	//
	parameter<Sequence> id;
	container StateVoorAllocatie;
	container Context0;
	parameter<Bool> IsSeq0;
	unit<UInt8> SectorAllocRegio;
	unit<UInt8> Sequence;
	container Impl0;
	//
	
	parameter<String> name := Sequence/name[id];
	
	container Context := Context0
	{
		container ThisSequence := ..;
		parameter<String> ThisSequencename := Sequence/name[id];
	}
	
	parameter<Bool> ExtraRestrictieDoorWindAllocatieNodig                       := lowercase(name) != lowercase('Seq_0') && VariantParameters/SectorAllocRegio/Uq_Sectors/HasWindSector, Descr = "Extra restricties door wind allocatie zijn nodig wanneer er in voorgaande stappen wind is Gealloceerd. Dus in seq0 is dat nooit het geval, want wind komt als laatste. En als er uberhaupt geen wind gealloceerd wordt.";
	parameter<Bool> ExtraRestrictieDoorHuidigeWindNodig                         := NOT(VariantParameters/SectorAllocRegio/Uq_Sectors/HasWindSector), Descr = "Wanneer er geen wind wordt gealloceerd, en huidige windmolen voor altijd blijven staan, moeten we die wel netjes uitsluiten van voor nieuwe wonen/werken/verblijfsrec allocatie";
	attribute<Bool> ExtraRestrictieDoorHuidigeZonneweide (CompactedAdminDomain) := =NOT(VariantParameters/SectorAllocRegio/Uq_Sectors/HasZonSector)
																					? 'collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, BaseData/StartState/StateBasisjaar/Src/Zon/Totaal > 0[MW])'
																					: 'const(FALSE, CompactedAdminDomain)', Descr = "Wanneer er geen zon wordt gealloceerd, en huidige zonneweide voor altijd blijven staan, moeten we die wel netjes uitsluiten van voor nieuwe wonen/werken/verblijfsrec allocatie";
	attribute<Bool> ExtraRestrictieDoorWindAllocatie     (CompactedAdminDomain) := =ExtraRestrictieDoorWindAllocatieNodig
																					? 'Impl/ExtraRestrictieDoorWindAllocatie/IsNietToegestaan'
																					: ExtraRestrictieDoorHuidigeWindNodig
																						? 'collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, VariantData/Wind_restricties/Dynamisch/Bestaande_turbines/IsNietToegestaan_basis)'
																						: 'const(FALSE, CompactedAdminDomain)';
	
	container Impl := Impl0
	{
		container ExtraRestrictieDoorWindAllocatie
		{
			parameter<String> Gealloceerd_str                         := ExtraRestrictieDoorWindAllocatieNodig
																			? 'StateVoorAllocatie/Wind/Totaal > 0f'
																			: 'const(FALSE, CompactedAdminDomain)';
			attribute<Bool> Gealloceerd        (CompactedAdminDomain) := = Gealloceerd_str;
			attribute<Bool> Gealloceerd_buffer (CompactedAdminDomain) := = ExtraRestrictieDoorWindAllocatieNodig
																			? 'Buffer/proximity_res'
																			: 'const(FALSE, CompactedAdminDomain)';
			
			container Buffer := Templates/Buffer_gridcel_T(Gealloceerd,  4d * CaseClassifications/WindTurbineType/RotorDiameter[float64]);
			
			attribute<Bool> IsNietToegestaan (CompactedAdminDomain) := Gealloceerd_buffer;
		}
	}
	
	container SectorAllocRegios :=
		for_each_ne(
			SectorAllocRegio/name
			,'SectorAllocRegio_T(
				SectorAllocRegio
				,'+string(id(SectorAllocRegio))+'[SectorAllocRegio]
				,'+SectorAllocRegio/PrevState+'
				, Context
				, '+string(SectorAllocRegio/AantalIters)+'[uint8]
				, Impl
			)'
		);
	
	container StateNaAllocatie := = #SectorAllocRegio > 0 ? 'SectorAllocRegios/'+last(SectorAllocRegio/name)+'/StateNaAllocatie' : 'StateVoorAllocatie';
}