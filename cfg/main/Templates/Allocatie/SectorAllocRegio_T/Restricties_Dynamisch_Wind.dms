unit<uint64> Restricties_Dynamisch_Wind  := CompactedAdminDomain
{
	attribute<Bool>    IsNietToegestaan_Dynamisch := =asList(''+VariantData/Wind_restricties/layers/Dynamisch/name+'/IsNietToegestaan', ' || ');

	// 1.  beperkt kwestbare gebouwen -> afstand = 1/2 * rotordiameter
	container beperkt_kwestbare_gebouwen
	{
		// b. Kantoorgebouwen, wanneer niet kwetsbaarobject c
		container kantoren
		{
			parameter<String> Gealloceerd_str := 'StateVoorAllocatie/Werken/Zak_dienstverlening > 0f || StateVoorAllocatie/Werken/Overheid_kw_diensten > 0f';
			
			attribute<Bool> Gealloceerd        (CompactedAdminDomain) := =Gealloceerd_str;
			attribute<Bool> Gealloceerd_buffer (CompactedAdminDomain) := Buffer/proximity_res;
			
			container Buffer := Templates/Buffer_gridcel_T(Gealloceerd, 0.5d * CaseClassifications/WindTurbineType/RotorDiameter[float64]);
		}
		
		// d. winkels, wanneer niet kwetsbaarobject c
		container winkels
		{
			parameter<String> Gealloceerd_str := 'StateVoorAllocatie/Werken/Ov_consumentendiensten  > 0f || StateVoorAllocatie/Werken/Detailhandel  > 0f';
			
			attribute<Bool> Gealloceerd        (CompactedAdminDomain) := =Gealloceerd_str;
			attribute<Bool> Gealloceerd_buffer (CompactedAdminDomain) := Buffer/proximity_res;
			
			container Buffer := Templates/Buffer_gridcel_T(Gealloceerd, 0.5d * CaseClassifications/WindTurbineType/RotorDiameter[float64]);
		}
		
		// g. bedrijfsgebouwen, wanneer niet kwetsbaarobject c
		container bedrijfsgebouwen
		{
			parameter<String> Gealloceerd_str := 'StateVoorAllocatie/Werken/Nijverheid  > 0f || StateVoorAllocatie/Werken/Logistiek  > 0f';
			
			attribute<Bool> Gealloceerd        (CompactedAdminDomain) := =Gealloceerd_str;
			attribute<Bool> Gealloceerd_buffer (CompactedAdminDomain) := Buffer/proximity_res;
			
			container Buffer := Templates/Buffer_gridcel_T(Gealloceerd, 0.5d * CaseClassifications/WindTurbineType/RotorDiameter[float64]);
		}
		
		attribute<Bool> IsNietToegestaan (CompactedAdminDomain) := kantoren/Gealloceerd_buffer
			|| winkels/Gealloceerd_buffer
			|| bedrijfsgebouwen/Gealloceerd_buffer
			;
	}
	
	// 2.  kwestbare gebouwen --> afstand = MaxElem(ashoogte + 1/2 * rotordiameter, max werpafstand bij nom. toerental)
	container kwestbare_gebouwen
	{
		// a. Woningen, niet zijnde Woningen als bedoeld in beperkt kwetsbare gebouwen
		container Woningen
		{
			parameter<String> Gealloceerd_str0 := Aslist('StateVoorAllocatie/Wonen/'+/Classifications/Actor/Sector/xSubsectoren/Wonen/Subsector/Subsector_name+' > 0f', ' || ');
			parameter<String> Gealloceerd_str  := /VariantParameters/SectorAllocRegio/Uq_Sectors/HasWonenSector ? Gealloceerd_str0 : 'const(FALSE, CompactedAdminDomain)' ;
			
			attribute<Bool> Gealloceerd        (CompactedAdminDomain) := =Gealloceerd_str;
			attribute<Bool> Gealloceerd_buffer (CompactedAdminDomain) := Buffer/proximity_res;
			
			container Buffer :=
				= 'Templates/Buffer_gridcel_T(
					Gealloceerd,
					max_elem(
						VariantParameters/VariantK/AfstandGeluidsnorm[VariantParameters/VariantK/V/'+Variant_name+'],
						CaseClassifications/WindTurbineType/Ashoogte + 0.5f * CaseClassifications/WindTurbineType/RotorDiameter,
						CaseClassifications/WindTurbineType/MaxWerpAfstandNom
					)[float64]
				)';
		}
		
		attribute<Bool> IsNietToegestaan (CompactedAdminDomain) := Woningen/Gealloceerd_buffer;
	}
	
	// 4.  bestaande turbines --> afstand = 4 * rotordiameter
	container Bestaande_turbines
	{
		parameter<String> Gealloceerd_str := 'StateVoorAllocatie/Wind/Totaal > 0f';
		
		attribute<Bool> Gealloceerd        (CompactedAdminDomain) := =Gealloceerd_str;
		attribute<Bool> Gealloceerd_buffer (CompactedAdminDomain) := Buffer/proximity_res;
		
		container Buffer := Templates/Buffer_gridcel_T(Gealloceerd,  4d * CaseClassifications/WindTurbineType/RotorDiameter[float64]);
		
		attribute<Bool> IsNietToegestaan (CompactedAdminDomain) := Gealloceerd_buffer;
	}
	
	// 7.  losse bebouwing geluid
			// a. Woningen buiten Woonkernen
	container losse_bebouwing_geluid
	{
		attribute<Bool> IsNietToegestaan (CompactedAdminDomain)   := const(FALSE, CompactedAdminDomain);
	}
	
	// 14. Woonkernen -> afstand = 500 meter
			// a. aaneengesloten Woningen binnen een woonkern
	container Woonkernen
	{
		attribute<Bool> IsNietToegestaan (CompactedAdminDomain)   := const(FALSE, CompactedAdminDomain);
	}
}
