Template BereikbaarheidGroen : using = "Classifications/Actor"
{
	container SrcSrc;
	parameter<String> Ref;
	//
	
	container Src := .;
	
	parameter<Woning_ha> MaxWoningenInGroen                 := 5[Woning_ha];
	parameter<meter2>    MinimumOppervlakteInCelOmMeeTeDoen := 100[meter2];
	parameter<ha>        MinimumAaneengeslotenOppervlakte   := 1[Ha];
	parameter<float32>   FractieGroenWerken                 := ='VariantParameters/FractiesGroenInWerken/'+VariantParameters/VariantK/FractieGroenVariant_Werken[/Variant_rel]+'/GroenTotaal';
	parameter<float32>   FractieGroenVerblijfsrecreatie     := ='VariantParameters/FractiesGroenInVerblijfsrecreatie/'+VariantParameters/VariantK/FractieGroenVariant_Verblijfsrecreatie[/Variant_rel]+'/GroenTotaal';

	// unit<UInt32> Regio     := SourceData/RegioIndelingen/Provincie;
	
	// unit<UInt8>  Indicator : NrOfRows = 3
	// {
		// attribute<String> name     : [
										  // 'Aanwezig'       //Oppervlakte groen waar groen aanwezig is
										// , 'Beschikbaar'    //Oppervlakte groen nabij woningen
										// , 'Bereikbaar'     //
									// ];  
		// attribute<String> GroenSrc : [
										  // '1f'                                                //Cellen waar groen aanwezig is
										// , '(AantalWoningenInOmgeving > 0[Woning])[float32]'   //Groen nabij woningen
										// , 'OppGroenInOmgeving[float32]'                       //
									// ];
	// }
	
	unit<UInt8> GroenBlauwK : NrOfRows = 1
	{
		attribute<String> name : ['Groen'];
		attribute<String> Label := name;
		container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
	}

	attribute<Meter2> OppGroen_Basisjaar                 (AdminDomain) := /SourceData/Grondgebruik/BGT/IsDefinedAndNotNoData/GroenOpp_AdminDomain;
	attribute<Woning> Woningen                           (AdminDomain) := SrcSrc/Stand/Aantal_Woningen_Totaal[Woning];

	attribute<Meter2> OppGroen_NaAllocWonen              (AdminDomain) := ='VariantParameters/Ontwikkelpakketten/DezeBuurtSchaal/'+VariantParameters/VariantK/OntwikkelPakketVariant[/Variant_rel]+'/InDezeBuurt/GroenOppervlakte[SrcSrc/Stand/OP_rel]';
	attribute<Meter2> OppGroen_NaAllocWerken             (AdminDomain) := SrcSrc/Stand/Sector_rel == Sector/V/werken ? FractieGroenWerken * AdminDomain/NrMeter2PerCell : null_f;
	attribute<Meter2> OppGroen_NaAllocVerblijfsrecreatie (AdminDomain) := SrcSrc/Stand/Sector_rel == Sector/V/verblijfsrecreatie ? FractieGroenVerblijfsrecreatie * AdminDomain/NrMeter2PerCell : null_f;

	attribute<Meter2> OppGroen                           (AdminDomain) := =lowercase(ThisYear/Zichtjaar) == lowercase('basisjaar') 
																			? 'OppGroen_Basisjaar'
																			: 'switch(
																				 case(IsDefined(OppGroen_NaAllocWonen), OppGroen_NaAllocWonen)
																				,case(IsDefined(OppGroen_NaAllocWerken), OppGroen_NaAllocWerken)
																				,case(IsDefined(OppGroen_NaAllocVerblijfsrecreatie), OppGroen_NaAllocVerblijfsrecreatie)
																				,OppGroen_Basisjaar
																				)';
	
	container Afstanden := for_each_ne(Bereikbaarheid/AfstandGroen/name, 'Per_Afstand_T('+string(id(Bereikbaarheid/AfstandGroen))+'[Bereikbaarheid/AfstandGroen], Woningen, Src)');
	
	Template Per_Afstand_T 
	{
		parameter<Bereikbaarheid/AfstandGroen> AfstandGroen_id;
		attribute<Woning>                      Woningen (AdminDomain);
		container Src;
		//
		
		container AggrGroenKlassen := 
			for_each_ne(
				GroenBlauwK/name
				, 'Per_GroenBlauwK_T(Src/OppGroen, AfstandGroen_id, Woningen, Src)');
	}
	
	Template Per_GroenBlauwK_T 
	{
		attribute<Meter2>                      OppGroen (AdminDomain);
		parameter<Bereikbaarheid/AfstandGroen> AfstandGroen_id;
		attribute<Woning>                      Woningen (AdminDomain);
		container Src;
		//
		
		parameter<meter>   AfstandGroen_Bovengrens        := Bereikbaarheid/AfstandGroen/Bovengrens[AfstandGroen_id];
		attribute<Bool>    Extent0          (AdminDomain) := Woningen <= Src/MaxWoningenInGroen * AdminDomain/NrHaPerCell && OppGroen > MinimumOppervlakteInCelOmMeeTeDoen, Descr = "Initiele groen extent: opp groen per cell boven grens EN minder woningen in cel dan grens";
		
		unit<UInt32> ExtentDistrict := district(uint32(Extent0))
		, Descr = "Zoek aaneengelsoten stukken groen"
		{
			attribute<meter2> Oppervlakte                   := sum(OppGroen, Districts);
		}
		
		attribute<Bool>   Extent               (AdminDomain) := Extent0 && ExtentDistrict/Oppervlakte[ExtentDistrict/Districts] >= Src/MinimumAaneengeslotenOppervlakte[meter2], Descr = "Groen extent: Initiele extent EN aangesloten groen opp boven grens.";
		attribute<meter2> OppGroenBinnenExtent (AdminDomain) := Extent ? OppGroen : 0[meter2];
		
		attribute<Woning> AantalWoningenInOmgeving (AdminDomain) := //sommeert aantal woningen binnen range
			= 'potential(
				Woningen
				,Geography/Distmatrices/Impl_25m/pot'+string(AfstandGroen_Bovengrens)+'m/PotRange/Flat2
			)[Woning]';
			
		attribute<Meter2> OppGroenInOmgeving (AdminDomain) := //sommeert oppervlakte groen binnen range
			= 'potential(
				OppGroenBinnenExtent
				,Geography/Distmatrices/Impl_25m/pot'+string(AfstandGroen_Bovengrens)+'m/PotRange/Flat2
			)[meter2]';
		
		// container Indicatoren := for_each_ne(Indicator/name, 'Indicatoren_T('+quote(Indicator/GroenSrc)+', ..)');
	}
	
	// Template Indicatoren_T // fka T4
	// {
		
		// parameter<String> GroenSrc;
		// container Src;
		
		
		// attribute<Meter2> Groen (AdminDomain) := = GroenSrc+' * Src/OppGroenBinnenExtent'
		// {
			// parameter<Meter2> Aggregated := sum(.)
			// {
				// parameter<m2_Woning> PerWoning := . / sum(Src/Woningen);
			// }
		// }
	// }
}