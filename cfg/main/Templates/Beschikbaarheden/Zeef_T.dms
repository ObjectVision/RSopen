Template Zeef_T //wordt aangeroepen in Zeef_Zichtjaar_T
: Descr = "Bepaal de zeef in de zichtjaren. Daarnaast verschil tussen deze beschikbaarheid in VariantData tov die in BaseData is dat deze op AllocDomain checks uitvoert en die in de BaseData op AdminDomain."
{
	unit<UInt32> VariantXSectorxSubsector;
	parameter<VariantXSectorxSubsector> id;
	container Analysis;
	parameter<String> Zichtjaar_name;
	//
	
	parameter<String>  name                                             := VariantXSectorxSubsector/combi_name[id];
	parameter<ha>      MinimalLandAvailability                          := VariantK/MinimalLandAvailability[/Variant_rel];
	parameter<ha>      MinimalLandAvailability_Landbouw                 := VariantK/MinimalLandAvailability_Landbouw[/Variant_rel];
	parameter<Float32> MinimumDichtheidToenameSector                    := ='VariantK/MinimumDichtheidToename'+Sector_name+'[/Variant_rel]';
	parameter<Float32> MinimumSubsectorShare                            := VariantK/MinimumSubsectorShare[/Variant_rel];
	parameter<String>  Variant_name                                     := VariantK/name[/Variant_rel];
	parameter<String>  Sector_name                                      := lowercase(VariantXSectorxSubsector/Sector_name[id]);
	parameter<String>  Subsector_name                                   := VariantXSectorxSubsector/Subsector_name[id];
	parameter<Yr>      GeenSlooptotLeeftijd_BinnenHardePlancapaciteit   := /ModelParameters/Wonen/GeenSlooptotLeeftijd_BinnenHardePlancapaciteit;
	parameter<Yr>      GeenSlooptotLeeftijd_BuitenHardePlancapaciteit   := VariantK/GeenSlooptotLeeftijd_BuitenHardePlancapaciteit[/Variant_rel];

	attribute<Bool>    IsBeschikbaar             (CompactedAdminDomain) := !IsRestrictief;
	attribute<Bool>    IsRestrictief             (CompactedAdminDomain) := = 
		'OR(
			 IsRestrictief_BuitenPlancapaciteit[CompactedAdminDomain/CompactedAllocDomain_rel]
			,IsRestrictief_OokBinnenPlancapaciteit[CompactedAdminDomain/CompactedAllocDomain_rel]
			,VariantData/Zeef/Basisjaar/'+Sector_name+'/'+Subsector_name+'/IsRestrictief'
			',Impl/TeHoogBouwjaarBinnenHardePlancapaciteit' //TO DO: 20250909 check of dit goed werkt.
			',Impl/TeHoogBouwjaarBuitenHardePlancapaciteit' //TO DO: 20250909 check of dit goed werkt.
		')', Descr = "Is de locatie restrictief voor deze sector/subsector in dit zichtjaar?";
	
	//Geldt ook in plannen voor van betreffende sector
	attribute<Bool> IsRestrictief_OokBinnenPlancapaciteit  (CompactedAllocDomain) := = Sector_name = lowercase('Wind') || Sector_name = lowercase('Zon')  || Sector_name = lowercase('Landbouw')  
																						? 'Impl/HeeftPandenInCelInBasisjaar' 
																						: 'Impl/TeKleineDichtheidsToenameSubsector', Descr = "Is de locatie restrictief, ook binnen plancapaciteit?";
	
	//Geldt alleen buiten plannen van betreffende sector
	attribute<Bool> IsRestrictief_BuitenPlancapaciteit     (CompactedAllocDomain) := IsRestrictief_BuitenPlancapaciteit0 && !Src/HeeftPlannenDezeSector, Descr = "Is de locatie restrictief, alleen buiten plancapaciteit?";
	attribute<Bool> IsRestrictief_BuitenPlancapaciteit0    (CompactedAllocDomain) := = Sector_name = lowercase('Wind') || Sector_name = lowercase('Zon') 
																						? 'const(FALSE, CompactedAllocDomain)' 
																						: 'OR(Impl/TeLageSubsectorShare, Impl/GeeftOnvoldoendeRuimte)';
	
	container Impl
	{
		attribute<Bool>    HeeftPandenInCelInBasisjaar             (CompactedAllocDomain) := (Sector_name == lowercase('Zon') || Sector_name == lowercase('Wind') || Sector_name == lowercase('Verblijfsrecreatie')) && src/HeeftPandenInCelInBasisjaar;
		attribute<Bool>    TeKleineDichtheidsToenameSubsector      (CompactedAllocDomain) := Sector_name == lowercase('Werken') && src/PotentieleDichtheidToenameSubsector < MinimumDichtheidToenameSector;
		attribute<Bool>    TeLageSubsectorShare                    (CompactedAllocDomain) := Sector_name == lowercase('Werken') && src/SubsectorShare < MinimumSubsectorShare;
		attribute<Bool>    GeeftOnvoldoendeRuimte                  (CompactedAllocDomain) := Src/PotentieleRuimte < MinimalLandAvailability;
		attribute<Bool>    TeHoogBouwjaarBinnenHardePlancapaciteit (CompactedAdminDomain) := src/PandLeeftijd < GeenSlooptotLeeftijd_BinnenHardePlancapaciteit[float32];
		attribute<Bool>    TeHoogBouwjaarBuitenHardePlancapaciteit (CompactedAdminDomain) := src/PandLeeftijd < GeenSlooptotLeeftijd_BuitenHardePlancapaciteit[float32];
	}
	
	container Src
	{
		attribute<Float32> PandLeeftijd                        (CompactedAdminDomain) := ='float32('+substr(Zichtjaar_name, 1,4)+') - /VariantData/Zeef/Basisjaar/'+Sector_name+'/'+Subsector_name+'/Src/BouwjaarPand', Descr = "Leeftijd van het pand in het zichtjaar";
		attribute<Bool>    HeeftPandenInCelInBasisjaar         (CompactedAllocDomain) := = 'collect_by_cond(CompactedAllocDomain, AllocDomain/IsCompactedDomain, SourceData/Vastgoed/BAG/PerJaar/Y'+string(/ModelParameters/BAG_RecentYear)+'/pand/counts/Per_AllocDomain)[float32] > 0f', Descr = "Zijn er panden in de cel in het basisjaar?";
		attribute<Bool>    HeeftPlannenDezeSector              (CompactedAllocDomain) := = Sector_name == lowercase('Landbouw') ? 'const(FALSE, CompactedAllocDomain)' : 'Plannen/Per_CompactedAllocDomain/Hard/Result/'+Sector_name+' || Plannen/Per_CompactedAllocDomain/Zacht/Result/'+Sector_name, Descr = "Zijn er plannen voor deze sector in deze cel?";
		attribute<Float32> PotentieleDichtheidToenameSubsector (CompactedAllocDomain) := ='VariantData/PotentieleState/'+Zichtjaar_name+'/Per_SectorxSubsectoren/'+Sector_name+'/'+Subsector_name+'/TovStateVoorAllocatie', Descr = "Potentiële dichtheidstoename van de subsector in deze cel in het zichtjaar";
		attribute<Float32> SubsectorShare                      (CompactedAllocDomain) := ='VariantData/PotentieleState/'+Zichtjaar_name+'/Per_SectorxSubsectoren/'+Sector_name+'/'+Subsector_name+'/Basisjaar/SubsectorShare', Descr = "Subsector share in deze cel in het zichtjaar";
		attribute<ha>      PotentieleRuimte                    (CompactedAllocDomain) := = 'sum(float32(VariantData/Zeef/Basisjaar/'+Sector_name+'/'+Subsector_name+'/IsBeschikbaar) * AdminDomain/NrHaPerCell, CompactedAdminDomain/CompactedAllocDomain_rel)', Descr = "Potentiële ruimte voor deze sector/subsector in deze cel in het zichtjaar";
		attribute<Bool>    GeeftOnvoldoendeRuimte_Landbouw     (CompactedAdminDomain) := (PotentieleRuimte < MinimalLandAvailability_Landbouw)[CompactedAdminDomain/CompactedAllocDomain_rel], Descr = "Geeft onvoldoende ruimte voor landbouw in deze cel in het zichtjaar";
	}
}
