Template Zeef_Basisjaar_T
: Descr = "Bepaal de zeef op AdminDomain. Dit is een eerste stap in de zeef procedure"
{
	//
	unit<UInt32> VariantXSectorxSubsector;
	parameter<VariantXSectorxSubsector> id;
	container VariantData;
	//
	
	parameter<String>  name                                             := VariantXSectorxSubsector/combi_name[id];
	parameter<String>  Variant_name                                     := VariantK/name[/Variant_rel];
	parameter<String>  KlimaatScenario_ref                              := VariantK/KlimaatScenario_ref[/Variant_rel];
	parameter<String>  ReserverenVoorRivierAfvoer_ref                   := VariantK/ReserverenVoorRivierAfvoer_ref[/Variant_rel];
	parameter<Bool>    NietBouwenInNatuurorganisaties                   := VariantK/NietBouwenInNatuurorganisaties[/Variant_rel];
	parameter<Bool>    NietBouwenInWaterschappen                        := VariantK/NietBouwenInWaterschappen[/Variant_rel];
	parameter<Bool>    NietBouwenVerVanOV                               := VariantK/NietBouwenVerVanOV[/Variant_rel];
	parameter<Bool>    BouwenInWoonlocatieNietVanGemeenteOfCorporatie   := VariantK/BouwenInWoonlocatieNietVanGemeenteOfCorporatie[/Variant_rel];
	parameter<Bool>    NietBouwenOpZeehaven                             := VariantK/NietBouwenOpZeehaven[/Variant_rel];
	parameter<Bool>    NietBouwenWaarSlap                               := VariantK/NietBouwenWaarSlap[/Variant_rel];
	parameter<Bool>    NietBouwenWaarZettingsgevoelig                   := VariantK/NietBouwenWaarZettingsgevoelig[/Variant_rel];
	parameter<Bool>    NietBouwenWaarNat                                := VariantK/NietBouwenWaarNat[/Variant_rel];
	parameter<Bool>    NietBouwenInZeerMooiLandschap                    := = iif(lowercase(Sector_name) == lowercase('Wonen') || lowercase(Sector_name) == lowercase('Werken') || lowercase(Sector_name) == lowercase('Verblijfsrecreatie'), 'VariantK/NietBouwenInZeerMooiLandschap'+Sector_name+'[/Variant_rel]', 'FALSE');
	parameter<Bool>    NietBouwenInMooiLandschap                        := VariantK/NietBouwenInMooiLandschap[/Variant_rel];
	parameter<Bool>    RestrictiesOokGeldigBinnenHardePlancapaciteit    := VariantK/RestrictiesOokGeldigBinnenHardePlancapaciteit[/Variant_rel];
	parameter<Bool>    NietBouwenInNatura2000Buffer                     := VariantK/NietBouwenInNatura2000Buffer[/Variant_rel];
	parameter<Bool>    IsHardePlannenGeldigInZeef                       := VariantK/HardePlannenGeldigInZeef[/Variant_rel];
	parameter<Bool>    IsZachtePlannenGeldigInZeef                      := VariantK/ZachtePlannenGeldigInZeef[/Variant_rel];
	parameter<Energielabel> GeenSloopvanafELabel                        := VariantK/GeenSloopvanafELabel[/Variant_rel];
	
	parameter<String> Sector_name    := VariantXSectorxSubsector/Sector_name[id];
	parameter<String> Subsector_name := VariantXSectorxSubsector/Subsector_name[id];
	
	parameter<Bool>   IsWerkenMaarGeenNijverheidEnLogistiek := lowercase(Sector_name) == lowercase('Werken') && !(lowercase(Subsector_name) == lowercase('NijverheidEnLogistiek'));
	
	attribute<Bool>   IsBeschikbaar         (CompactedAdminDomain) := !IsRestrictief;
	attribute<Bool>   IsBeschikbaar_AdminDomain      (AdminDomain) := recollect_by_cond(AdminDomain/IsCompactedDomain, IsBeschikbaar, FALSE);
	attribute<Bool>   IsRestrictief         (CompactedAdminDomain) := IsRestrictief_BuitenPlancapaciteit || IsRestrictief_BuitenHardePlancapaciteit || IsRestrictief_Overal;
	
	// Geldt overal
	attribute<Bool> IsRestrictief_Overal (CompactedAdminDomain) :=
		OR(
			Impl/IsEvidentBenutBinnenPlancapaciteit,
			Impl/IsRestrictiefBinnenHardePlancapaciteit,
			Impl/TeGevaarlijk,
			Impl/ReserverenVoorRivierAfvoer,
			Impl/IsAutowegInclKlaverbladen
		), Descr = "Deze restricties gelden overal, dus ook binnen plancapaciteit"; //TeHoogBouwjaar wordt nu geregeld via zichtjaren met dynamische pand leeftijd. zie issue #277
	
	// Alleen harde plancapaciteit wordt uitgezonderd
	attribute<Bool> IsRestrictief_BuitenHardePlancapaciteit (CompactedAdminDomain):=
		OR(
			Impl/TeHoogEnergielabel,
			Impl/TeSlap,
			Impl/TeNat,
			Impl/TeHogeBeheerKostenInfra,
			Impl/TeZettingsgevoelig,
			Impl/IsMooiLandschap,
			Impl/IsZeerMooiLandschap,
			Impl/IsInNatura2000Buffer,
			Impl/IsWoonlocatieNietVanGemeenteOfCorporatie,
			Impl/IsRestrictiefBuitenHardePlancapaciteit
		)
		&& !Impl/HeeftHardePlannenDezeSector, Descr = "Deze restricties gelden overal, behalve binnen harde plancapaciteit";
	
	// Zowel harde als zachte plancapaciteit wordt uitgezonderd
	attribute<Bool> IsRestrictief_BuitenPlancapaciteit (CompactedAdminDomain):=
		OR(
			Impl/IsEvidentBenutBuitenPlancapaciteit,
			Impl/IsEigendomVanNatuurOrganisatie,
			Impl/IsEigendomVanWaterschap,
			Impl/IsZeehaven,
			Impl/IsNietNabijOV
		)
		&& !Impl/HeeftPlannenDezeSector, Descr = "Deze restricties gelden overal, behalve binnen plancapaciteit";
	
	container Impl
	{
		parameter<Bool>   IsThisSectorWonen             := lowercase(Sector_name) == lowercase('Wonen');
		parameter<Bool>   IsThisSectorWerken            := lowercase(Sector_name) == lowercase('Werken');
		parameter<Bool>   IsThisSectorVerblijfsrecreatie:= lowercase(Sector_name) == lowercase('Verblijfsrecreatie');
		parameter<Bool>   IsThisSectorZon               := lowercase(Sector_name) == lowercase('Zon');
		parameter<Bool>   IsThisSectorWind              := lowercase(Sector_name) == lowercase('Wind');
		parameter<Bool>   IsLandbouw                    := lowercase(Sector_name) == lowercase('Landbouw');
		parameter<Bool>   IsThisSectorWonenOfWerken     := IsThisSectorWonen || IsThisSectorWerken;
		parameter<String> EvidentBenutVariant             := ='VariantParameters/VariantK/EvidentBenutVariant_'+Sector_name+'[Variant_rel]';
		
		attribute<Bool> IsEvidentBenut_obv_BGT                     (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, SourceData/Grondgebruik/BGT/IsDefinedAndNotNoData/IsEvidentBenut_AdminDomain), Descr = "Is de locatie reeds benut op basis van BGT (evident benut)";
		attribute<Bool> IsEvidentBenut_obv_BGT_wind                (CompactedAdminDomain) := =IsThisSectorWind ? 'collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, SourceData/Grondgebruik/BGT/IsDefinedAndNotNoData/IsAutoweg/Per_AdminDomain || SourceData/Grondgebruik/BGT/IsDefinedAndNotNoData/IsSpoorbaan/Per_AdminDomain)' : 'const(FALSE,CompactedAdminDomain)', Descr = "Is de locatie reeds benut voor wind op basis van BGT (evident benut voor windturbines, dus autowegen en spoorbanen)";
		attribute<Bool> IsEvidentBenut_obv_BGT_zon                 (CompactedAdminDomain) := =IsThisSectorZon ? 'collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, SourceData/Grondgebruik/BGT/IsDefinedAndNotNoData/IsEvidentBenutZon_AdminDomain)' : 'const(FALSE,CompactedAdminDomain)', Descr = "Is de locatie reeds benut voor zon op basis van BGT (evident benut voor zon, dus inclusief autowegen en spoorbanen waar zonnepanelen op kunnen liggen)";
		attribute<Bool> IsEvidentBenutBinnenPlancapaciteit_obv_BBG (CompactedAdminDomain) := ='VariantParameters/EvidentBenut/'+Sector_name+'/BinnenPlancapaciteit/'+EvidentBenutVariant+'[src/GrondgebruikBasisjaar]', Descr = "Is de locatie reeds benut binnen plancapaciteit op basis van BBG";
		attribute<Bool> IsEvidentBenutBuitenPlancapaciteit_obv_BBG (CompactedAdminDomain) := ='VariantParameters/EvidentBenut/'+Sector_name+'/BuitenPlancapaciteit/'+EvidentBenutVariant+'[src/GrondgebruikBasisjaar]', Descr = "Is de locatie reeds benut buiten plancapaciteit op basis van BBG";
		attribute<Bool> EvidentBenutLandbouw_obv_LGN               (CompactedAdminDomain) := =IsLandbouw ? 'VariantParameters/EvidentBenut/'+Sector_name+'/'+EvidentBenutVariant+'[src/LGNBasisjaar]' : 'const(FALSE,CompactedAdminDomain)', Descr = "Is de locatie reeds benut voor landbouw op basis van LGN";
		attribute<Bool> IsIJburg                                 (CompactedAdminDomain) := SourceData/RegioIndelingen/LMSSubzone/IsIjburg2[SourceData/RegioIndelingen/LMSSubzone/Per_CompactedAdminDomain], Descr = "Is de locatie in IJburg?";

		attribute<Bool> IsEvidentBenutBinnenPlancapaciteit         (CompactedAdminDomain) := 
			switch(
				case(IsThisSectorWind, (IsEvidentBenutBinnenPlancapaciteit_obv_BBG || IsEvidentBenut_obv_BGT_wind) && !src/IsIJburg)
				, (IsEvidentBenutBinnenPlancapaciteit_obv_BBG || IsEvidentBenut_obv_BGT) && !src/IsIJburg
			), Descr = "Is de locatie reeds benut binnen plancapaciteit, gebruik verschillende methodes afhankelijk van de sector. En corrigeer voor IJburg 2 (want dat is nog gedeeltelijk water)";
		
		attribute<Bool> IsEvidentBenutBuitenPlancapaciteit         (CompactedAdminDomain) := 
			switch(
				case(IsThisSectorWind, IsEvidentBenutBuitenPlancapaciteit_obv_BBG || IsEvidentBenut_obv_BGT_wind)
				,case(IsThisSectorZon, (IsEvidentBenutBuitenPlancapaciteit_obv_BBG || IsEvidentBenut_obv_BGT_zon) && !src/IsIJburg)
				,(IsEvidentBenutBuitenPlancapaciteit_obv_BBG || IsEvidentBenut_obv_BGT) && !src/IsIJburg
			), Descr = "Is de locatie reeds benut buiten plancapaciteit, gebruik verschillende methodes afhankelijk van de sector. En corrigeer voor IJburg 2 (want dat is nog gedeeltelijk water)";
		
		attribute<Bool> IsAutowegInclKlaverbladen                 (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, SourceData/Grondgebruik/BGT/IsDefinedAndNotNoData/IsAutoweg/FixKlaverbladen/Per_AdminDomain), Descr = "Is de locatie een autoweg inclusief klaverbladen (dus ook de op- en afritten)";
		attribute<Bool> IsEigendomVanNatuurOrganisatie            (CompactedAdminDomain) := (IsThisSectorWonenOfWerken || IsThisSectorVerblijfsrecreatie) && src/IsEigendomVanNatuurOrganisatie && NietBouwenInNatuurorganisaties, Descr = "Is de locatie eigendom van een natuurorganisatie en mag er niet gebouwd worden in natuurorganisaties";
		attribute<Bool> IsEigendomVanWaterschap                   (CompactedAdminDomain) := IsThisSectorWonenOfWerken && src/IsEigendomVanWaterschap && NietBouwenInWaterschappen, Descr = "Is de locatie eigendom van een waterschap en mag er niet gebouwd worden in waterschappen";
		attribute<Bool> TeSlap                                    (CompactedAdminDomain) := IsThisSectorWonenOfWerken && src/TeSlap                  && NietBouwenWaarSlap, Descr = "Is de locatie te slap om op te bouwen";
		attribute<Bool> TeZettingsgevoelig                        (CompactedAdminDomain) := IsThisSectorWonenOfWerken && src/TeZettingsgevoelig      && NietBouwenWaarZettingsgevoelig, Descr = "Is de locatie zettingsgevoelig om op te bouwen";
		attribute<Bool> TeNat                                     (CompactedAdminDomain) := IsThisSectorWonenOfWerken && src/TeNat                   && NietBouwenWaarNat, Descr = "Is de locatie te nat om op te bouwen";
		attribute<Bool> TeHogeBeheerKostenInfra                   (CompactedAdminDomain) := IsThisSectorWonenOfWerken && src/TeHogeBeheerKostenInfra, Descr = "Zijn de beheer kosten van de infrastructuur te hoog om op te bouwen";
		attribute<Bool> TeGevaarlijk                              (CompactedAdminDomain) := IsThisSectorWonenOfWerken && VariantData/NietBouwen/Overstromingsgevaarzones/Totaal, Descr = "Is de locatie te gevaarlijk om op te bouwen (overstromingsgevaar)";
		attribute<Bool> IsMooiLandschap                           (CompactedAdminDomain) := (IsThisSectorWonenOfWerken || IsThisSectorVerblijfsrecreatie) && src/IsHoog     && NietBouwenInMooiLandschap,  Descr = "Is de locatie in een mooi landschap en mag er niet gebouwd worden in mooi landschap";
		attribute<Bool> IsZeerMooiLandschap                       (CompactedAdminDomain) := (IsThisSectorWonenOfWerken || IsThisSectorVerblijfsrecreatie) && src/IsZeerHoog && NietBouwenInZeerMooiLandschap, Descr = "Is de locatie in een zeer mooi landschap en mag er niet gebouwd worden in zeer mooi landschap";
		attribute<Bool> IsInNatura2000Buffer                      (CompactedAdminDomain) := IsThisSectorWonenOfWerken && src/IsInNatura2000Buffer && NietBouwenInNatura2000Buffer, Descr = "Is de locatie in de bufferzone van Natura2000 en mag er niet gebouwd worden in deze bufferzone";
		attribute<Bool> IsNietNabijOV                             (CompactedAdminDomain) := (IsThisSectorWonen || IsWerkenMaarGeenNijverheidEnLogistiek) && src/IsNietNabijOV && NietBouwenVerVanOV, Descr = "Is de locatie niet nabij openbaar vervoer en mag er niet gebouwd worden ver van OV";
		attribute<Bool> IsWoonlocatieNietVanGemeenteOfCorporatie  (CompactedAdminDomain) := src/IsWoonlocatieNietVanGemeenteOfCorporatie && !BouwenInWoonlocatieNietVanGemeenteOfCorporatie, Descr = "Is de locatie een woonlocatie die niet van de gemeente of een woningcorporatie is en mag er niet gebouwd worden in deze woonlocaties";
		attribute<Bool> IsZeehaven                                (CompactedAdminDomain) := !(IsThisSectorWind || IsThisSectorZon) && src/IsZeehaven && NietBouwenOpZeehaven, Descr = "Is de locatie een zeehaven en mag er niet gebouwd worden in zeehavens (alleen relevant voor wind en zon, want die mogen wel in zeehavens)";
		attribute<Bool> ReserverenVoorRivierAfvoer                (CompactedAdminDomain) := ='IsThisSectorWonenOfWerken && Src/ReserverenVoorRivierAfvoer_'+ReserverenVoorRivierAfvoer_ref, Descr = "Moet er gereserveerd worden voor rivierafvoer";
		attribute<Bool> HeeftHardePlannenDezeSector               (CompactedAdminDomain) := =IsLandbouw ? 'const(FALSE, CompactedAdminDomain)' : 'IsHardePlannenGeldigInZeef  && VariantData/Plannen/Per_CompactedAdminDomain/Hard/Result/'+Sector_name, Descr = "Heeft de locatie harde plannen voor deze sector";
		attribute<Bool> HeeftZachtePlannenDezeSector              (CompactedAdminDomain) := =IsLandbouw ? 'const(FALSE, CompactedAdminDomain)' : 'IsZachtePlannenGeldigInZeef && VariantData/Plannen/Per_CompactedAdminDomain/Zacht/Result/'+Sector_name, Descr = "Heeft de locatie zachte plannen voor deze sector";
		attribute<Bool> HeeftPlannenDezeSector                    (CompactedAdminDomain) := HeeftHardePlannenDezeSector || HeeftZachtePlannenDezeSector, Descr = "Heeft de locatie harde of zachte plannen voor deze sector";
		attribute<Bool> TeHoogEnergielabel                        (CompactedAdminDomain) := src/Energielabel < GeenSloopvanafELabel, Descr = "Is het energielabel van de locatie te hoog om gesloopt te mogen worden";
		attribute<Bool> IsRestrictiefBinnenHardePlancapaciteit    (CompactedAdminDomain) := IsRestrictiefBuitenHardePlancapaciteit && RestrictiesOokGeldigBinnenHardePlancapaciteit, Descr = "Zijn de restricties die buiten harde plancapaciteit gelden ook geldig binnen harde plancapaciteit";
		attribute<Bool> IsRestrictiefBuitenHardePlancapaciteit    (CompactedAdminDomain) := = '(src/IsRestrictiefBuitenHardePlancapaciteit'+
			iif(
				lowercase(Sector_name) == lowercase('Wind')
				,'|| VariantData/Wind_restricties/IsNietToegestaan) && !VariantData/StateBasisjaar/Wind/Totaal > 0[MW]'
				,')'
			), Descr = "Zijn de restricties die buiten harde plancapaciteit gelden ook geldig buiten harde plancapaciteit. In het geval van wind komen er extra restricties bij.";
	}
	
	container Src := /BaseData
	{
		attribute<Bool>    IsIJburg                                 (CompactedAdminDomain) := SourceData/RegioIndelingen/LMSSubzone/IsIjburg2[SourceData/RegioIndelingen/LMSSubzone/Per_CompactedAdminDomain], Descr = "Is de locatie in IJburg? (want dat is nog gedeeltelijk water)";
		attribute<Bool>    IsZeehaven                               (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, StartState/Grondgebruik/Per_AdminDomain/IsZeehaven), Descr = "Is de locatie een zeehaven";
		attribute<Float32> BouwjaarPand                             (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain
																								, sum(float32(BAG_Modeljaar/pand/BepalingGebruiksdoel/PandenMetFunctie/Bouwjaar_trunc)[BAG_Modeljaar/pand/BepalingGebruiksdoel/PandenMetFunctie/ToedelingsMatrix/pand_rel] * BAG_Modeljaar/pand/BepalingGebruiksdoel/PandenMetFunctie/ToedelingsMatrix/ToedelingPand, BAG_Modeljaar/pand/BepalingGebruiksdoel/PandenMetFunctie/ToedelingsMatrix/AdminDomain_rel)
																								 / sum(BAG_Modeljaar/pand/BepalingGebruiksdoel/PandenMetFunctie/ToedelingsMatrix/ToedelingPand, BAG_Modeljaar/pand/BepalingGebruiksdoel/PandenMetFunctie/ToedelingsMatrix/AdminDomain_rel)), Descr = "som(bouwjaar * toedeling) / som(toedeling)", Descr = "Gemiddeld bouwjaar van panden in het AdminDomain";
		
		attribute<Bool>    PandenInBasisjaar                        (CompactedAdminDomain) := = lowercase(Sector_name) == lowercase('Landbouw') ? 'collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, SourceData/Vastgoed/BAG/PerJaar/Y'+string(ModelParameters/BAG_RecentYear)+'/pand/counts/per_AdminDomain)[float32] > 0f' : 'const(false, CompactedAdminDomain)', Descr = "Zijn er panden in het basisjaar (alleen relevant voor landbouw, want die mogen niet op panden)";
		attribute<Bool>    IsEigendomVanNatuurOrganisatie           (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, StartState/Eigendom/VanNatuurOrganisatie), Descr = "Is de locatie eigendom van een natuurorganisatie";
		attribute<Bool>    IsEigendomVanWaterschap                  (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, StartState/Eigendom/VanWaterschap), Descr = "Is de locatie eigendom van een waterschap";
		attribute<Bool>    IsWoonlocatieNietVanGemeenteOfCorporatie (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, StartState/Grondgebruik/Per_AdminDomain/IsWoonlocatie && !(StartState/Eigendom/VanGemeente || StartState/Eigendom/VanWoningcooperatie)), Descr = "Is de locatie een woonlocatie die niet van de gemeente of een woningcorporatie is";
		
		// attribute<Bool>    ZeerNabijOV                              (CompactedAllocDomain) := collect_by_cond(CompactedAllocDomain, AllocDomain/IsCompactedDomain, Omgeving/OV_Reistijd/ZeerNabijOV), Descr = "Is de locatie zeer nabij openbaar vervoer";
		// attribute<Bool>    NabijOV                                  (CompactedAllocDomain) := collect_by_cond(CompactedAllocDomain, AllocDomain/IsCompactedDomain, Omgeving/OV_Reistijd/NabijOV), Descr = "Is de locatie nabij openbaar vervoer";
		// attribute<Bool>    BeperktNabijOV                           (CompactedAllocDomain) := collect_by_cond(CompactedAllocDomain, AllocDomain/IsCompactedDomain, Omgeving/OV_Reistijd/BeperktNabijOV), Descr = "Is de locatie beperkt nabij openbaar vervoer";
		attribute<Bool>    IsNietNabijOV                              (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, Omgeving/OV_Reistijd/NietNabijOV[AdminDomain/AllocDomain_rel]), Descr = "Is de locatie niet nabij openbaar vervoer";
		
		attribute<Bool>    IsHoog                                     (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, Omgeving/BelevingLandschap/IsHoog[AdminDomain/AllocDomain_rel]), Descr = "Is de locatie in een landschap van hoog belevingsniveau";
		attribute<Bool>    IsZeerHoog                                 (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, Omgeving/BelevingLandschap/IsZeerHoog[AdminDomain/AllocDomain_rel]), Descr = "Is de locatie in een landschap van zeer hoog belevingsniveau";
		attribute<Bool>    IsInNatura2000Buffer                       (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, BaseData/Omgeving/N2K1000mBuffer), Descr = "Is de locatie in de bufferzone van Natura2000";
		attribute<Bool>    TeNat                                      (CompactedAdminDomain) := ='collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, SourceData/Water/TeNat/'+KlimaatScenario_ref+'/IsNat[AdminDomain/AllocDomain_rel])', Descr = "Is de locatie te nat om op te bouwen";
		attribute<Bool>    TeSlap                                     (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, SourceData/Water/TeSlap/Slap/IsSlap[AdminDomain/AllocDomain_rel]), Descr = "Is de locatie te slap om op te bouwen";
		attribute<Bool>    TeZettingsgevoelig                         (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, SourceData/Water/TeSlap/Zettingsgevoelig/IsZettingsgevoelig[AdminDomain/AllocDomain_rel]), Descr = "Is de locatie zettingsgevoelig om op te bouwen";
		attribute<Bool>    TeHogeBeheerKostenInfra                    (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, SourceData/Bodem/Bodemdaling/Bodemdaling_2016_2050_cm_1_25mtr > /ModelParameters/Wonen/MaxBodemdaling) && (TeSlap || TeZettingsgevoelig), Descr = "Zijn de beheer kosten van de infrastructuur te hoog om op te bouwen (op basis van bodemdaling)";
		attribute<Bool>    ReserverenVoorRivierAfvoer_Krap            (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, Omgeving/Gebiedsreservering || Omgeving/Stroomvoerend_deel_rivierbed && !Omgeving/BBG/Per_AdminDomain), Descr = "Moet er krap gereserveerd worden voor rivierafvoer (gebiedsreservering of stroomvoerend deel rivierbed, maar niet op basis van BBG)";
		attribute<Bool>    ReserverenVoorRivierAfvoer_Ruim            (CompactedAdminDomain) := ReserverenVoorRivierAfvoer_Krap || collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, (SourceData/Water/dijkringen/dijkring2020/ReserverenVoorRivierAfvoer_Ruim[SourceData/Water/dijkringen/dijkring2020/per_rdc_25m] && !Omgeving/HogeGronden)) && collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, !Omgeving/BBG/Per_AdminDomain), Descr = "Moet er ruim gereserveerd worden voor rivierafvoer (gebiedsreservering of dijkring die ruim reserveren voorschrijft, maar niet op basis van BBG)";
		
		
		attribute<Classifications/Grondgebruik/LGNKlasse> LGNBasisjaar          (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, SourceData/Grondgebruik/LGN/m25), Descr = "LGN klasse in het basisjaar";
		attribute<Classifications/Grondgebruik/CBSKlasse> GrondgebruikBasisjaar (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, StartState/Grondgebruik/Per_AdminDomain/gg_cbs), Descr = "CBS grondgebruik in het basisjaar";
		attribute<Vastgoed/Energielabel>                  Energielabel          (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, SourceData/Vastgoed/Energielabels/Modus), Descr = "Energielabel van de panden in het AdminDomain (modus)";
		
		attribute<Bool>    IsRestrictiefBuitenHardePlancapaciteit     (CompactedAdminDomain) := =Impl/IsLandbouw ? 'const(FALSE, CompactedAdminDomain)' : 'collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, VariantData/Restricties/'+Sector_name+'/Result)', Descr = "Zijn er restricties die buiten harde plancapaciteit gelden voor deze sector";
	}
}


