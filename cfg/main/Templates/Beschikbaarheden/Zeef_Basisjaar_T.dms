Template Zeef_Basisjaar_T
: Descr = "Bepaal de zeef op AdminDomain. Dit is een stap "
{
	//
	unit<uint32> VariantXSectorXSubsector;
	parameter<VariantXSectorXSubsector> id;
	container Analysis;
	//
	
	parameter<string> name := VariantXSectorXSubsector/combi_name[id];
	
	unit<uint8> VariantK := CaseClassifications/VariantK;
	
	parameter<string>  Variant_name                                   := first(VariantK/name);
	parameter<string>  MaxBouwjaarBinnenHardePlancapaciteit           := /ModelParameters/MaxBouwjaarBinnenHardePlancapaciteit;
	parameter<string>  MaxBouwjaarBuitenHardePlancapaciteit           := first(VariantK/MaxBouwjaarBuitenHardePlancapaciteit);
	parameter<string>  Klimaatscenario_ref                            := first(VariantK/Klimaatscenario_ref);
	parameter<bool>    NietBouwenInNatuurorganisaties                 := first(VariantK/NietBouwenInNatuurorganisaties);
	parameter<bool>    NietBouwenInWaterschappen                          := first(VariantK/NietBouwenInWaterschappen);
	parameter<bool>    NietBouwenVerVanOV                             := first(VariantK/NietBouwenVerVanOV);
	parameter<bool>    BouwenInWoonlocatieNietVanGemeenteOfCorporatie := first(VariantK/BouwenInWoonlocatieNietVanGemeenteOfCorporatie);
	parameter<bool>    NietBouwenOpZeehaven                           := first(VariantK/NietBouwenOpZeehaven);
	parameter<bool>    NietBouwenWaarSlap                             := first(VariantK/NietBouwenWaarSlap);
	parameter<bool>    NietBouwenWaarZettingsgevoelig                 := first(VariantK/NietBouwenWaarZettingsgevoelig);
	parameter<bool>    NietBouwenWaarNat                              := first(VariantK/NietBouwenWaarNat);
	parameter<bool>    NietBouwenInZeerMooiLandschap                  := = iif(Sector_name == 'Wonen' || Sector_name == 'Werken' || Sector_name == 'Verblijfsrecreatie', 'first(VariantK/NietBouwenInZeerMooiLandschap'+Sector_name+')', 'false');
	parameter<bool>    NietBouwenInMooiLandschap                      := first(VariantK/NietBouwenInMooiLandschap);
	parameter<bool>    RestrictiesOokGeldigBinnenHardePlancapaciteit  := first(VariantK/RestrictiesOokGeldigBinnenHardePlancapaciteit);
	parameter<bool>    NietBouwenInNatura2000Buffer                   := first(VariantK/NietBouwenInNatura2000Buffer);
	parameter<bool>    HardePlannenUitzonderenInZeef                  := first(VariantK/HardePlannenUitzonderenInZeef);
	parameter<bool>    ZachtePlannenUitzonderenInZeef                 := first(VariantK/ZachtePlannenUitzonderenInZeef);
	
	parameter<EnergieLabel> MaxELabel                                 := first(VariantK/MaxELabel);
	
	parameter<string> Sector_name    := VariantXSectorXSubsector/Sector_name[id];
	parameter<string> SubSector_name := VariantXSectorXSubsector/SubSector_name[id];
	
	parameter<bool> WerkenGeenNijverheidEnLogistiek := Sector_name == 'Werken' && !(SubSector_name == 'NijverheidEnLogistiek');
	
	attribute<bool> Beschikbaar         (CompactedAdminDomain) := !Totaal;
	attribute<bool> Beschikbaar_AdminDomain      (AdminDomain) := recollect_by_cond(AdminDomain/IsCompactedDomain, Beschikbaar, FALSE);
	
	// attribute<bool> Beschikbaar         (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, Beschikbaar_AdminDomain);
	// attribute<bool> Beschikbaar_AdminDomain      (AdminDomain) := = iif(ModelParameters/VariantDataOntkoppeld, 'Read', 'Write')+'Beschikbaar_AdminDomain';
	// attribute<bool> ReadBeschikbaar_AdminDomain  (AdminDomain) := ReadBeschikbaar_AdminDomain_UNCHECKED, IntegrityCheck = "not(all(IsNull(this))) && not(all(IsZero(this)))";
	// attribute<bool> ReadBeschikbaar_AdminDomain_UNCHECKED  (AdminDomain) : StorageName = "= '%LocalDataProjDir%/VariantData/Beschikbaar/'+Variant_name+'/Zeef_Basisjaar/'+name+'.tif'", StorageReadOnly = "true"; 
	// attribute<bool> WriteBeschikbaar_AdminDomain (AdminDomain) := CalcBeschikbaar[invert(CompactedAdminDomain/AdminDomain_rel)], StorageName = "= '%LocalDataProjDir%/VariantData/Beschikbaar/'+Variant_name+'/Zeef_Basisjaar/'+name+'.tif'", IntegrityCheck = "not(all(IsNull(this))) && not(all(IsZero(this)))";
	// attribute<bool> CalcBeschikbaar     (CompactedAdminDomain) := !Totaal;
	
	attribute<bool> Totaal (CompactedAdminDomain) := BuitenPlancapaciteit || BuitenHardePlancapaciteit || Overal;
	
	// Geldt overal
	attribute<bool> Overal (CompactedAdminDomain) :=
		OR(
			Src/ReedsBenutBinnenPlancapaciteit,
			Src/RestrictiefBinnenHardePlancapaciteit,
			Src/BouwjaarTeHoogBinnenHardePlancapaciteit,
			Src/TeGevaarlijk
		);
	
	// Alleen harde plancapaciteit wordt uitgezonderd
	attribute<bool> BuitenHardePlancapaciteit (CompactedAdminDomain) := = 'BuitenHardePlancapaciteit0 && !Src/HardePlannenDezeSector'+
		iif(
			Variant_name == 'GL',
			'&& collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, !BaseData/OV_Reistijd/ZeerNabijOV[AdminDomain/AllocDomain_rel])',
			''
		);
	
	attribute<bool> BuitenHardePlancapaciteit0 (CompactedAdminDomain):=
		OR(
			Src/BouwjaarTeHoogBuitenHardePlancapaciteit,
			Src/EnergieLabelTeHoog,
			Src/TeSlap,
			Src/TeNat,
			Src/BeheerKostenInfraTeHoog,
			Src/TeZettingsgevoelig,
			Src/MooiLandschap,
			Src/ZeerMooiLandschap,
			Src/InNatura2000Buffer,
			Src/WoonlocatieNietVanGemeenteOfCorporatie,
			Src/RestrictiefBuitenHardePlancapaciteit
		);
	
	// Zowel harde als zachte plancapaciteit wordt uitgezonderd
	attribute<bool> BuitenPlancapaciteit (CompactedAdminDomain) := BuitenPlancapaciteit0 && !Src/PlannenDezeSector;
	
	attribute<bool> BuitenPlancapaciteit0 (CompactedAdminDomain):=
		OR(
			Src/ReedsBenutBuitenPlancapaciteit,
			Src/EigendomVanNatuurOrganisatie,
			Src/EigendomVanWaterschap,
			Src/Zeehaven,
			Src/NietNabijOV
		);
	
	container Src := /BaseData
	{
		parameter<bool>   WonenOfWerken     := Sector_name == 'Wonen' || Sector_name == 'Werken';
		parameter<bool>   IsLandbouw        := Sector_name == 'Landbouw';
		parameter<string> ReedsBenutVariant := ='VariantParameters/VariantK/ReedsBenutVariant_'+Sector_name+'[Variant_rel]';
		
		attribute<bool> ReedsBenut_obv_BGT                     (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, SourceData/Grondgebruik/BGT/IsDefinedAndNotNoData/per_AdminDomain);
		attribute<bool> ReedsBenut_obv_BGT_wind                (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, SourceData/Grondgebruik/BGT/IsDefinedAndNotNoData/IsAutoweg/per_AdminDomain || SourceData/Grondgebruik/BGT/IsDefinedAndNotNoData/IsSpoorbaan/per_AdminDomain);
		attribute<bool> ReedsBenut_obv_BGT_zon                 (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, SourceData/Grondgebruik/BGT/IsDefinedAndNotNoData/per_AdminDomain_Zon);
		attribute<bool> ReedsBenutBinnenPlancapaciteit_obv_BBG (CompactedAdminDomain) := ='VariantParameters/ReedsBenut/'+Sector_name+'/BinnenPlancapaciteit/'+ReedsBenutVariant+'[GrondgebruikBasisjaar]';
		attribute<bool> ReedsBenutBuitenPlancapaciteit_obv_BBG (CompactedAdminDomain) := ='VariantParameters/ReedsBenut/'+Sector_name+'/BuitenPlancapaciteit/'+ReedsBenutVariant+'[GrondgebruikBasisjaar]';
		
		attribute<bool> ReedsBenutLandbouw_obv_LGN             (CompactedAdminDomain) := ='VariantParameters/ReedsBenut/'+Sector_name+'/'+ReedsBenutVariant+'[LGNBasisjaar]';

		attribute<bool> IsIJburg                               (CompactedAdminDomain) := SourceData/RegioIndelingen/LMSSubzone/IsIjburg2[SourceData/RegioIndelingen/LMSSubzone/per_CompactedAdminDomain];
		
		attribute<bool> ReedsBenutBinnenPlancapaciteit (CompactedAdminDomain) := 
			switch(
				case(Sector_name == 'Wind', (ReedsBenutBinnenPlancapaciteit_obv_BBG || ReedsBenut_obv_BGT_wind) && !IsIJburg)
				, (ReedsBenutBinnenPlancapaciteit_obv_BBG || ReedsBenut_obv_BGT) && !IsIJburg
			);
		
		attribute<bool> ReedsBenutBuitenPlancapaciteit (CompactedAdminDomain) := 
			switch(
				case(Sector_name == 'Wind', ReedsBenutBuitenPlancapaciteit_obv_BBG || ReedsBenut_obv_BGT_wind)
				,case(Sector_name == 'Zon', (ReedsBenutBuitenPlancapaciteit_obv_BBG || ReedsBenut_obv_BGT_zon) && !IsIJburg)
				,(ReedsBenutBuitenPlancapaciteit_obv_BBG || ReedsBenut_obv_BGT) && !IsIJburg
			);
		
		attribute<bool> EigendomVanNatuurOrganisatie            (CompactedAdminDomain) := (WonenOfWerken || Sector_name == 'Verblijfsrecreatie') && IsEigendomVanNatuurOrganisatie && NietBouwenInNatuurorganisaties;
		attribute<bool> EigendomVanWaterschap                   (CompactedAdminDomain) := WonenOfWerken && IsEigendomVanWaterschap && NietBouwenInWaterschappen;
		attribute<bool> TeSlap                                  (CompactedAdminDomain) := WonenOfWerken && Slap && NietBouwenWaarSlap;
		attribute<bool> TeZettingsgevoelig                      (CompactedAdminDomain) := WonenOfWerken && Zettingsgevoelig && NietBouwenWaarZettingsgevoelig;
		attribute<bool> TeNat                                   (CompactedAdminDomain) := = WonenOfWerken && NietBouwenWaarNat ? 'collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, SourceData/Water/TeNat/'+Klimaatscenario_ref+'/IsNat[AdminDomain/AllocDomain_rel])' : 'const(false, CompactedAdminDomain)';
		attribute<bool> BeheerKostenInfraTeHoog                 (CompactedAdminDomain) := WonenOfWerken && BeheerKostenInfraHoog;
		attribute<bool> TeGevaarlijk                            (CompactedAdminDomain) := WonenOfWerken && VariantData/NietBouwen/Overstromingsgevaarzones/Totaal;
		attribute<bool> MooiLandschap                           (CompactedAdminDomain) := (WonenOfWerken || Sector_name == 'Verblijfsrecreatie') && collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, Omgeving/BelevingLandschap/IsHoog[AdminDomain/AllocDomain_rel]) && NietBouwenInMooiLandschap;
		attribute<bool> ZeerMooiLandschap                       (CompactedAdminDomain) := (WonenOfWerken || Sector_name == 'Verblijfsrecreatie') && collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, Omgeving/BelevingLandschap/IsZeerHoog[AdminDomain/AllocDomain_rel]) && NietBouwenInZeerMooiLandschap;
		attribute<bool> InNatura2000Buffer                      (CompactedAdminDomain) := WonenOfWerken && collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, BaseData/Omgeving/N2K1000mBuffer) && NietBouwenInNatura2000Buffer;
		attribute<bool> NietNabijOV                             (CompactedAdminDomain) := (Sector_name == 'Wonen' || WerkenGeenNijverheidEnLogistiek) && collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, Omgeving/OV_Reistijd/NietNabijOV[AdminDomain/AllocDomain_rel]) && NietBouwenVerVanOV;
		attribute<bool> WoonlocatieNietVanGemeenteOfCorporatie  (CompactedAdminDomain) := IsWoonlocatieNietVanGemeenteOfCorporatie && !BouwenInWoonlocatieNietVanGemeenteOfCorporatie;
		attribute<bool> Zeehaven                                (CompactedAdminDomain) := !(Sector_name == 'Wind' || Sector_name == 'Zon') && IsZeehaven && NietBouwenOpZeehaven;
		attribute<bool> HardePlannenDezeSector                  (CompactedAdminDomain) := = 'HardePlannenUitzonderenInZeef &&  VariantData/Plannen/per_CompactedAdminDomain/Hard/Result/'+Sector_name;
		attribute<bool> ZachtePlannenDezeSector                 (CompactedAdminDomain) := = 'ZachtePlannenUitzonderenInZeef && VariantData/Plannen/per_CompactedAdminDomain/Zacht/Result/'+Sector_name;
		attribute<bool> PlannenDezeSector                       (CompactedAdminDomain) := HardePlannenDezeSector || ZachtePlannenDezeSector;
		attribute<bool> EnergieLabelTeHoog                      (CompactedAdminDomain) := EnergieLabel < MaxELabel;
		attribute<bool> BouwjaarTeHoogBuitenHardePlancapaciteit (CompactedAdminDomain) := = 'Bouwjaar[float32] > '+MaxBouwjaarBuitenHardePlancapaciteit+'[float32]';
		attribute<bool> BouwjaarTeHoogBinnenHardePlancapaciteit (CompactedAdminDomain) := = 'Bouwjaar[float32] > '+MaxBouwjaarBinnenHardePlancapaciteit+'[float32]';
		attribute<bool> RestrictiefBinnenHardePlancapaciteit    (CompactedAdminDomain) := RestrictiefBuitenHardePlancapaciteit && RestrictiesOokGeldigBinnenHardePlancapaciteit;
		attribute<bool> RestrictiefBuitenHardePlancapaciteit    (CompactedAdminDomain) := = '(collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, VariantData/Restricties/'+Sector_name+'/Result)'+
			iif(
				Sector_name == 'Wind',
				 '|| VariantData/Wind_restricties/IsNietToegestaan)
				 && !VariantData/StateBasisjaar/Wind/Totaal > 0[MW]',
				')'
			);

		attribute<bool>    IsZeehaven                               (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, StartState/Grondgebruik/Per_AdminDomain/IsZeehaven);
		attribute<float32> Bouwjaar                                 (CompactedAdminDomain) := max_elem(BouwjaarVBO, BouwjaarPand)[float32];
		// attribute<float32> BouwjaarVBO                              (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, mean(BAG_Modeljaar/VBO/bouwjaar_trunc, BAG_Modeljaar/VBO/AdminDomain_rel));
		// attribute<float32> BouwjaarPand                             (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, mean(BAG_Modeljaar/pand/Bouwjaar_trunc, BAG_Modeljaar/Pand/AdminDomain_rel)); 
		attribute<float32> BouwjaarVBO                              (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, mean(BAG_Modeljaar/VBO/bouwjaar_trunc, BAG_Modeljaar/VBO/AdminDomain_rel))[float32];
		attribute<float32> BouwjaarPand                             (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain
																								, sum(float32(BAG_Modeljaar/pand/Bouwjaar_trunc)[BAG_Modeljaar/pand/ToedelingsMatrix/pand_rel] * BAG_Modeljaar/pand/ToedelingsMatrix/ToedelingPand, BAG_Modeljaar/pand/ToedelingsMatrix/AdminDomain_rel)
																								 / sum(BAG_Modeljaar/pand/ToedelingsMatrix/ToedelingPand, BAG_Modeljaar/pand/ToedelingsMatrix/AdminDomain_rel)), Descr = "som(bouwjaar * toedeling) / som(toedeling)";
		
		attribute<bool>    IsEigendomVanNatuurOrganisatie           (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, StartState/Eigendom/VanNatuurOrganisatie);
		attribute<bool>    IsEigendomVanWaterschap                  (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, StartState/Eigendom/VanWaterschap);
		attribute<bool>    IsWoonlocatieNietVanGemeenteOfCorporatie (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, StartState/Grondgebruik/Per_AdminDomain/IsWoonlocatie && !(StartState/Eigendom/VanGemeente || StartState/Eigendom/VanWoningcooperatie));
		
		// attribute<bool>    ZeerNabijOV                              (CompactedAllocDomain) := collect_by_cond(CompactedAllocDomain, AllocDomain/IsCompactedDomain, Omgeving/OV_Reistijd/ZeerNabijOV);
		// attribute<bool>    NabijOV                                  (CompactedAllocDomain) := collect_by_cond(CompactedAllocDomain, AllocDomain/IsCompactedDomain, Omgeving/OV_Reistijd/NabijOV);
		// attribute<bool>    BeperktNabijOV                           (CompactedAllocDomain) := collect_by_cond(CompactedAllocDomain, AllocDomain/IsCompactedDomain, Omgeving/OV_Reistijd/BeperktNabijOV);
		// attribute<bool>    NietNabijOV                              (CompactedAllocDomain) := collect_by_cond(CompactedAllocDomain, AllocDomain/IsCompactedDomain, Omgeving/OV_Reistijd/NietNabijOV);
		
		attribute<bool>    Slap                                     (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, SourceData/Water/TeSlap/Slap/IsSlap[AdminDomain/AllocDomain_rel]);
		attribute<bool>    Zettingsgevoelig                         (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, SourceData/Water/TeSlap/Zettingsgevoelig/IsZettingsgevoelig[AdminDomain/AllocDomain_rel]);
		attribute<bool>    BeheerKostenInfraHoog                    (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, SourceData/Bodem/Bodemdaling/Bodemdaling_2016_2050_cm_1_25mtr > /ModelParameters/MaxBodemdaling) && (Slap || Zettingsgevoelig);
		// attribute<bool>    ReserverenVoorRivierAfvoer_Krap          (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, Omgeving/Gebiedsreservering || Omgeving/stroomvoerend_deel_rivierbed && !Omgeving/BBG/Per_AdminDomain);
		// attribute<bool>    ReserverenVoorRivierAfvoer_Ruim          (CompactedAdminDomain) := ReserverenVoorRivierAfvoer_Krap || collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, (SourceData/Water/dijkringen/dijkring2020/ReserverenVoorRivierAfvoer_Ruim[SourceData/Water/dijkringen/dijkring2020/per_rdc_25m] && !Omgeving/HogeGronden)) && collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, !Omgeving/BBG/Per_AdminDomain);
		
		attribute<Classifications/Grondgebruik/LGNKlasse> LGNBasisjaar          (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, SourceData/Grondgebruik/LGN/m25);
		attribute<Classifications/Grondgebruik/CBSKlasse> GrondgebruikBasisjaar (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, StartState/Grondgebruik/Per_AdminDomain/gg_cbs);
		attribute<Vastgoed/Energielabel>                  EnergieLabel          (CompactedAdminDomain) := collect_by_cond(CompactedAdminDomain, AdminDomain/IsCompactedDomain, SourceData/Vastgoed/Energielabels/modus);
	}
}