Template Make_Landgebruikskaart_Zichtjaar_T : using = "Classifications/Actor;Classifications/Grondgebruik"
{
	container                    Stand;
	attribute<LU_ModelType>      gg_basis                      (AdminDomain);
	///
	attribute<CBSKlasse>         gg_CBS                        (AdminDomain) := BaseData/StartState/Grondgebruik/per_AdminDomain/gg_CBS;
	
	attribute<bool>              Wonen_StartState              (AdminDomain) := StateBasisjaar/State/Wonen/Aantal_Woningen_Totaal >= MinimumWoningAmount * AdminDomain/NrHaPerCell / 1[ha];
	attribute<bool>              Werken_StartState             (AdminDomain) := StateBasisjaar/State/PandFootprint/Totaal >= MinimumPandfootprint * AdminDomain/NrHaPerCell / 1[ha];
	attribute<bool>              Verblijfsrecreatie_StartState (AdminDomain) := StateBasisjaar/State/Verblijfsrecreatie/Totaal >= MinimumVerblijfsobjectAmount * AdminDomain/NrHaPerCell / 1[ha];
	
	attribute<bool>              IsLU_NoData                   (AdminDomain) := IsNull(gg_basis);
	attribute<bool>              IsLU_exogenous                (AdminDomain) := CBSKlasse/IsExogeen[gg_CBS];
	attribute<bool>              IsLU_Water                    (AdminDomain) := gg_basis == LU_ModelType/v/water_totaal;
	attribute<bool>              IsLU_Wonen                    (AdminDomain) := gg_basis == LU_ModelType/V/wonen_totaal;
	attribute<bool>              IsLU_Werken                   (AdminDomain) := gg_basis == LU_ModelType/V/werken_totaal;
	attribute<bool>              IsLU_Verblijfsrecreatie       (AdminDomain) := gg_basis == LU_ModelType/V/verblijfsrecreatie_totaal;
	// attribute<bool>              IsLU_Glastuinbouw             (AdminDomain) := gg_CBS == CBSKlasse/V/glastuinbouw;
	
	attribute<meter2>            Wonen_Filtered                (AdminDomain) := Group_Wonen/IsNieuwGrouped ? StateBasisjaar/State/Wonen/footprint : null_f[meter2];
	attribute<meter2>            Werken_Filtered               (AdminDomain) := Group_Werken/IsNieuwGrouped ? StateBasisjaar/State/PandFootprint/Totaal : null_f[meter2];
	attribute<meter2>            Verblijfrecreatie_Filtered    (AdminDomain) := Group_Verblijfsrecreatie/IsNieuwGrouped ? StateBasisjaar/State/Verblijfsrecreatie/footprint : null_f[meter2];
	
	attribute<Typen>             Dominant                      (AdminDomain) := IsLU_Wonen || IsLU_NoData ? null_b[Typen] : argmax_ifdefined(Wonen_Filtered, Werken_Filtered, Verblijfrecreatie_Filtered)[Typen];

	container Group_Werken             := Templates/Landgebruikskaart/GetNieuwGrouped_T('Werken','Werken_Totaal', MinimumGroupSize, gg_basis, 'StartState');
	container Group_Wonen              := Templates/Landgebruikskaart/GetNieuwGrouped_T('Wonen','Wonen_Totaal', MinimumGroupSize, gg_basis, 'StartState');
	container Group_Verblijfsrecreatie := Templates/Landgebruikskaart/GetNieuwGrouped_T('Verblijfsrecreatie','Verblijfsrecreatie_Totaal', MinimumGroupSize, gg_basis, 'StartState');

	unit<uint8> Typen : nrofrows = 3
	{
		attribute<string> name : ['Wonen', 'Werken', 'Verblijfsrecreatie'];
		attribute<string> label := name;
		
		container V := for_each_nedv(name, 'value('+string(id(.))+', ..)', void, .);
	}
	
	attribute<LU_ModelType> Result             (AdminDomain) := switch(
																	 case(IsLU_exogenous || IsLU_NoData || IsLU_Water, gg_basis)
																	,case(gg_basis == LU_ModelType/V/wonen_totaal || gg_basis == LU_ModelType/V/Verblijfsrecreatie_totaal, gg_basis)
																	,case(Dominant == Typen/V/Wonen, LU_ModelType/V/Wonen_totaal)
																	,case(Dominant == Typen/V/Werken, LU_ModelType/V/Werken_totaal)
																	,case(Dominant == Typen/V/Verblijfsrecreatie, LU_ModelType/V/Verblijfsrecreatie_totaal)
																	, gg_basis
																);
}  
