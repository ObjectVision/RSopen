Template LU_Zichtjaar_T_25m
{
	parameter<string> ScenTimeUnit_name;
	parameter<string> Scen_name;
	parameter<string> Zichtjaar_name;
	parameter<string> Zichtjaar;
	////
	parameter<string> Prev_Zichtjaar_name := rjoin(lowercase(Zichtjaar_name), lowercase(Time/Zichtjaar/EndYear_name), Time/Zichtjaar/prev_name);
	container prev_zichtjaar := =Prev_Zichtjaar_name;
	parameter<string> WLO_Scen := rjoin(lowercase(Scen_name), lowercase(ScenTimeUnit/Scenname), ScenTimeUnit/WLO_ref);
	parameter<string> NVK_Scen := rjoin(lowercase(Scen_name), lowercase(ScenTimeUnit/Scenname), ScenTimeUnit/NVK_ref);
	
	attribute<LHMModelType> LU_prev                            (rdc_25m) := prev_zichtjaar/Result;
	attribute<LHMModelType> LU_prev_with_nature                (rdc_25m) := ='IsDefined(SourceData/Grondgebruik/NVK/'+NVK_Scen+'2050_25m_diff) 
																					&& !IsLU_exogenous 
																					&& LU_prev != LHMModelType/v/noData 
																					&& !IsModelledClasses 
																						? SourceData/Grondgebruik/NVK/'+NVK_Scen+'2050_25m_diff 
																						: prev_zichtjaar/Result';
	
	attribute<bool>              IsLU_NoData                   (rdc_25m) := LU_prev == LHMModelType/v/noData;
	attribute<bool>              IsLU_exogenous                (rdc_25m) := LHMModelType/IsExogeen[LU_prev];
	attribute<bool>              IsLU_Wonen                    (rdc_25m) := LU_prev == LHMModelType/V/woongebied;
	attribute<bool>              IsLU_Voorzieningen            (rdc_25m) := LU_prev == LHMModelType/V/werk_Voorzieningen;
	attribute<bool>              IsLU_Bedrijventerrein         (rdc_25m) := LU_prev == LHMModelType/V/werk_bedrijventerrein;
	attribute<bool>              IsLU_Verblijfsrecreatie       (rdc_25m) := LU_prev == LHMModelType/V/recr_verblijfsparken;
	attribute<bool>              IsModelledClasses             (rdc_25m) := IsLU_Wonen || IsLU_Voorzieningen || IsLU_Bedrijventerrein || IsLU_Verblijfsrecreatie;
	
	attribute<bool>              Wonen_Zichtjaar               (rdc_25m) := Impl/Wonen/IsWonen;
	attribute<bool>              Voorzieningen_Zichtjaar       (rdc_25m) := Impl/Werken/IsVoorziening;
	attribute<bool>              Bedrijventerrein_Zichtjaar    (rdc_25m) := Impl/Werken/IsBedrijventerrein;
	attribute<bool>              Verblijfsrecreatie_Zichtjaar  (rdc_25m) := Impl/Verblijfsrecreatie/IsVerblijfsrecreatie;

	attribute<float32>           Wonen_Filtered                (rdc_25m) := Impl/Wonen/Wonen/IsNieuwGrouped ? 1f : 0f/0f;
	attribute<float32>           Voorzieningen_Filtered        (rdc_25m) := Impl/Werken/Voorzieningen/IsNieuwGrouped ? 1f : 0f/0f;
	attribute<float32>           Bedrijventerrein_Filtered     (rdc_25m) := Impl/Werken/Bedrijventerrein/IsNieuwGrouped ? 1f : 0f/0f;
	attribute<float32>           Verblijfrecreatie_Filtered    (rdc_25m) := Impl/Verblijfsrecreatie/Verblijfsrecreatie/IsNieuwGrouped ? 1f : 0f/0f;
	
	attribute<Actoren/Typen> Dominant                      (rdc_25m) := ArgMax_ifdefined(Wonen_Filtered, Voorzieningen_Filtered, Bedrijventerrein_Filtered, Verblijfrecreatie_Filtered)[Actoren/Typen];

	container Import :=
		for_each_ndvna(
			Actoren/StandVar/path
			, rdc_25m
			, Actoren/StandVar
			, Actoren/StandVar/unit_name
			, '%DSdir%/RSLight_output/'+ModelParameters/RSL_Outname_date+'/WLO_'+WLO_Scen+'_'+ModelParameters/RSL_Casus_name+'/Stand'+Zichtjaar+'/'+Actoren/StandVar/path+'.tif'
		),	StorageReadOnly = "True";
	
	container Impl
	{
		container Werken
		{
			attribute<bool> IsVoorziening       (rdc_25m) := Import/subSector_rel == Actoren/StandVar/Subsector/v/Werken_Detailhandel || Import/subSector_rel == Actoren/StandVar/Subsector/v/Werken_Ov_consumentendiensten || Import/subSector_rel == Actoren/StandVar/Subsector/v/Werken_Overheid_kw_diensten;
			attribute<bool> IsBedrijventerrein  (rdc_25m) := Import/subSector_rel == Actoren/StandVar/Subsector/v/Werken_Logistiek    || Import/subSector_rel == Actoren/StandVar/Subsector/v/Werken_Nijverheid             || Import/subSector_rel == Actoren/StandVar/Subsector/v/Werken_Zak_dienstverlening;
			
			container Voorzieningen    := GetNieuwGrouped_T_25m('Voorzieningen','Werk_Voorzieningen', ModelParameters/MinimumGroupSize, LU_prev_with_nature, 'Zichtjaar');
			container Bedrijventerrein := GetNieuwGrouped_T_25m('Bedrijventerrein','Werk_Bedrijventerrein', ModelParameters/MinimumGroupSize, LU_prev_with_nature, 'Zichtjaar');
		}
		
		container Wonen
		{
			attribute<bool> IsWonen            (rdc_25m) := =AsList('Import/subSector_rel == Actoren/StandVar/Subsector/v/Wonen_'+Actoren/Sector/xSubsectoren/Wonen/Combi/Subsector_name,  '||');
			
			container Wonen    := GetNieuwGrouped_T_25m('Wonen','Woongebied', ModelParameters/MinimumGroupSize, LU_prev_with_nature, 'Zichtjaar');
		}
		
		container Verblijfsrecreatie
		{
			attribute<bool> IsVerblijfsrecreatie            (rdc_25m) := Import/subSector_rel == Actoren/StandVar/Subsector/v/Verblijfsrecreatie_Totaal ;
			container Verblijfsrecreatie    := GetNieuwGrouped_T_25m('Verblijfsrecreatie','recr_verblijfsparken', ModelParameters/MinimumGroupSize, LU_prev_with_nature, 'Zichtjaar');
		}
	}
	
	attribute<LHMModelType> Result             (rdc_25m) := switch(
																	 case(LHMModelType/IsExogeen[LU_prev] || IsLU_NoData, LU_prev)
																	,case(LU_prev == LHMModelType/V/woongebied || LU_prev == LHMModelType/V/recr_dagrec || LU_prev == LHMModelType/V/recr_verblijfsparken, LU_prev)
																	,case(Dominant == Actoren/Typen/V/Wonen, LHMModelType/V/woongebied)
																	,case(Dominant == Actoren/Typen/V/Voorzieningen, LHMModelType/V/werk_Voorzieningen)
																	,case(Dominant == Actoren/Typen/V/Bedrijventerrein, LHMModelType/V/werk_bedrijventerrein)
																	,case(Dominant == Actoren/Typen/V/Verblijfsrecreatie, LHMModelType/V/recr_verblijfsparken)
																	, LU_prev_with_nature
																);
}
