Template MakeDecayT
{
	attribute<Job> BanenBron(Buurt);
	attribute<Job> BanenStartYearBron(Buurt);
	
	container PerTransportType := for_each_ne(TransportTypes/name, 'PerTransportTypeT(ODs/'+TransportTypes/name+')');
	
	Template PerTransportTypeT
	{
		unit<UInt32> OD_Domain;
		
		unit<UInt32> Domain := Buurt
		{
			attribute<Job> Banen                    (OD_Domain) := BanenBron[OD_Domain/Dest_rel];
			attribute<Job> Banen_StartYear          (OD_Domain) := BanenStartYearBron[OD_Domain/Dest_rel];
			attribute<Float32> decay_function       (OD_Domain) := OD_Domain/TravelTime == 0f ? 1f : 1f / (1f + exp(Parameters/ov_a + Parameters/ov_b*log(OD_Domain/TravelTime) + Parameters/ov_c*OD_Domain/TravelTime));
			attribute<Job> banen_decayed            (OD_Domain) := MakeDefined(banen     * decay_function,0f);
			attribute<Job> banen_StartYear_decayed  (OD_Domain) := MakeDefined(Banen_StartYear * decay_function,0f);
			
			attribute<Job> banen_decayed_org           := sum(banen_decayed, OD_Domain/org_rel);
			attribute<Job> banen_StartYear_decayed_org := sum(banen_StartYear_decayed, OD_Domain/org_rel);
		}
	}
}