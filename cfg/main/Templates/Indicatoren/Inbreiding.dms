container Inbreiding
{
	unit<UInt32> Regio := SourceData/RegioIndelingen/Provincie;
	
	attribute<Bool> IsBBG (AdminDomain) :=
		IsDefined(SourceData/RegioIndelingen/Bevolkingskern_2011/Per_AdminDomain) ||
		SourceData/Diversen/Impl/begrenzing_bebouwd_gebied[AdminDomain/AllocDomain_rel] ||
		Classifications/Grondgebruik/CBSKlasse/IsStedelijkBreed[BaseData/StartState/Grondgebruik/Per_AdminDomain/gg_CBS];
	
	container Wonen
	{
		attribute<Woning> Verandering (AdminDomain) := Stand/TovStandBasisjaar/Verandering/Aantal_Woningen_Totaal
		{
			attribute<Woning> InBBG (AdminDomain) := . / float32(IsBBG);
		}
		
		parameter <Float32> Per_NL := max_elem(sum(Verandering/InBBG), 0[Woning]) / max_elem(sum(Verandering), 0[Woning]);
		
		attribute<Float32> Per_Regio (Regio) := max_elem(sum(Verandering/InBBG, Regio/Per_AdminDomain), 0[Woning]) / max_elem(sum(Verandering, Regio/Per_AdminDomain), 0[Woning]);
	}
	
	container Werken
	{
		attribute<meter2> Verandering (AdminDomain) := Stand/TovStandBasisjaar/Verandering/m2PandFootprint_Totaal
		{
			attribute<meter2> InBBG (AdminDomain) := . / float32(IsBBG);
		}
		
		parameter <Float32> Per_NL := max_elem(sum(Verandering/InBBG), 0[meter2]) / max_elem(sum(Verandering), 0[meter2]);
		
		attribute<Float32> Per_Regio (Regio) := max_elem(sum(Verandering/InBBG, Regio/Per_AdminDomain), 0[meter2]) / max_elem(sum(Verandering, Regio/Per_AdminDomain), 0[meter2]);
	}
}