Template SOMERS_CO2_T : using = "/classifications/Landbouw"
, Descr = "Het registratiesysteem SOMERS (Subsurface Organic Matter Emission Registration System) is ontwikkeld om de landelijke CO2-uitstoot reductie in het veenweidegebied jaarlijks bij te houden. Met SOMERS 2.0 zijn rekenregels opgesteld om de toekomstige uitstoot te bepalen onder gestandaardiseerde omstandigheden."
, URL = "https://www.nobveenweiden.nl/bevindingen-rekenregels/"
{
	parameter<string>  Zichtjaar_name;
	//
	
	parameter<bool>    IsStartYear        := Zichtjaar_name == 'Basisjaar';
	
	parameter<PerceelsbreedteK>        Perceelsbreedte      := PerceelsbreedteK/V/_30_50;
	parameter<WinterdroogleggingK>     Winterdrooglegging   := WinterdroogleggingK/v/min0_1;
	parameter<ZomerdroogleggingK>      Zomerdrooglegging    := ZomerdroogleggingK/v/_0_6;
	parameter<WeerregioK>              Weerregio            := WeerregioK/v/Noordoost;
	parameter<InfiltratieMaatregelK>   InfiltratieMaatregel := InfiltratieMaatregelK/V/Geen_infiltratiemaatregel;
	parameter<KwelsituatieK>           Kwelsituatie         := KwelsituatieK/V/min0_3_0_3_mm_d;
	
	unit<uint32> InfiltratieMaatregelK := unique(Datasheet/InfiltratieMaatregel)
	{
		attribute<string> name := AsItemName(values);
		attribute<string> label := name;
		container V := for_each_nedv(name, 'value('+string(id(.))+', ..)', void, .);
	}
	
	unit<uint32> KwelsituatieK := unique(Datasheet/Kwelsituatie_mm_d_)
	{
		attribute<string> name := AsItemName(replace(values, '<', 'lt', '>', 'gt', ' - ', '_','-0','min0'));
		attribute<string> label := name;
		container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
	}
	
	unit<uint32> WeerregioK := unique(Datasheet/Weerregio)
	{
		attribute<string> name := AsItemName(values);
		attribute<string> label := name;
		container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
	}
	
	unit<uint32> ZomerdroogleggingK := unique(Datasheet/Zomerdrooglegging_m_mv_)
	{
		attribute<string> name := AsItemName(replace(values, ' - ', '_','-0','min0'));
		attribute<string> label := name;
		container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
	}
	
	unit<uint32> WinterdroogleggingK := unique(Datasheet/Winterdrooglegging_m_tov_zomerdrooglegging_)
	{
		attribute<string> name := AsItemName(replace(values, ' - ', '_','-0','min0'));
		attribute<string> label := name;
		container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
	}
	
	unit<uint32> PerceelsbreedteK := unique(Datasheet/Perceelsbreedte_m_)
	{
		attribute<string> name := AsItemName(replace(values, ' - ', '_','-0','min0'));
		attribute<string> label := name;
		container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
	}
	
	unit<uint32> BodemkaartK := BodemkaartKlasse
	{
		attribute<string> name := AsItemName(label);
		container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
	}
	
	unit<uint32> CombinatieTabel := combine(WeerregioK, KwelsituatieK, PerceelsbreedteK, BodemkaartK, InfiltratieMaatregelK, WinterdroogleggingK, ZomerdroogleggingK)
	{
		
	}
	
	attribute<LandbouwK>          gg_Landbouw             (AdminDomain) := BaseData/StartState/Grondgebruik/per_AdminDomain/gg_Landbouw;
	attribute<BodemkaartKlasse>   BodemKaart              (AdminDomain) := SourceData/Bodem/BodemKaart;
	
	attribute<CombinatieTabel>    CombinatieTabel_rel     (AdminDomain) := combine_data(CombinatieTabel, Weerregio, Kwelsituatie, Perceelsbreedte, BodemKaart, InfiltratieMaatregel, Winterdrooglegging, Zomerdrooglegging);
	attribute<float32>            Mediaan_Uitstoot        (AdminDomain) := rjoin(CombinatieTabel_rel, Datasheet/CombinatieTabel_rel, float32(Datasheet/Mediaan));
	
	unit<uint32> Datasheet 
	: StorageName = "%ProjDir%/Data/SOMERS/SOMERS 2.0 Datasheet.csv"
	, StorageType = "gdal.vect"
	, StorageReadOnly = "true"
	{
		attribute<BodemkaartK>            BodemkaartK_rel            := rlookup(BodemType, BodemkaartK/Label);
		attribute<PerceelsbreedteK>       PerceelsbreedteK_rel       := rlookup(Perceelsbreedte_m_, PerceelsbreedteK/values);
		attribute<WinterdroogleggingK>    WinterdroogleggingK_rel    := rlookup(Winterdrooglegging_m_tov_zomerdrooglegging_, WinterdroogleggingK/values);
		attribute<ZomerdroogleggingK>     ZomerdroogleggingK_rel     := rlookup(Zomerdrooglegging_m_mv_, ZomerdroogleggingK/values);
		attribute<WeerregioK>             WeerregioK_rel             := rlookup(Weerregio, WeerregioK/values);
		attribute<KwelsituatieK>          KwelsituatieK_rel          := rlookup(Kwelsituatie_mm_d_, KwelsituatieK/values);
		attribute<InfiltratieMaatregelK>  InfiltratieMaatregelK_rel  := rlookup(InfiltratieMaatregel, InfiltratieMaatregelK/values);
		
		attribute<CombinatieTabel>        CombinatieTabel_rel        := combine_data(CombinatieTabel, WeerregioK_rel, KwelsituatieK_rel, PerceelsbreedteK_rel, BodemkaartK_rel, InfiltratieMaatregelK_rel, WinterdroogleggingK_rel, ZomerdroogleggingK_rel);
		
	}
	
}