container MateriaalStromen
{
	unit<uint8> BT_BC := combine_uint8(BuildingTypes, BouwjaarCohort)
	{
		attribute<BuildingTypes>    BT_rel := first_rel;
		attribute<BouwjaarCohort>   BC_rel := second_rel;
		attribute<string>           name   := BuildingTypes/name[BT_rel] + '_' + BouwjaarCohort/name[BC_rel];
		attribute<string>           Label  := name;
		container V := for_each_nedv(name, String(ID(.))+'[..]', void, .);
	}
	
	unit<uint8>  Materialen : nrofrows = 20
	{
		unit<UInt32> Elements := Range(uint32, 0, nrAttr * #.)
		{
			attribute<String> Text: [
			// Name
			 'Aluminium'             , 'Aluminum',
			 'Baksteen'              , 'Brick',
			 'Beton'                 , 'Concrete',
			 'Bitumen'               , 'Bitumen',
			 'Electronica'           , 'Electronics',
			 'Gips'                  , 'Gypsum',
			 'Glas'                  , 'Glass',
			 'Hout'                  , 'Wood',
			 'Isolatie'              , 'Insulation',
			 'Kalkzandsteen'         , 'Limesandstone',
			 'Keramiek'              , 'Ceramics',
			 'Koper'                 , 'Copper',
			 'Kunststoffen'          , 'Plastics',
			 'Lijm en verf'          , 'Glue and paint',
			 'Overig biobased'       , 'Other biobased',
			 'Overige metalen'       , 'Other biobased',
			 'Papier'                , 'Paper',
			 'Staal en IJzer'        , 'Steel and iron',
			 'Steen'                 , 'Stone',
			 'Zand'                  , 'Sand'
			];
		}
		
		attribute<string> label      := Elements/Text[value(uInt32(id(.))* nrAttr + 0, Elements)];
		attribute<string> label_engl := Elements/Text[value(UInt32(ID(.))* nrAttr + 1, Elements)];
		
		attribute<string> name            := AsItemName(label);
		attribute<string> name_engl       := AsItemName(label_engl);
		container V      := for_each_nedv(name, String(ID(.))+'[..]', void, .);
		container V_engl := for_each_nedv(name_engl, String(ID(.))+'[..]', void, .);
		parameter<uint32> nrAttr := 2;
	}
	
	unit<uint8>  BouwjaarCohort : nrofrows = 5
	{
		attribute<string> label           : ['Voor 1945','1945-1970','1970-2000','2000-2014','2014-2020'];
		attribute<string> label_lookup    : ['<1945'    ,'1945-1970','1970-2000','2000-2014','2014-2020'];
		attribute<int16>  ClassBreaks     : [0, 1945, 1970, 2000];
		attribute<string> name            := AsItemName(label);
		container V := for_each_nedv(name, String(ID(.))+'[..]', void, .);
	}
	
	unit<uint8>  BuildingTypes : nrofrows = 7
	{
		attribute<string> label           : ['detached house','row house','shop','apartment','office','industry','services'];
		attribute<string> label_nl        : ['Vrijstaand','Rijtjeswoning','Winkel','Appartement','Kantoor','Industrie','Services'];
		attribute<string> name            := AsItemName(label);
		container V := for_each_nedv(name, String(ID(.))+'[..]', void, .);
	}
	
	unit<uint8>  Scenarios : nrofrows = 3
	{
		attribute<string> label           : ['Conventioneel','Biobased','Circulair'];
		attribute<string> name            := AsItemName(label);
		container V := for_each_nedv(name, String(ID(.))+'[..]', void, .);
	}
	
	unit<uint8> BT_Sc := combine_uint8(BuildingTypes, Scenarios)
	{
		attribute<BuildingTypes>    BT_rel := first_rel;
		attribute<Scenarios>        Sc_rel := second_rel;
		attribute<string>           name   := BuildingTypes/name[BT_rel] + '_' + Scenarios/name[Sc_rel];
		attribute<string>           Label  := name; 
		container V := for_each_nedv(name, String(ID(.))+'[..]', void, .);
	}
}