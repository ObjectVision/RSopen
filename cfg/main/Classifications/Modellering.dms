container Modellering
{
	unit<uint8> NoData: NrOfrows = 1
	{
		attribute<string> name: ['geen'];
		attribute<string> Label := name, DialogType = "LabelText";
		attribute<uint32> Geen (AllocDomain) := const(0/0, AllocDomain);
	}
	
	unit<uint32> StandVar_Prep := range(uint32, 0, 20)
	{
		attribute<string> name :
		[
			'Aantal_Woningen_Eengezins_VrijeSector'
		,	'Aantal_Woningen_Eengezins_SocialeHuur'
		,	'Aantal_Woningen_Meergezins_VrijeSector'
		,	'Aantal_Woningen_Meergezins_SocialeHuur'
		,	'Banen_Nijverheid'
		,	'Banen_Logistiek'
		,	'Banen_Detailhandel'
		,	'Banen_Ov_consumentendiensten'
		,	'Banen_Zak_dienstverlening'
		,	'Banen_Overheid_kw_diensten'
		,	'Objecten_Verblijfsrecreatie'
		,	'Vermogen_Wind'
		,	'jaartal_ingebruikname_Wind'
		,	'Vermogen_Zon'
		,	'm2PandFootprint_Nijverheid'
		,	'm2PandFootprint_Logistiek'
		,	'm2PandFootprint_Detailhandel'
		,	'm2PandFootprint_Ov_consumentendiensten'
		,	'm2PandFootprint_Zak_dienstverlening'
		,	'm2PandFootprint_Overheid_kw_diensten'
		];
		
		attribute<string> path :
		[
			'Wonen/Eengezins_VrijeSector'
		,	'Wonen/Eengezins_SocialeHuur'
		,	'Wonen/Meergezins_VrijeSector'
		,	'Wonen/Meergezins_SocialeHuur'
		,	'Werken/Nijverheid'
		,	'Werken/Logistiek'
		,	'Werken/Detailhandel'
		,	'Werken/Ov_consumentendiensten'
		,	'Werken/Zak_dienstverlening'
		,	'Werken/Overheid_kw_diensten'
		,	'Verblijfsrecreatie/Totaal'
		,	'Wind/Totaal'
		,	'Wind/jaartal_ingebruikname'
		,	'Zon/Totaal'
		,	'PandFootprint/Nijverheid'
		,	'PandFootprint/Logistiek'
		,	'PandFootprint/Detailhandel'
		,	'PandFootprint/Ov_consumentendiensten'
		,	'PandFootprint/Zak_dienstverlening'
		,	'PandFootprint/Overheid_kw_diensten'
		];
		
		attribute<string> sector_name :
		[
			'Wonen'
		,	'Wonen'
		,	'Wonen'
		,	'Wonen'
		,	'Werken'
		,	'Werken'
		,	'Werken'
		,	'Werken'
		,	'Werken'
		,	'Werken'
		,	'Verblijfsrecreatie'
		,	'Wind'
		,	'Wind'
		,	'Zon'
		,	''
		,	''
		,	''
		,	''
		,	''
		,	''
		];
		
		attribute<string> unit_name :
		[
			'Woning'
		,	'Woning'
		,	'Woning'
		,	'Woning'
		,	'Job'
		,	'Job'
		,	'Job'
		,	'Job'
		,	'Job'
		,	'Job'
		,	'Verblijfsobject'
		,	'MW'
		,	'Yr'
		,	'MW'
		,	'meter2'
		,	'meter2'
		,	'meter2'
		,	'meter2'
		,	'meter2'
		,	'meter2'
		];
		
		attribute<string> value_type :
		[
			'float32'
		,	'float32'
		,	'float32'
		,	'float32'
		,	'float32'
		,	'float32'
		,	'float32'
		,	'float32'
		,	'float32'
		,	'float32'
		,	'float32'
		,	'float32'
		,	'uint16'
		,	'float32'
		,	'float32'
		,	'float32'
		,	'float32'
		,	'float32'
		,	'float32'
		,	'float32'
		];
		
		unit<float32> Woning    := units/Woning;
		unit<float32> Job       := units/Job;
		unit<float32> meter2    := units/meter2;
		
		container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
	}
	
	unit<uint32> DeltaVar_Prep := subset(id(StandVar_Prep) <> StandVar_Prep/V/jaartal_ingebruikname_Wind)
	{
		attribute<string> name := StandVar_Prep/name[Nr_OrgEntity];
		attribute<string> path := StandVar_Prep/path[Nr_OrgEntity];
		attribute<string> sector_name := StandVar_Prep/sector_name[Nr_OrgEntity];
		attribute<string> unit_name := StandVar_Prep/unit_name[Nr_OrgEntity];
		attribute<string> value_type := StandVar_Prep/value_type[Nr_OrgEntity];
		
		unit<float32> Woning    := units/Woning;
		unit<float32> Job       := units/Job;
		unit<float32> meter2    := units/meter2;
	}
	
	unit<uint32> AllCases := combine(AllScenarios, VariantParameters/VariantK)
	{
		attribute<string> Scenario_name := AllScenarios/name[first_rel];
		attribute<string> Variant_name  := VariantParameters/VariantK/name[second_rel];
		attribute<string> name          := Scenario_name+'/'+Variant_name;
		attribute<string> label         := Scenario_name+'_'+Variant_name;
		attribute<bool>   IsBAU         := Variant_name == 'BAU';
		
		unit<uint32> NotBAU := select_with_attr_by_cond(., !IsBAU);
	}
	
	unit<uint8> DomainK: NrOfRows = 2
	{
		attribute<string> name := union_data(., 'AllocDomain', 'AdminDomain');
	}
	
	unit<uint8> AllocRegiosK: NrOfRows = 5
	{
		attribute<string> name: ['NVM', 'Corop', 'Provincie', 'NL', 'RES'];
		attribute<string> label := name, DialogType = "LabelText";
		attribute<string> ref := name;
		
		attribute<AllocRegiosK> parent_rel := union_data(AllocRegiosK
		,	V/Provincie 
		,	V/Provincie
		,	V/NL
		,	uint8(0/0)
		,	V/NL
		);
		
		container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
	}
	
	unit<uint8> OrdeningsCriterium: NrOfRows = 2
	{
		attribute<string> name: ['Geschiktheid', 'Dichtheid'];
		
		container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
	}
	
	unit<uint8> AllScenarios: NrOfRows = 2
	{
		attribute<string> name : ['WLO_laag', 'WLO_hoog'];
		attribute<string> TableRef : ['laag', 'hoog'];
		attribute<bool> IsVoorExport: [false, true];
	}

	unit<uint8> VergelijkRegiosK: NrOfRows = 5
	{
		attribute<string> name: ['LMSSubzone', 'Gemeente', 'NVM', 'COROP', 'Provincie'];
		attribute<string> SrcRef:
		[
			'/Geography/RegioIndelingen/LMSSubzone',
			'/Geography/RegioIndelingen/Gemeente2019_single',
			'/Geography/RegioIndelingen/NVM',
			'/Geography/RegioIndelingen/COROP',
			'/Geography/RegioIndelingen/Provincie'
		];
		
		container V := for_each_nedv(name, 'value('+string(id(.))+', ..)', void, .);
	}
	
	unit<uint32> BBgK: NrOfRows = 2
	{
		attribute<string> name: ['BBG', 'Geen_BBG'];
		attribute<string> Label := name, DialogType = "LabelText";
	}
	
	unit<uint8> DichtheidRegio: NrOfRows = 6
	{
		attribute<string> name: ['Buurt', 'Wijk', 'Gemeente', 'NVM', 'COROP', 'Provincie'];
		attribute<string> SrcRef := 'Regioindelingen/'+ union_data(., 'Buurt/Src_2019', 'Wijk/Src_2019', 'Gemeente2019_single', 'NVM_2011', 'COROP', 'Provincie');
	}
	
	unit<uint8> HardheidK: NrOfRows = 2
	{
		attribute<string> name: ['Hard', 'Zacht'];
	}
	
	unit<uint32> HardheidXDomainK := combine(HardheidK, domainK)
	{
		attribute<string> HardheidK_name := HardheidK/name[first_rel];
		attribute<string> domainK_name := domainK/name[second_rel];
		attribute<string> name := HardheidK_name+'/'+domainK_name;
	}
	
	unit<uint32> MaatregelK: NrOfRows = 3
	{
		attribute<string> name: ['Bouwen', 'Maatregelen', 'NietBouwen'];
		attribute<string> Label := name, DialogType = "LabelText";
		attribute<uint32> BrushColor : DialogType = "BrushColor",
		[
			rgb(127,127,127), rgb(188,184,217), rgb( 63,  0,125)
		];
		
		container V := for_each_nedv(name, string(id(.)) + '[..]', void, .);
	}
}