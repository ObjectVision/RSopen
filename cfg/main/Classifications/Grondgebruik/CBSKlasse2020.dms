unit<uint8> CBS2020Klasse: NrOfRows = 46
{
	unit<Uint32> Elements := Range(uint32, 0, nrAttr * #CBS2020Klasse), IsHidden = "True"
	{
		attribute<string> Text: [ // @USERINPUT
		//   EK2020,        BrushColor,                                    name,                          ,           ,        ,           ,                  ,   ,   ,              ,                           LU_ModelType
				 '0', 'rgb(128,128,128)', 'oorspronkelijk_noData',             'Overigen'                 , 'Overigen'          , 'FALSE', 'Overigen',        'Overigen','0','0',       'Groen',    'Groen', '0','Overig',
				'10', 'rgb(115,76,0)',    'Spoorwegen',                        'Infra'                    , 'Overigen'          , 'FALSE', 'Overigen',        'Bebouwd','4','4',        'Rood',     'Groen', '5','Infra',
				'11', 'rgb(204,0,0)',     'hoofdweg',                          'Infra'                    , 'Overigen'          , 'FALSE', 'Overigen',        'Bebouwd','4','4',        'Rood',     'Groen', '5','Infra',
				'12', 'rgb(109,109,109)', 'Vliegveld',                         'Infra'                    , 'Overigen'          , 'FALSE', 'Overigen',        'Bebouwd','4','4',        'Rood',     'Groen', '5','Infra',
				'13', 'rgb(115,76,50)',   'metro_en_sneltram',                 'Infra'                    , 'Overigen'          , 'FALSE', 'Overigen',        'Bebouwd','4','4',        'Rood',     'Groen', '5','Infra',
				'14', 'rgb(115,76,75)',   'busbaan',                           'Infra'                    , 'Overigen'          , 'FALSE', 'Overigen',        'Bebouwd','4','4',        'Rood',     'Groen', '5','Infra',
				'20', 'rgb(255,102,0)',   'woongebied',                        'woongebied'               , 'Wonen'             , 'FALSE', 'Wonen',           'Bebouwd','1','1',        'Rood',     'Groen', '1','Wonen',
				'21', 'rgb(255,153,51)',  'Detailhandel_en_horeca',            'Detailhandel_en_horeca'   , 'Werken'            , 'FALSE', 'Werken',          'Bebouwd','2','2',        'Rood',     'Paars','11','Werken',
				'22', 'rgb(255,255,153)', 'openbare_Voorzieningen',            'Voorzieningen'            , 'Werken'            , 'FALSE', 'Werken',          'Bebouwd','2','2',        'Rood',     'Paars','10','Werken',
				'23', 'rgb(255,178,102)', 'sociaal_culturele_Voorzieningen',   'Voorzieningen'            , 'Werken'            , 'FALSE', 'Werken',          'Bebouwd','2','2',        'Rood',     'Groen', '8','Werken',
				'24', 'rgb(128,128,128)', 'bedrijfsterreinen',                 'bedrijfsterreinen'        , 'Werken'            , 'FALSE', 'Werken',          'Bebouwd','2','2',        'Rood',     'Paars', '6','Werken',
				'30', 'rgb(153,102,153)', 'stortplaatsen',                     'Overigen'                 , 'Overigen'          , 'FALSE', 'Overigen',        'Bebouwd','2','2',        'Rood',     'Groen','14','Overig',
				'31', 'rgb(153,102,153)', 'wrakkenopslagplaatsen',             'Overigen'                 , 'Overigen'          , 'FALSE', 'Overigen',        'Bebouwd','2','2',        'Rood',     'Groen','14','Overig',
				'32', 'rgb(153,204,102)', 'begraafplaats',                     'begraafplaats'            , 'Overigen'          , 'FALSE', 'Stedelijk_groen', 'Bebouwd','2','2',        'Rood',     'Groen','12','Overig',
				'33', 'rgb(155,155,255)', 'delfstoffenwinning',                'Overigen'                 , 'Overigen'          , 'FALSE', 'Overigen',        'Bebouwd','2','2',        'Rood',     'Groen','14','Overig',
				'34', 'rgb(255,211,127)', 'bouwterrein',                       'Overigen'                 , 'Overigen'          , 'FALSE', 'Overigen',        'Bebouwd','3','3',        'Rood',     'Groen', '7','Overig',
				'35', 'rgb(254,250,194)', 'semiverhard_overig_terrein',        'Infra'                    , 'Overigen'          , 'FALSE', 'Overigen',        'Bebouwd','2','2',        'Rood',     'Groen', '9','Infra',
				'36', 'rgb(255,230,102)', 'zonnepark',                         'Energie'                  , 'Overigen'          , 'FALSE', 'Overigen',        'Bebouwd','2','2',        'Rood',     'Groen', '9','Zon',
				'40', 'rgb(177,214,0)',   'parken_en_plantsoenen',             'parken_en_plantsoenen'    , 'Overigen'          , 'FALSE', 'Stedelijk_groen', 'Bebouwd','5','5',        'Rood',     'Groen','12','Overig',
				'41', 'rgb(153,204,0)',   'sportterreinen',                    'sportterreinen'           , 'Overigen'          , 'FALSE', 'Stedelijk_groen', 'Bebouwd','5','5',        'Rood',     'Groen','12','Overig',
				'42', 'rgb(174,151,75)',  'volkstuinen',                       'volkstuinen'              , 'Overigen'          , 'FALSE', 'Stedelijk_groen', 'Bebouwd','5','5',        'Rood',     'Groen','12','Overig',
				'43', 'rgb(204,255,153)', 'dagrecreatieve_terreinen',          'dagrecreatieve_terreinen' , 'Overigen'          , 'FALSE', 'Stedelijk_groen', 'Bebouwd','2','2',        'Rood',     'Groen', '4','Overig',
				'44', 'rgb(178,255,102)', 'Verblijfsrecreatie',                'Verblijfsrecreatie'       , 'Verblijfsrecreatie', 'FALSE', 'Stedelijk_groen', 'Bebouwd','2','2',        'Rood',     'Groen', '4','Verblijfsrec',
				'50', 'rgb(204,153,153)', 'Glastuinbouw',                      'Overigen'                 , 'Overigen'          , 'FALSE', 'Werken',          'Bebouwd','6','6',        'Groen',    'Groen', '2','Overig',
				'51', 'rgb(233,255,190)', 'overige_agrarisch_gebruik',         'overige_agrarisch_gebruik', 'Overigen'          , 'FALSE', 'Landelijk_groen', 'Agrarisch','6','7',      'Groen',    'Groen', '2','',
				'52', 'rgb(230,184,135)', 'akker_en_meerjarige_teelt',         'overige_agrarisch_gebruik', 'Overigen'          , 'FALSE', 'Landelijk_groen', 'Agrarisch','6','7',      'Groen',    'Groen', '2','',
				'53', 'rgb(180,230,150)', 'agrarisch_grasland',                'overige_agrarisch_gebruik', 'Overigen'          , 'FALSE', 'Landelijk_groen', 'Agrarisch','6','7',      'Groen',    'Groen', '2','',
				'60', 'rgb(103,174,0)',   'bos',                               'Natuur'                   , 'Overigen'          , 'FALSE', 'Landelijk_groen', 'Natuur','7','8',         'Groen',    'Groen', '3','Natuur',
				'61', 'rgb(170,255,220)', 'droog_natuurlijk_terrein',          'Natuur'                   , 'Overigen'          , 'FALSE', 'Landelijk_groen', 'Natuur','7','9',         'Groen',    'Groen', '3','Natuur',
				'62', 'rgb(170,255,220)', 'nat_natuurlijk_terrein',            'Natuur'                   , 'Overigen'          , 'FALSE', 'Landelijk_groen', 'Natuur','7','9',         'Groen',    'Groen', '3','Natuur',
				'63', 'rgb(170,255,220)', 'natuurlijk_grasland',               'Natuur'                   , 'Overigen'          , 'FALSE', 'Landelijk_groen', 'Natuur','7','9',         'Groen',    'Groen', '3','Natuur',
				'64', 'rgb(170,255,220)', 'kustduinen',                        'Natuur'                   , 'Overigen'          , 'FALSE', 'Landelijk_groen', 'Natuur','7','9',         'Groen',    'Groen', '3','Natuur',
				'70', 'rgb(153,204,255)', 'IJsselmeer_Markermeer',             'Water'                    , 'Overigen'          , 'TRUE',  'Overigen',        'Water','8','10',         'Groen',    'Groen','13','Water',
				'71', 'rgb(102,178,255)', 'afgesloten_zeearm',                 'Water'                    , 'Overigen'          , 'TRUE',  'Overigen',        'Water','8','10',         'Groen',    'Groen','13','Water',
				'72', 'rgb(153,204,255)', 'Rijn_en_Maas',                      'Water'                    , 'Overigen'          , 'TRUE',  'Overigen',        'Water','8','10',         'Groen',    'Groen','13','Water',
				'73', 'rgb(102,178,255)', 'Randmeer',                          'Water'                    , 'Overigen'          , 'TRUE',  'Overigen',        'Water','8','10',         'Groen',    'Groen','13','Water',
				'74', 'rgb(153,204,255)', 'spaarbekkens',                      'Water'                    , 'Overigen'          , 'FALSE', 'Overigen',        'Water','8','10',         'Groen',    'Groen','13','Water',
				'75', 'rgb(153,204,255)', 'water_met_een_recreatieve_functie', 'Water'                    , 'Overigen'          , 'FALSE', 'Overigen',        'Water','8','10',         'Groen',    'Groen','13','Water',
				'76', 'rgb(153,204,255)', 'water_met_delfstofwinningsfunctie', 'Water'                    , 'Overigen'          , 'FALSE', 'Overigen',        'Water','8','10',         'Groen',    'Groen','13','Water',
				'77', 'rgb(153,204,255)', 'vloei_en_of_slibveld',              'Water'                    , 'Overigen'          , 'FALSE', 'Overigen',        'Water','2','2',          'Groen',    'Groen','13','Water',
				'78', 'rgb(153,204,255)', 'overig_binnenwater',                'Water'                    , 'Overigen'          , 'FALSE', 'Overigen',        'Water','8','10',         'Groen',    'Groen','13','Water',
				'80', 'rgb(153,204,255)', 'Waddenzee_Eems_Dollard',            'Water'                    , 'Overigen'          , 'TRUE',  'Overigen',        'Water','9','11',         'Groen',    'Groen','13','Water',
				'81', 'rgb(153,204,255)', 'Oosterschelde',                     'Water'                    , 'Overigen'          , 'TRUE',  'Overigen',        'Water','8','10',         'Groen',    'Groen','13','Water',
				'82', 'rgb(153,204,255)', 'Westerschelde',                     'Water'                    , 'Overigen'          , 'TRUE',  'Overigen',        'Water','8','10',         'Groen',    'Groen','13','Water',
				'83', 'rgb(153,204,255)', 'Noordzee',                          'Water'                    , 'Overigen'          , 'TRUE',  'Overigen',        'Water','9','11',         'Groen',    'Groen','13','Water', 
				 '0', 'rgb(255,255,255)', 'buitenland',                        'Overigen'                 , 'Overigen'          , 'FALSE', 'Overigen',        'Buitenland','0','',      'Groen',    'Groen', '0','Overig'
		], DialogType = "BrushColor";
	}
	attribute<CBS2020KlasseEK> EK2020                := value(Elements/Text[value(Uint32(id(.))* nrAttr + 0, Elements)], CBS2020KlasseEK);     //[0,10,11,12,20,21,22,23,24,30,31,32,33,34,35,40,41,42,43,44,50,51,60,61,62,70,71,72,73,74,75,76,77,78,80,81,82,83, 0];
	attribute<uint32>          BrushColor            := ='union_data(., '+AsItemList(Elements/Text[value(Uint32(id(.))* nrAttr + 1, Elements)])+')', DialogType = "BrushColor";
	attribute<string>          name                  := Elements/Text[value(Uint32(id(.))* nrAttr + 2, Elements)];
	attribute<string>          Aggr_ref              := Elements/Text[value(Uint32(id(.))* nrAttr + 3, Elements)];
	attribute<string>          Sector_ref            := Elements/Text[value(Uint32(id(.))* nrAttr + 4, Elements)];
	attribute<bool>            IsGrootWater          := bool(Elements/Text[value(Uint32(id(.))* nrAttr +  5, Elements)]);
	attribute<string>          Aggr2_ref             := Elements/Text[value(Uint32(id(.))* nrAttr + 6, Elements)];
	// attribute<string>          Aggr3_ref             := Elements/Text[value(Uint32(id(.))* nrAttr + 7, Elements)];

	attribute<uint8>           gg_10k_rel            := Elements/Text[value(Uint32(id(.))* nrAttr + 8, Elements)][uint8];
	attribute<uint8>           gg_12k_rel            := Elements/Text[value(Uint32(id(.))* nrAttr + 9, Elements)][uint8];
	// attribute<string>          Aggr4_ref             := Elements/Text[value(Uint32(id(.))* nrAttr + 10, Elements)];
	// attribute<string>          Aggr5_ref             := Elements/Text[value(Uint32(id(.))* nrAttr + 11, Elements)];
	// attribute<gg_RuimtebeslagRapport> gg_RuimtebeslagRapport_rel := Elements/Text[value(Uint32(id(.))* nrAttr + 12, Elements)][uint8];
	attribute<string>          LU_ModelType          := Elements/Text[value(Uint32(id(.))* nrAttr + 13, Elements)];
	attribute<Actor/LU_ModelType> LU_ModelType_rel   := rlookup(lowercase(LU_ModelType), lowercase(Actor/LU_ModelType/Sector_name));
	attribute<Aggr2>           Aggr2_rel             := rlookup(lowercase(Aggr2_ref), lowercase(Aggr2/name));
	// attribute<Aggr3>           Aggr3_rel             := rlookup(Aggr3_ref, Aggr3/name);
	// attribute<Aggr4>           Aggr4_rel             := rlookup(Aggr4_ref, Aggr4/name);
	// attribute<Aggr5>           Aggr5_rel             := rlookup(Aggr5_ref, Aggr5/name);

	attribute<Aggr>            Aggr_rel              := rlookup(lowercase(Aggr_ref), lowercase(Aggr/name));
	attribute<Actor/Sector>    Sector_rel            := rlookup(lowercase(Sector_ref), lowercase(Actor/Sector/name));
	// attribute<Sector>          Sector_rel2           := rlookup(Sector_ref, Sector/name);
	attribute<string>          Label                 := name, DialogType = "LabelText";
	// attribute<bool>            IsGrootschaligeInfra  := Aggr_rel == Aggr/V/Infra || id(.) == V/afgesloten_zeearm || id(.) == V/Rijn_en_Maas || id(.) == V/Randmeer;
	// attribute<bool>            TXLUitleglocatie      := Aggr_rel == Aggr/V/Natuur || Aggr_rel == Aggr/V/overige_agrarisch_gebruik || Aggr_rel == Aggr/V/Overigen || Aggr_rel == Aggr/V/Water;
	// attribute<bool>            TXLInbreidingslocatie := !TXLUitleglocatie;
	attribute<bool> IsExogeen    := Aggr_rel == Aggr/v/infra ||  Aggr_rel == Aggr/v/begraafplaats;

	attribute<bool> IsWoonlocatie := id(.) == V/woongebied;
	attribute<bool> IsWerklocatie :=
		id(.) == V/Detailhandel_en_horeca          ||
		id(.) == V/openbare_Voorzieningen          ||
		id(.) == V/sociaal_culturele_Voorzieningen ||
		id(.) == V/bedrijfsterreinen;
		
	attribute<bool> IsStedelijkBreed := IsWoonlocatie || IsWerklocatie || id(.) == V/Vliegveld;
	
	// attribute<bool> IsStedelijk := IsWoonlocatie || IsWerklocatie;
	// attribute<bool> IsWaterOfBuitenland := id(.) > 24[.];
	attribute<bool> IsNatuur := id(.) == V/bos || id(.) == V/droog_natuurlijk_terrein || id(.) == V/nat_natuurlijk_terrein;
	attribute<bool> IsLandbouw := id(.) == V/overige_agrarisch_gebruik;
	attribute<bool> IsGroen (.) := id(.) == V/parken_en_plantsoenen || id(.) == V/volkstuinen || id(.) == V/dagrecreatieve_terreinen || IsLandbouw || IsNatuur;
	attribute<bool> IsGroen_breed (.) := IsNatuur || IsLandbouw || id(.) == V/parken_en_plantsoenen || id(.) == V/volkstuinen;
	
	// attribute<bool> IsWaterOfBuitenland := id(.) >= V/IJsselmeer_Markermeer;
	// attribute<bool> IsLandWater := id(.) != V/buitenland;
	// attribute<bool> IsWater := IsLandWater && IsWaterOfBuitenland;
	// attribute<bool> IsLand  := IsLandWater && !IsWater;
	// attribute<bool> IsNoordZeeWaddenRijnMaas := id(.) == V/Waddenzee_Eems_Dollard || id(.) == V/NoordZee || id(.) == V/Rijn_en_Maas;
	
	// attribute<bool> IsGroen_intensief :=
		// id(.) == V/bos ||
		// id(.) == V/droog_natuurlijk_terrein ||
		// id(.) == V/nat_natuurlijk_terrein ||
		// id(.) == V/volkstuinen ||
		// id(.) == V/dagrecreatieve_terreinen;
		
	// attribute<bool> IsGroen_ZeerIntensief :=
		// id(.) == V/Verblijfsrecreatie ||
		// id(.) == V/parken_en_plantsoenen ||
		// id(.) == V/sportterreinen ||
		// id(.) == V/begraafplaats;
		
	parameter<uint32> nrAttr := 14;
	
		
		
	unit<uint8> gg_10K: NrOfRows = 10
	{
		attribute<string> Label:    [
		'OSA_',
		'residential',
		'otherbuiltup',
		'construction',
		'infrastructure',
		'urbangreen',
		'agriculture',
		'nature',
		'water',
		'exteriorwater'],
		DialogType = "LabelText";
		attribute<string> name := replace(Label, ' ', '_');
		container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
	}
	
	unit<uint8> gg_12K: NrOfRows = 12
	{
		attribute<string> Label:    [
		'OSA_', 
		'residential',
		'otherbuiltup',
		'construction',
		'infrastructure',
		'urbangreen',
		'greenhouses',
		'agriculture',
		'forest',
		'othernature',
		'water',
		'exteriorwater'],
		DialogType = "LabelText";
		attribute<string> name := replace(Label, ' ', '_');
		container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
	}
	
	unit<uint8> gg_12K_wo_OSA := select_with_org_rel(lowercase(gg_12K/name) != lowercase('OSA_'))
	{
		attribute<string> Label := gg_12K/Label[org_rel];
		attribute<string> name := gg_12K/name[org_rel];
		container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
	}

	unit<uint8> Aggr := unique(Aggr_ref)
	{
		attribute<string> name := values;
		attribute<string> Label := name, DialogType = "LabelText";
		attribute<uint32> BrushColor:
		[
			rgb(128,129,150),
			rgb(245,255,217),
			rgb(0,179,89),
			rgb(255,235,215),
			rgb(121, 255,121),
			rgb(121, 255,121),
			rgb(121, 255,121),
			rgb(121, 255,121),
			rgb(121, 255,121),
			rgb(121, 255,121),
			rgb(183,183,255),
			rgb(213, 234,255),
			rgb(255,149,255),
			rgb(255,128,0),
			rgb(255,128,0),
			rgb(255,60,60)
		];

		attribute<bool> IsGroen (.) :=
			id(.) == V/Begraafplaats ||
			id(.) == V/parken_en_plantsoenen ||
			id(.) == V/sportterreinen ||
			id(.) == V/volkstuinen ||
			id(.) == V/dagrecreatieve_terreinen ||
			id(.) == V/overige_agrarisch_gebruik ||
			id(.) == V/natuur;
			
		attribute<..> CBSKlasse_rel := invert(../Aggr_rel);
		attribute<Actor/Sector> Sector_rel := ../Sector_rel[CBSKlasse_rel];
		
		container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
		
		unit<uint8> Groen := select_with_org_rel(IsGroen)
		{
			attribute<string> name := Aggr/name[org_rel];
			attribute<string> Label := Aggr/Label[org_rel], DialogType = "LabelText";
			attribute<uint32> BrushColor := Aggr/BrushColor[org_rel], DialogType = "BrushColor";
			attribute<CBSKlasse> CBSKlasse_rel := Aggr/CBSKlasse_rel[org_rel];
			
			container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
		}
	}
	
	unit<uint8> Aggr2 := unique(Aggr2_ref)
	{
		attribute<string> name := values;
		attribute<string> Label := name, DialogType = "LabelText";
		attribute<uint32> BrushColor:
		[
			rgb(128,129,150),
			rgb(245,255,217),
			rgb(0,179,89),
			rgb(255,235,215),
			rgb(121, 255,121)
		];
		
		attribute<CBSKlasse> CBSKlasse_rel := invert(CBSKlasse/Aggr2_rel);
		attribute<Aggr> Aggr_rel := CBSKlasse/Aggr_rel[CBSKlasse_rel];
		
		container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
	}
	
	// unit<uint8> Aggr3 := unique(Aggr3_ref)
	// {
		// attribute<string> name := values;
		// attribute<string> Label := name, DialogType = "LabelText";
		// attribute<uint32> BrushColor:
		// [
			// rgb(128,129,150),
			// rgb(245,255,217),
			// rgb(254, 50,0),
			// rgb(103,174,0),
			// rgb(128,128,128),
			// rgb(151,219,242)
		// ];
		
		// attribute<CBSKlasse> CBSKlasse_rel := invert(CBSKlasse/Aggr3_rel);
		
		// container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
	// }
	
	// unit<uint8> Aggr4 := unique(Aggr4_ref)
	// {
		// attribute<string> name := values;
		// attribute<string> Label := name, DialogType = "LabelText";
		// attribute<uint32> BrushColor:
		// [
			// rgb(128,129,150),
			// rgb(245,255,217)
		// ];
		
		// attribute<CBSKlasse> CBSKlasse_rel := invert(CBSKlasse/Aggr4_rel);
		
		// container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
	// }
	
	// unit<uint8> Aggr5 := unique(Aggr5_ref)
	// {
		// attribute<string> name := values;
		// attribute<string> Label := name, DialogType = "LabelText";
		// attribute<uint32> BrushColor:
		// [
			// rgb(128,129,150),
			// rgb(255,  0,220)
		// ];
		
		// attribute<CBSKlasse> CBSKlasse_rel := invert(CBSKlasse/Aggr5_rel);
		
		// container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
	// }
	
	// unit<uint8> Sector := unique(Sector_ref)
	// {
		// attribute<string> name := values;
		// attribute<string> Label := name, DialogType = "LabelText";
		// attribute<uint32> BrushColor:
		// [
			// rgb(192,192,192),
			// rgb(102,  0,  0),
			// rgb(255,152,255),
			// rgb(255,  0,  0)
		// ];
		
		// attribute<CBSKlasse> CBSKlasse_rel := invert(CBSKlasse/Sector_rel2);
		// attribute<Classifications/TotaalLandgebruik> TL_rel : [3,2,1,0];

		// container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
	// }

	
	container V := for_each_nedv(name, string(id(.))+'[..]', void, .);
}