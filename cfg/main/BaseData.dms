////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Dit is RSOpen, de open source versie van het model RuimteScanner. Het scipt wordt uitgegeven onder GNU-GPL licentie.
//
// RSOpen is ontwikkeld door PBL Planbureau voor de Leefomgeving, i.s.m Object Vision B.V. en VU Vrije Universiteit Amsterdam.
// Opdrachtgever/ontwikkelaar PBL: Bart Rijken
// Contactpersoon/ontwikkelaar Object Vision B.V.: Jip Claassens (jclaassens@objectvision.nl)
// Contacpersoon PBL: Bas van Bemmel (Bas.vanBemmel@pbl.nl)
//
// Deze file bevat de zgn. baseData die het model nodig heeft voor de verschillende berekeningen/analyses. BaseData zijn altijd afgeleid van de SourceData en soms ontkoppeld (geexporteerd vanuit SourceData).
// De Data worden on-the-fly gegenereerd of, indien reeds gegenereerd (ontkoppeld), ingelezen vanuit de LocalDataDir.
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

container BaseData: using = "Classifications;Units;Geography;ModelParameters"
{
	container BAG_ModelJaar  := = 'SourceData/Vastgoed/BAG/PerJaar/Y'+string(ModelParameters/Model_StartYear);
	container BAG_RecentJaar := = 'SourceData/Vastgoed/BAG/PerJaar/Y'+string(BAG_RecentYear);
	
	container StartState
	{
		#include<StateBasisjaar.dms>
		#include<PandFootprint.dms>
		#include<BAG_nieuwbouw.dms>
		#include<Grondgebruik.dms>
		#include<Eigendom.dms>
		#include<Verdeling_VSSH.dms>
		#include<AlternatieveLISA.dms>
		
		#include<VerblijfsrecreatieTrends.dms> //trends berekening tbv claims
		
		// container Landgebruikskaart := Templates/Landgebruikskaart/Make_Landgebruikskaart_Basisjaar_T('Basisjaar', StateBasisjaar/State, BaseData/StartState/Grondgebruik/Per_AdminDomain/gg_basis);
		
		attribute<Verblijfsobject> VBOs_ModelJaar (AdminDomain) := count(BAG_ModelJaar/vbo/geometry, BAG_ModelJaar/vbo/AdminDomain_rel)[Verblijfsobject]
		{
			attribute<m2_vbo> Oppervlakte (AdminDomain) := sum(BAG_ModelJaar/VBO/oppervlakte_trunc, BAG_ModelJaar/VBO/AdminDomain_rel)
			{
				container Per_gebruiksdoel :=
					for_each_nedv(
						Vastgoed/vbo_gebruiksdoel/name,
						'sum(
							BAG_ModelJaar/VBOs/GebruiksdoelSets/'+Vastgoed/vbo_gebruiksdoel/name+'/GebruiksdoelSet/oppervlakte_trunc,
							BAG_ModelJaar/VBOs/GebruiksdoelSets/'+Vastgoed/vbo_gebruiksdoel/name+'/GebruiksdoelSet/AdminDomain_rel 
						)',
						AdminDomain, m2_vbo
				);
			}
			
			container Per_gebruiksdoelSrc :=
				for_each_nedv(
					Vastgoed/vbo_gebruiksdoel/name
					,'BAG_ModelJaar/VBOs/GebruiksdoelSets/'+Vastgoed/vbo_gebruiksdoel/name+'/GebruiksdoelSet/count_Per_AdminDomain'
					, AdminDomain
					, Verblijfsobject
			);
			
			container Per_gebruiksdoel :=
				for_each_nedv(
					Vastgoed/vbo_gebruiksdoel/name
					,'Per_gebruiksdoelSrc/'+Vastgoed/vbo_gebruiksdoel/name+' / AdminDomain/NrHaPerCell'
					, AdminDomain
					, vbo_ha
			);
		}
	}
	container Densities
	{
		#include<PandFootprint_baan.dms>
	}
	container Omgeving
	{
		#include<OV_Reistijd.dms>
		unit<uint32> RondBevolkingskern := SourceData/RegioIndelingen/Bevolkingskern_2011
		{
			// attribute<bool> Is300kPlus (AllocDomain) := Maak_PopK_Buffers/isMeerdan300Kinw/select/split_geometry/MetBuffer/Is_Buffer, Label = "300K"; 
			attribute<bool> Is100kPlus (AllocDomain) := Maak_PopK_Buffers/isMeerdan100Kinw/select/split_geometry/MetBuffer/Is_Buffer, Label = "100K";
			// attribute<bool> Is50kPlus  (AllocDomain) := Maak_PopK_Buffers/isMeerdan50Kinw/select/split_geometry/MetBuffer/Is_Buffer, Label = "50K";
			// attribute<bool> Is50kMin   (AllocDomain) := Maak_PopK_Buffers/isMinderdan50Kinw/select/split_geometry/MetBuffer/Is_Buffer, Label = "50K";
			attribute<bool> Is20kPlus  (AllocDomain) := Maak_PopK_Buffers/isMeerdan20Kinw/select/split_geometry/MetBuffer/Is_Buffer, Label = "25K";
			attribute<bool> Is20kMin   (AllocDomain) := Maak_PopK_Buffers/isMinderdan20Kinw/select/split_geometry/MetBuffer/Is_Buffer, Label = "20K";
			// attribute<bool> Is5kPlus   (AllocDomain) := Maak_PopK_Buffers/isMeerdan5Kinw/select/split_geometry/MetBuffer/Is_Buffer, Label = "5K";
		}
		
		attribute<float32> BelevingLandschap (AllocDomain) := SourceData/Diversen/Per_AllocDomain/BelevingLandschap/NoMissing
		{
			attribute<bool> IsKleinerDanZesPunt5  (AllocDomain) := . < 6.5f;
			attribute<bool> IsGroterDanZeven      (AllocDomain) := . > 7.0f;
			attribute<bool> IsGroterDanZevenPunt3 (AllocDomain) := . > 7.3f;
			attribute<bool> IsZeerLaag            (AllocDomain) := IsKleinerDanZesPunt5;
			attribute<bool> IsLaag                (AllocDomain) := !IsHoog;
			attribute<bool> IsHoog                (AllocDomain) := IsGroterDanZeven;
			attribute<bool> IsZeerHoog            (AllocDomain) := IsGroterDanZevenPunt3;
			attribute<bool> IsZeerZeerHoog        (AllocDomain) := . > 7.6f;
			attribute<float32> Potential          (AllocDomain) := potential(., Distmatrices/Impl_100m/pot2000m/PotRange/rev_dist_scaled) / sum(Distmatrices/Impl_100m/pot2000m/PotRange/rev_dist_scaled)
			{
				attribute<bool> IsGroterDanZeven      (AllocDomain) := . >= 7.0f;
				attribute<bool> IsGroterDanZevenPunt3 (AllocDomain) := . >= 7.3f;
				attribute<bool> IsHoog                (AllocDomain) := IsGroterDanZeven
				{
					attribute<bool> EnBelevingIsNietHoog (AllocDomain) := IsHoog && !BelevingLandschap/IsHoog;
					attribute<bool> EnBelevingIsLaag     (AllocDomain) := IsHoog && BelevingLandschap/IsLaag;
				}
				
				attribute<bool> IsZeerHoog (AllocDomain) := IsGroterDanZevenPunt3
				{
					attribute<bool> EnBelevingIsNietHoog (AllocDomain) := IsZeerHoog && !BelevingLandschap/IsHoog;
				}
			}
		}
		attribute<Classifications/Overstromingsgevaarzonering/zoneringK> Overstromingsgevaarzonering (AdminDomain) := SourceData/Water/Overstromingsgevaarzonering;
		
		attribute<meter> Overstromingsdiepte              (AdminDomain) := value(SourceData/Water/dieptekaart == -9999f ? const(0f, AdminDomain) : SourceData/Water/dieptekaart, meter);
		attribute<bool> HogeGronden                       (AdminDomain) := !(Overstromingsdiepte > 0[meter]);
		attribute<bool> Gebiedsreservering                (AdminDomain) := SourceData/Omgevingsrecht/AMvB/NL_IMRO_0000_BZKamGCBarro_5025/Kaart4/Gebiedsreservering/Multi/Result;
		attribute<bool> Stroomvoerend_deel_rivierbed      (AdminDomain) := SourceData/Omgevingsrecht/AMvB/NL_IMRO_0000_BZKamGCBarro_5025/Kaart4/Stroomvoerend_deel_rivierbed/Multi/Result;
		attribute<bool> N2K1000mBuffer0                   (AdminDomain) := ='potential(float32(SourceData/Omgevingsrecht/EU/Natura2000/Result_AdminDomain), /Geography/Distmatrices_'+AdminDomain_ref_short+'/pot1000m/Flat2) > 0f && !SourceData/Omgevingsrecht/EU/Natura2000/Result_AdminDomain';
		attribute<bool> GrootWater1500mBuffer             (AllocDomain) := ='potential(float32(StartState/Grondgebruik/Per_AllocDomain/IsGrootWater),        /Geography/Distmatrices_'+AllocDomain_ref_short+'/pot1500m/Flat2) > 0f';
		attribute<bool> N2K1000mBuffer                    (AdminDomain) := N2K1000mBuffer0 && !GrootWater1500mBuffer[AdminDomain/AllocDomain_rel];
		// attribute<bool> Nationale_parken_van_wereldklasse (AllocDomain) := SourceData/Landschap/Nationale_parken_van_wereldklasse/IsNationaalParkWereldklasse;
		// attribute<bool> VanGoghNationaalPark              (AllocDomain) := SourceData/Landschap/VanGoghNationaalPark/IsVanGoghNationaalPark;
		// attribute<bool> Pampus                            (AllocDomain) := SourceData/Plancapaciteit/Wonen/NieuweNieuweKaart/Fijn/IsPampus/Per_AllocDomain;
		
		attribute<bool> BBG (AllocDomain) := IsDefined(SourceData/RegioIndelingen/Bevolkingskern_2011/Per_AllocDomain), Descr = "Begrenzing Bebouwd Gebied"
		{
			attribute<bool> Per_AdminDomain (AdminDomain) := IsDefined(SourceData/RegioIndelingen/Bevolkingskern_2011/Per_AdminDomain);
		}
	}
	
	#include<Suitabilities.dms>
	container Restricties
	{
		#include<Afleiding_Winkelcentra.dms>
	}
	
	#include<Zonneladder.dms>
}